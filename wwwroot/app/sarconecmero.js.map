{"version":3,"sources":["src/app-constants.ts","src/components/nav-menu/nav-menu.component.ts","src/components/components.ts","src/services/user-settings.ts","src/common/event-block.ts","src/maps/components/map/view-manager.ts","src/maps/components/map/interactions/cursor-position.ts","src/maps/components/map/interactions/location-picker.ts","src/maps/components/map/map.ts","src/maps/components/layer-picker/layer-picker.component.ts","src/maps/components/map-toolbar/map-toolbar.component.ts","src/services/dal/definitions.ts","src/chrono/definitions.ts","src/pers/definitions.ts","src/ops/definitions.ts","src/ops/definitions-summary.ts","src/ops/definitions-details.ts","src/maps/services/icon-service.ts","src/maps/maps.ts","src/pages/layout/layout.page.ts","src/pages/main/main.page.ts","src/pages/sites/sites.page.ts","src/ops/components/site-localisation/site-localisation.component.ts","src/ops/components/site-ops-map/site-ops-map.component.ts","src/pers/components/personne/personne.component.ts","src/ops/components/site-operations/site-operations.component.ts","src/sarcos/components/panneaux-site-list/panneaux-site-list.component.ts","src/pages/site-details/site-details.page.ts","src/services/toast-service.ts","src/pages/site-edit/site-edit.page.ts","src/pages/pages.ts","src/services/services.ts","src/ops/components/site-archeo-list/site-archeo-list.component.ts","src/ops/ops.ts","src/services/dal/entity-set.ts","src/services/dal/db-context.ts","src/services/dal/entity-base.ts","src/chrono/models/phase-chronologique.ts","src/chrono/dal/phase-chronologique-set.ts","src/chrono/components/phases-chronologiques/phases-chronologiques.component.ts","src/chrono/chrono.ts","src/pers/models/personne.ts","src/pers/dal/personne-set.ts","src/pers/models/organisme.ts","src/pers/dal/organisme-set.ts","src/pers/pers.ts","src/sarcos/sarcos.ts","src/bootstrap.ts","src/ops/models/commune.ts","src/ops/dal/commune-set.ts","src/ops/models/departement.ts","src/ops/dal/departement-set.ts","src/ops/dal/operation-archeo-set.ts","src/ops/dal/site-archeo-set.ts","src/ops/models/operation-archeo.ts","src/ops/models/site-archeo.ts"],"names":[],"mappings":";;;;;AAAA,IAAO,GAAG,CA2CT;AA3CD,WAAO,GAAG,EAAC,CAAC;IACX;QAAA;QAyCA,CAAC;QAvCA,sBAAkB,gCAAgB;iBAAlC;gBACC,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;;;WAAA;QAED,sBAAkB,+BAAe;iBAAjC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;YACvC,CAAC;;;WAAA;QAED,sBAAkB,sCAAsB;iBAAxC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;YAC9C,CAAC;;;WAAA;QAED,sBAAkB,iCAAiB;iBAAnC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACzC,CAAC;;;WAAA;QAED,sBAAkB,oCAAoB;iBAAtC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;YAC5C,CAAC;;;WAAA;QAED,sBAAkB,gCAAgB;iBAAlC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;YACxC,CAAC;;;WAAA;QAED,sBAAkB,+BAAe;iBAAjC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;YACvC,CAAC;;;WAAA;QAED,sBAAkB,gCAAgB;iBAAlC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;YACxC,CAAC;;;WAAA;QAED,sBAAkB,kCAAkB;iBAApC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAC1C,CAAC;;;WAAA;QAED,sBAAkB,kCAAkB;iBAApC;gBACC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;YAC1C,CAAC;;;WAAA;QACF,mBAAC;IAAD,CAzCA,AAyCC,IAAA;IAzCY,gBAAY,eAyCxB,CAAA;AACF,CAAC,EA3CM,GAAG,KAAH,GAAG,QA2CT;AC3CD,8DAA8D;AAC9D,oEAAoE;AAEpE,IAAO,GAAG,CAiCT;AAjCD,WAAO,GAAG;IAAC,IAAA,UAAU,CAiCpB;IAjCU,WAAA,UAAU,EAAC,CAAC;QACnB;YAGI,oBAAoB,MAA8B;gBAA9B,WAAM,GAAN,MAAM,CAAwB;gBAC9C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAChE,CAAC;YAEO,gCAAW,GAAnB,UAAoB,SAAiB;gBACjC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACb,mBAAmB;oBACnB,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBAED,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChB,KAAK,MAAM;wBACP,MAAM,CAAC,MAAM,CAAC;oBAClB,KAAK,OAAO,CAAC;oBACb,KAAK,cAAc,CAAC;oBACpB,KAAK,WAAW;wBACZ,MAAM,CAAC,OAAO,CAAC;oBACnB;wBACI,MAAM,CAAC,MAAM,CAAC;gBACtB,CAAC;YACL,CAAC;YACL,iBAAC;QAAD,CAxBA,AAwBC,IAAA;QAED,YAAY;QACZ,OAAO,CAAC,MAAM,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,EAAE;YAC9D,WAAW,EAAE,kDAAkD;YAC/D,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;IACP,CAAC,EAjCU,UAAU,GAAV,cAAU,KAAV,cAAU,QAiCpB;AAAD,CAAC,EAjCM,GAAG,KAAH,GAAG,QAiCT;ACpCD,2DAA2D;AAC3D,4CAA4C;AAC5C,uDAAuD;AAEvD,IAAO,GAAG,CAIT;AAJD,WAAO,GAAG;IAAC,IAAA,UAAU,CAIpB;IAJU,WAAA,UAAU,EAAC,CAAC;QACtB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,sBAAsB,EAAE;YACvD,wBAAwB;SACxB,CAAC,CAAC;IACJ,CAAC,EAJU,UAAU,GAAV,cAAU,KAAV,cAAU,QAIpB;AAAD,CAAC,EAJM,GAAG,KAAH,GAAG,QAIT;ACRD,2DAA2D;AAE3D,IAAO,GAAG,CA8GT;AA9GD,WAAO,GAAG;IAAC,IAAA,QAAQ,CA8GlB;IA9GU,WAAA,QAAQ;QAAC,IAAA,QAAQ,CA8G3B;QA9GmB,WAAA,QAAQ,EAAC,CAAC;YAwB1B;gBA0EI;oBACI,EAAE,CAAC,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;wBAC/B,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,eAAe,CAAC,gBAAgB,CAAC;wBACvE,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,eAAe,CAAC,SAAS,CAAC;wBACzD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC,eAAe,CAAC,YAAY,CAAC;wBAC/D,IAAI,CAAC,2BAA2B,GAAG,YAAY,CAAC,eAAe,CAAC,0BAA0B,CAAC;oBAC/F,CAAC;gBACL,CAAC;gBA9Ea,0BAAa,GAA3B,UAA4B,KAAsB;oBAC9C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAkB,sBAAsB,CAAC;yBACpD,IAAI,CAAkB,UAAC,MAAmD;wBACvE,YAAY,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC;wBAE3C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;oBACvB,CAAC,CAAC,CAAC;gBACX,CAAC;gBAiBD,sBAAW,0CAAgB;oBAH3B;;uBAEG;yBACH;wBACI,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAClC,CAAC;yBAED,UAA4B,KAAa;wBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBACnC,CAAC;;;mBAJA;gBAWD,sBAAW,mCAAS;oBAHpB;;uBAEG;yBACH;wBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC3B,CAAC;yBAED,UAAqB,KAAa;wBAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBAC5B,CAAC;;;mBAJA;gBAWD,sBAAW,sCAAY;oBAHvB;;uBAEG;yBACH;wBACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;oBAC9B,CAAC;yBAED,UAAwB,KAAuB;wBAC3C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC/B,CAAC;;;mBAJA;gBAWD,sBAAW,oDAA0B;oBAHrC;;uBAEG;yBACH;wBACI,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC;oBAC5C,CAAC;yBAED,UAAsC,KAAa;wBAC/C,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;oBAC7C,CAAC;;;mBAJA;gBAcL,mBAAC;YAAD,CAlFA,AAkFC,IAAA;YAlFY,qBAAY,eAkFxB,CAAA;YAED,OAAO,CAAC,MAAM,CAAC,uBAAuB,EAAE,EAAE,CAAC;iBACtC,OAAO,CAAC,cAAc,EAAE,cAAM,OAAA,IAAI,YAAY,EAAE,EAAlB,CAAkB,CAAC,CAAC;QAC3D,CAAC,EA9GmB,QAAQ,GAAR,iBAAQ,KAAR,iBAAQ,QA8G3B;IAAD,CAAC,EA9GU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QA8GlB;AAAD,CAAC,EA9GM,GAAG,KAAH,GAAG,QA8GT;AChHD,IAAO,IAAI,CA6DV;AA7DD,WAAO,IAAI;IAAC,IAAA,MAAM,CA6DjB;IA7DW,WAAA,MAAM,EAAC,CAAC;QAGhB;YAGI;gBACI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAmC,CAAC;YAC3D,CAAC;YAEM,uBAAE,GAAT,UAAU,KAAa,EAAE,QAA4B;gBACjD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAC9C,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACZ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBAChD,CAAC;gBAED,IAAI,GAA4B,CAAC;gBAEjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,GAAG,GAAG,IAAI,GAAG,EAAsB,CAAC;oBACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAC/B,CAAC;gBAED,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,CAAC;YAEM,uBAAE,GAAT,UAAU,KAAa,EAAE,QAA4B;gBACjD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAC9C,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACZ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBAChD,CAAC;gBAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,GAAG,GAA4B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACxD,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC;YAEM,6BAAQ,GAAf,UAAmB,KAAa,EAAE,QAAY,EAAE,QAAY;gBACxD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;gBAC9C,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,GAAG,GAA4B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACxD,GAAG,CAAC,OAAO,CAAC,UAAC,EAAoB;oBAC7B,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACP,CAAC;YACL,iBAAC;QAAD,CAzDA,AAyDC,IAAA;QAzDY,iBAAU,aAyDtB,CAAA;IACL,CAAC,EA7DW,MAAM,GAAN,WAAM,KAAN,WAAM,QA6DjB;AAAD,CAAC,EA7DM,IAAI,KAAJ,IAAI,QA6DV;AC7DD,uEAAuE;AACvE,6DAA6D;AAC7D,uDAAuD;AACvD,iCAAiC;AAEjC,IAAO,GAAG,CAwJT;AAxJD,WAAO,GAAG;IAAC,IAAA,IAAI,CAwJd;IAxJU,WAAA,IAAI;QAAC,IAAA,UAAU,CAwJzB;QAxJe,WAAA,UAAU,EAAC,CAAC;YACxB;gBAkCI,qBAAY,GAA4B,EAAE,KAAa,EAAE,UAAkC;oBAlC/F,iBAsJC;oBAnHO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACP,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;oBAC3C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBAC7C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACd,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;oBAClD,CAAC;oBAED,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;oBAE9B,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,EAAO;wBAC5B,+BAA+B;wBAC/B,IAAI,OAAO,GAAY,EAAE,CAAC,QAAQ,CAAC;wBACnC,KAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;wBAExC,qBAAqB;wBACrB,IAAI,IAAI,GAAY,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;wBAC1C,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;gBACrC,CAAC;gBAtDD,sBAAW,+BAAM;yBAAjB;wBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;oBACxB,CAAC;yBAED,UAAkB,KAAuB;wBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC3C,CAAC;;;mBALA;gBASD,sBAAW,8BAAK;yBAAhB;wBACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBACvB,CAAC;;;mBAAA;gBAID,sBAAW,6BAAI;yBAAf;wBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;oBACtB,CAAC;yBAED,UAAgB,KAAa;wBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACnB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACzC,CAAC;;;mBALA;gBAqCM,2BAAK,GAAZ,UAAa,WAA0B,EAAE,IAAkC;oBACvE,IAAI,IAAI,GAAY,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;oBAC1C,IAAI,QAAQ,GAAW,IAAI,CAAC;oBAC5B,IAAI,IAAI,GAAW,IAAI,CAAC,OAAO,EAAE,CAAC;oBAClC,IAAI,KAAK,GAAW,CAAC,CAAC;oBACtB,IAAI,MAAM,GAAG,KAAK,CAAC;oBAEnB,IAAI,QAAQ,GAAgC,UAAC,QAAiB;wBAC1D,EAAE,KAAK,CAAC;wBACR,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,MAAM,CAAC;wBACX,CAAC;wBACD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;4BAC3B,MAAM,GAAG,IAAI,CAAC;4BAEd,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gCACP,IAAI,CAAC,QAAQ,CAAC,CAAC;4BACnB,CAAC;wBACL,CAAC;oBACL,CAAC,CAAC;oBAEF,IAAI,CAAC,OAAO,CAAC;wBACT,MAAM,EAAE,WAAW;wBACnB,QAAQ,EAAE,QAAQ;qBACrB,EAAE,QAAQ,CAAC,CAAC;oBACb,IAAI,CAAC,OAAO,CAAC;wBACT,IAAI,EAAE,IAAI,GAAG,CAAC;wBACd,QAAQ,EAAE,QAAQ,GAAG,CAAC;qBACzB,EAAE;wBACC,IAAI,EAAE,IAAI;wBACV,QAAQ,EAAE,QAAQ,GAAG,CAAC;qBACzB,EAAE,QAAQ,CAAC,CAAC;gBACjB,CAAC;gBAEO,mCAAa,GAArB,UAAsB,UAAkB,EAAE,IAAwB;oBAC9D,IAAI,GAAG,GAAW,IAAI,GAAG,IAAI,CAAC;oBAC9B,IAAI,KAAK,GAAW,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,KAAK,GAAG,GAAG,CAAC;oBAEvE,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAMO,2CAAqB,GAA7B,UAA8B,IAAa;oBAA3C,iBAsBC;oBArBG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAC,EAAO;wBAC7D,IAAI,IAAI,GAAY,EAAE,CAAC,MAAM,CAAC;wBAC9B,IAAI,IAAI,GAAuB,IAAI,CAAC,aAAa,EAAE,CAAC;wBACpD,IAAI,MAAM,GAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;wBAE3C,IAAI,QAAQ,GAAW,KAAI,CAAC,MAAM,CAAC;wBACnC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBAC/C,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;wBAEjE,IAAI,OAAe,CAAC;wBACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;wBAC5B,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;oBAClE,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,EAAO;wBACrD,IAAI,SAAS,GAAqB,KAAI,CAAC,OAAO,CAAC;wBAC/C,IAAI,SAAS,GAAqB,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;wBAExD,KAAI,CAAC,OAAO,GAAG,SAAS,CAAC;wBACzB,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;oBACrE,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEO,+CAAyB,GAAjC,UAAkC,IAAa;oBAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;wBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;oBAC5C,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBACxC,CAAC;gBACL,CAAC;gBAEO,gCAAU,GAAlB,UAAmB,IAAa;oBAC5B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;oBAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;oBAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChC,CAAC;gBAEL,kBAAC;YAAD,CAtJA,AAsJC,IAAA;YAtJY,sBAAW,cAsJvB,CAAA;QACL,CAAC,EAxJe,UAAU,GAAV,eAAU,KAAV,eAAU,QAwJzB;IAAD,CAAC,EAxJU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAwJd;AAAD,CAAC,EAxJM,GAAG,KAAH,GAAG,QAwJT;AC7JD,0EAA0E;AAC1E,kCAAkC;AAElC,IAAO,GAAG,CAmBT;AAnBD,WAAO,GAAG;IAAC,IAAA,IAAI,CAmBd;IAnBU,WAAA,IAAI;QAAC,IAAA,UAAU,CAmBzB;QAnBe,WAAA,UAAU,EAAC,CAAC;YACxB;gBAAoC,kCAAsB;gBAGtD,wBAAY,GAA4B;oBAH5C,iBAiBC;oBAbO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACP,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;oBAC3C,CAAC;oBAED,kBAAM;wBACF,eAAe,EAAE,UAAC,EAAsB;4BACpC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;4BAC5D,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;qBACJ,CAAC,CAAC;oBAEH,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBACpB,CAAC;gBACL,qBAAC;YAAD,CAjBA,AAiBC,CAjBmC,EAAE,CAAC,WAAW,CAAC,OAAO,GAiBzD;YAjBY,yBAAc,iBAiB1B,CAAA;QACL,CAAC,EAnBe,UAAU,GAAV,eAAU,KAAV,eAAU,QAmBzB;IAAD,CAAC,EAnBU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAmBd;AAAD,CAAC,EAnBM,GAAG,KAAH,GAAG,QAmBT;ACtBD,0EAA0E;AAE1E,IAAO,GAAG,CAiDT;AAjDD,WAAO,GAAG;IAAC,IAAA,IAAI,CAiDd;IAjDU,WAAA,IAAI;QAAC,IAAA,UAAU,CAiDzB;QAjDe,WAAA,UAAU,EAAC,CAAC;YACxB;gBAAoC,kCAA0B;gBAU1D;oBACI,IAAI,OAAuC,CAAC;oBAC5C,IAAI,MAA6B,CAAC;oBAElC,kBAAM;wBACF,WAAW,EAAE,UAAC,EAAsB;4BAChC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gCACd,KAAK,WAAW;oCACZ,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;oCACvB,KAAK,CAAC;gCACV,KAAK,SAAS;oCACV,IAAI,QAAQ,GAAyB,EAAG,CAAC,aAAa,CAAC;oCACvD,IAAI,GAAG,GAAW,QAAQ,CAAC,GAAG,CAAC;oCAC/B,EAAE,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;wCACnB,MAAM,CAAC,WAAW,CAAC,CAAC;oCACxB,CAAC;oCACD,KAAK,CAAC;4BACd,CAAC;4BAED,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;qBACJ,CAAC,CAAC;oBAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CACvB,UAAC,GAAmC,EAAE,GAA0B;wBAC5D,OAAO,GAAG,GAAG,CAAC;wBACd,MAAM,GAAG,GAAG,CAAC;oBACjB,CAAC,CAAC,CAAC;oBAEP,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;oBACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBAC1B,CAAC;gBAnCD,sBAAW,mCAAO;yBAAlB;wBACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACzB,CAAC;;;mBAAA;gBAmCM,oCAAW,GAAlB,UAAmB,EAAsB;oBACrC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;oBAC7B,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBACL,qBAAC;YAAD,CA/CA,AA+CC,CA/CmC,EAAE,CAAC,WAAW,CAAC,WAAW,GA+C7D;YA/CY,yBAAc,iBA+C1B,CAAA;QACL,CAAC,EAjDe,UAAU,GAAV,eAAU,KAAV,eAAU,QAiDzB;IAAD,CAAC,EAjDU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAiDd;AAAD,CAAC,EAjDM,GAAG,KAAH,GAAG,QAiDT;ACnDD,uEAAuE;AACvE,6DAA6D;AAC7D,uDAAuD;AACvD,0CAA0C;AAC1C,0DAA0D;AAC1D,0DAA0D;AAC1D,2DAA2D;AAE3D,IAAO,GAAG,CAoPT;AApPD,WAAO,GAAG;IAAC,IAAA,IAAI,CAoPd;IApPU,WAAA,IAAI;QAAC,IAAA,UAAU,CAoPzB;QApPe,WAAA,UAAU,EAAC,CAAC;YAOxB;gBAqEI,aAAY,SAAiB,EAAU,YAAgD;oBAAhD,iBAAY,GAAZ,YAAY,CAAoC;oBAhE/E,UAAK,GAAW,WAAW,CAAC;oBAC5B,eAAU,GAAW,WAAW,CAAC;oBAgErC,GAAG,CAAC,eAAe,EAAE,CAAC;oBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;oBACvC,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;oBAChD,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC/F,CAAC;gBA1Ea,mBAAe,GAA7B;oBACI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,mIAAmI,CAAC,CAAC;gBACjK,CAAC;gBAQD,sBAAW,8BAAa;yBAAxB;wBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxC,CAAC;;;mBAAA;gBAID,sBAAW,2BAAU;yBAArB;wBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC5B,CAAC;;;mBAAA;gBAID,sBAAW,0BAAS;yBAApB;wBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC3B,CAAC;yBAED,UAAqB,KAA0B;wBAA/C,iBAKC;wBAJG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,QAAiD;4BACvE,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,KAAK,KAAI,CAAC,UAAU,CAAC,CAAC;wBAC5D,CAAC,CAAC,CAAC;oBACP,CAAC;;;mBAPA;gBASD,sBAAW,uBAAM;yBAAjB;wBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;oBACpC,CAAC;yBAED,UAAkB,KAAuB;wBACrC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;oBACrC,CAAC;;;mBAJA;gBAMD,sBAAW,sBAAK;yBAAhB;wBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;oBACnC,CAAC;;;mBAAA;gBAED,sBAAW,qBAAI;yBAAf;wBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBAClC,CAAC;yBAED,UAAgB,KAAa;wBACzB,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC;oBACnC,CAAC;;;mBAJA;gBAWD,sBAAW,uBAAM;oBAHjB;;uBAEG;yBACH;wBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;oBACxB,CAAC;yBAED,UAAkB,KAAuB;wBACrC,IAAI,QAAQ,GAAqB,IAAI,CAAC,OAAO,CAAC;wBAC9C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,uBAAuB,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;oBACxE,CAAC;;;mBANA;gBAgBD;;;mBAGG;gBACI,2BAAa,GAApB,UAAqB,WAA0B;oBAC3C,MAAM,CAAC,KAAK,CAAgB,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;gBAC1E,CAAC;gBAED;;;mBAGG;gBACI,6BAAe,GAAtB,UAAuB,WAA0B;oBAC7C,MAAM,CAAC,KAAK,CAAgB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;gBAC1E,CAAC;gBAEM,mBAAK,GAAZ,UAAa,WAA0B,EAAE,IAAkC;oBACvE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC/C,CAAC;gBAEM,0BAAY,GAAnB;oBAAA,iBAWC;oBAVG,IAAI,MAAM,GAAmB,IAAI,yBAAc,EAAE,CAAC;oBAElD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBACjC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;wBAChB,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBACxC,CAAC,EAAE;wBACC,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBACxC,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC1B,CAAC;gBAEM,sBAAQ,GAAf,UAAgB,KAAqB;oBACjC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;gBAEM,yBAAW,GAAlB,UAAmB,KAAqB;oBACpC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;gBAEM,gBAAE,GAAT,UAAU,KAAa,EAAE,QAAwC;oBAC7D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;oBAC9C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACZ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAChD,CAAC;oBAED,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBACzC,CAAC;gBAEM,gBAAE,GAAT,UAAU,KAAa,EAAE,QAAwC;oBAC7D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;oBAC9C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACZ,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAChD,CAAC;oBAED,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;gBACzC,CAAC;gBAEO,+BAAiB,GAAzB;oBACI,IAAI,MAAM,GAA0B,EAAE,CAAC;oBACvC,IAAI,GAAwB,CAAC;oBAE7B,GAAG,GAAG;wBACF,KAAK,EAAE,iBAAiB;wBACxB,MAAM,EAAE,oBAAoB;wBAC5B,KAAK,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;4BACrB,MAAM,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE;yBAC9B,CAAC;qBACL,CAAC;oBACF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEjB,GAAG,GAAG;wBACF,KAAK,EAAE,kBAAkB;wBACzB,MAAM,EAAE,wBAAwB;wBAChC,KAAK,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;4BACrB,MAAM,EAAE,IAAI,CAAC,qBAAqB,EAAE;yBACvC,CAAC;qBACL,CAAC;oBACF,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEjB,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBAEO,wBAAU,GAAlB,UAAmB,SAAiB;oBAChC,IAAI,MAAwB,CAAC;oBAE7B,wCAAwC;oBACxC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;wBACpC,8BAA8B;wBAC9B,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;oBAC/C,CAAC;oBAED,oCAAoC;oBACpC,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC5C,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;oBAChE,CAAC;oBAED,IAAI,IAAY,CAAC;oBAEjB,oCAAoC;oBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;wBAChC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;oBACzC,CAAC;oBAED,iCAAiC;oBACjC,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC9E,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;oBACvC,CAAC;oBAED,IAAI,IAAI,GAAY,IAAI,EAAE,CAAC,IAAI,CAAC;wBAC5B,UAAU,EAAE,IAAI,CAAC,KAAK;wBACtB,MAAM,EAAE,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;wBAChC,IAAI,EAAE,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,CAAC;qBAC5C,CAAC,CAAC;oBAEH,IAAI,MAAM,GAAoB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,GAAwB,IAAK,OAAA,GAAG,CAAC,KAAK,EAAT,CAAS,CAAC,CAAC;oBAE5F,IAAI,GAAG,GAAW,IAAI,EAAE,CAAC,GAAG,CAAC;wBACzB,MAAM,EAAE,SAAS;wBACjB,uBAAuB,EAAE,IAAI;wBAC7B,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,MAAM;wBACd,YAAY,EAAE,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;qBACjG,CAAC,CAAC;oBAEH,UAAU,CAAC;wBACP,GAAG,CAAC,UAAU,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAErC,MAAM,CAAC,GAAG,CAAC;gBACf,CAAC;gBAEO,mCAAqB,GAA7B;oBACI,IAAI,MAAM,GAAkB,IAAI,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;wBAC1C,GAAG,EAAE,8JAA8J;wBACnK,OAAO,EAAE,CAAC;wBACV,OAAO,EAAE,EAAE;wBACX,cAAc,EAAE,CAAC;qBACpB,CAAC,CAAC;oBAEH,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBACL,UAAC;YAAD,CA5OA,AA4OC,IAAA;YA5OY,cAAG,MA4Of,CAAA;QACL,CAAC,EApPe,UAAU,GAAV,eAAU,KAAV,eAAU,QAoPzB;IAAD,CAAC,EApPU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAoPd;AAAD,CAAC,EApPM,GAAG,KAAH,GAAG,QAoPT;AC5PD,iEAAiE;AACjE,2DAA2D;AAC3D,sCAAsC;AAEtC,IAAO,GAAG,CAgBT;AAhBD,WAAO,GAAG;IAAC,IAAA,IAAI,CAgBd;IAhBU,WAAA,IAAI;QAAC,IAAA,UAAU,CAgBzB;QAhBe,WAAA,UAAU,EAAC,CAAC;YACxB;gBAMI,+BAAoB,MAAiB,EACjB,YAAgD;oBADhD,WAAM,GAAN,MAAM,CAAW;oBACjB,iBAAY,GAAZ,YAAY,CAAoC;gBACpE,CAAC;gBAEM,wCAAQ,GAAf,UAAgB,GAA4C;oBACxD,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC;oBACzB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBAC3B,CAAC;gBAZM,6BAAO,GAAa,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;gBAa1D,4BAAC;YAAD,CAdA,AAcC,IAAA;YAdY,gCAAqB,wBAcjC,CAAA;QACL,CAAC,EAhBe,UAAU,GAAV,eAAU,KAAV,eAAU,QAgBzB;IAAD,CAAC,EAhBU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAgBd;AAAD,CAAC,EAhBM,GAAG,KAAH,GAAG,QAgBT;ACpBD,iEAAiE;AACjE,mFAAmF;AACnF,2DAA2D;AAC3D,sCAAsC;AACtC,kEAAkE;AAElE,IAAO,GAAG,CA+GT;AA/GD,WAAO,GAAG;IAAC,IAAA,IAAI,CA+Gd;IA/GU,WAAA,IAAI;QAAC,IAAA,UAAU,CA+GzB;QA/Ge,WAAA,UAAU,EAAC,CAAC;YACxB;gBAqBI,oBAAoB,MAAiB,EACjB,QAAyC,EACzC,YAAgD;oBAFhD,WAAM,GAAN,MAAM,CAAW;oBACjB,aAAQ,GAAR,QAAQ,CAAiC;oBACzC,iBAAY,GAAZ,YAAY,CAAoC;oBApB5D,eAAU,GAAY,IAAI,CAAC;gBAqBnC,CAAC;gBAnBD,sBAAW,iCAAS;yBAApB;wBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC3B,CAAC;yBAED,UAAqB,KAAc;wBAC/B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBAC5B,CAAC;;;mBAJA;gBAQD,sBAAW,gCAAQ;yBAAnB;wBACI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC3B,CAAC;;;mBAAA;gBASM,4BAAO,GAAd;oBACI,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACxC,CAAC;gBAEM,gCAAW,GAAlB;oBACI,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBACvC,CAAC;gBAEM,oCAAe,GAAtB;oBACI,IAAI,aAAa,GAAqC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;yBACjF,UAAU,CAAC,eAAe,CAAC;yBAC3B,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAE1F,IAAI,MAAM,GAAmC;wBACzC,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACxC,WAAW,EAAE,+DAA+D;wBAC5E,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB;wBACrD,YAAY,EAAE,IAAI;wBAClB,QAAQ,EAAE,aAAa;wBACvB,mBAAmB,EAAE,IAAI;wBACzB,aAAa,EAAE,IAAI;wBACnB,WAAW,EAAE,IAAI;wBACjB,MAAM,EAAE;4BACJ,GAAG,EAAE,IAAI,CAAC,GAAG;yBAChB;qBACJ,CAAC;oBAEF,IAAI,QAAqC,CAAC;oBAE1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;yBACrB,IAAI,CAAC,UAAS,MAAmC;wBAC9C,QAAQ,GAAG,MAAM,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACX,CAAC;gBAEO,yCAAoB,GAA5B,UAA6B,GAA4B;oBAAzD,iBA0BC;oBAzBG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACP,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;oBAC3C,CAAC;oBAED,GAAG,CAAC,EAAE,CAAC,cAAc,EAAE;wBACnB,KAAI,CAAC,SAAS,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;oBACH,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,QAAgB,EAAE,QAAgB;wBACrD,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BACpB,KAAI,CAAC,YAAY,CAAC,WAAW,GAAG,QAAQ,CAAC;wBAC7C,CAAC;wBAED,KAAI,CAAC,SAAS,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;oBACH,GAAG,CAAC,EAAE,CAAC,uBAAuB,EAAE;wBAC5B,KAAI,CAAC,SAAS,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;oBAEH,GAAG,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,QAA0B,EAAE,QAA0B;wBAC3E,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;4BACpB,KAAI,CAAC,YAAY,CAAC,eAAe,GAAG,QAAQ,CAAC;wBACjD,CAAC;wBAED,KAAI,CAAC,SAAS,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEO,8BAAS,GAAjB,UAAkB,QAAc,EAAE,QAAc;oBAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACf,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC9B,CAAC;gBA9FM,kBAAO,GAAa,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC;gBA+FtE,iBAAC;YAAD,CAhGA,AAgGC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,iCAAiC,EAAE;gBAC9C,uBAAuB;aAC1B,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE;gBACvB,WAAW,EAAE,6DAA6D;gBAC1E,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,GAAG,EAAE,GAAG;oBACR,QAAQ,EAAE,IAAI;iBACjB;aACJ,CAAC,CAAC;QACP,CAAC,EA/Ge,UAAU,GAAV,eAAU,KAAV,eAAU,QA+GzB;IAAD,CAAC,EA/GU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QA+Gd;AAAD,CAAC,EA/GM,GAAG,KAAH,GAAG,QA+GT;ACrHD,8DAA8D;ACA9D,uDAAuD;ACAvD,uDAAuD;ACAvD,uDAAuD;AACvD,iDAAiD;AACjD,+CAA+C;ACF/C,yCAAyC;AACzC,uDAAuD;ACDvD,yCAAyC;AAEzC,IAAO,GAAG,CAuGT;AAvGD,WAAO,GAAG;IAAC,IAAA,GAAG,CAuGb;IAvGU,WAAA,GAAG;QAAC,IAAA,OAAO,CAuGrB;QAvGc,WAAA,OAAO,EAAC,CAAC;YAkCpB;gBAAA;gBA8DA,CAAC;gBAhDU,0BAAK,GAAZ;oBACI,IAAI,IAAI,GAAe,IAAI,UAAU,EAAE,CAAC;oBACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAEtB,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAEM,+BAAU,GAAjB,UAAkB,KAAqB;oBACnC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;oBACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;oBACjC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;oBAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;oBACvC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;oBACjD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;oBAC7C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;oBAChD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC9D,CAAC;gBAEM,iCAAY,GAAnB,UAAoB,KAAiB;oBACjC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACT,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;oBAED,IAAI,MAAM,GAAY,IAAI,CAAC;oBAE3B,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC;oBACxC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,CAAC;oBACtD,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,CAAC;oBAC1D,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,CAAC;oBAClD,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,CAAC;oBAC1D,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;oBACtC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;oBACtC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,YAAY,CAAC;oBAC5D,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,iBAAiB,KAAK,KAAK,CAAC,iBAAiB,CAAC;oBACtE,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,CAAC,eAAe,CAAC;oBAClE,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;oBAChE,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,eAAe,CAAC,CAAC;oBAE1E,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBACL,iBAAC;YAAD,CA9DA,AA8DC,IAAA;YA9DY,kBAAU,aA8DtB,CAAA;QAOL,CAAC,EAvGc,OAAO,GAAP,WAAO,KAAP,WAAO,QAuGrB;IAAD,CAAC,EAvGU,GAAG,GAAH,OAAG,KAAH,OAAG,QAuGb;AAAD,CAAC,EAvGM,GAAG,KAAH,GAAG,QAuGT;ACzGD,oEAAoE;AACpE,wDAAwD;AACxD,yDAAyD;AACzD,yDAAyD;AAEzD,IAAO,GAAG,CAqJT;AArJD,WAAO,GAAG;IAAC,IAAA,IAAI,CAqJd;IArJU,WAAA,IAAI;QAAC,IAAA,QAAQ,CAqJvB;QArJe,WAAA,QAAQ,EAAC,CAAC;YA+BtB;gBAAA;gBAkHA,CAAC;gBAjHU,qCAAmB,GAA1B,UAA2B,IAA+B;oBACtD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACR,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;oBAC5C,CAAC;oBAED,IAAI,MAAM,GAAsB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAEjE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC;gBAED,qCAAmB,GAAnB,UAAoB,IAAgC;oBAChD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACR,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;oBAC5C,CAAC;oBAED,IAAI,MAAM,GAAsB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAEjE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC;gBAED,0CAAwB,GAAxB,UAAyB,SAA0C;oBAC/D,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACb,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;oBACjD,CAAC;oBAED,IAAI,MAAyB,CAAC;oBAE9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC;gBAEO,2BAAS,GAAjB,UAAkB,MAAyB,EAAE,UAAuB;oBAChE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBACV,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;oBAC9C,CAAC;oBAED,IAAI,OAAO,GAA0B;wBACjC,GAAG,EAAE,MAAM;wBACX,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;qBACzC,CAAC;oBAEF,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACb,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;wBAEnC,EAAE,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC1B,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;wBACnD,CAAC;wBAED,EAAE,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC1B,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;wBACnD,CAAC;wBAED,EAAE,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC1B,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;wBACnD,CAAC;oBACL,CAAC;oBAED,IAAI,KAAK,GAAmB,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;wBAC3C,KAAK,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;qBACpC,CAAC,CAAC;oBAEH,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAEO,uCAAqB,GAA7B,UAA8B,IAA0D;oBACpF,IAAI,OAAO,GAAW,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBAExD,IAAI,KAAK,GAAW,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;oBAC5C,IAAI,MAAM,GAAW,EAAE,CAAC;oBACxB,IAAI,UAAU,GAAW,MAAM,CAAC;oBAChC,IAAI,UAAU,GAAW,MAAM,CAAC;oBAChC,IAAI,IAAI,GAAW,cAAc,CAAC;oBAElC,IAAI,MAAM,GAAsB,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBACjE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;oBACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;oBAEvB,IAAI,GAAG,GAA6B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC5D,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;oBAC3B,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC;oBAC7B,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;oBAElB,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC1C,GAAG,CAAC,IAAI,EAAE,CAAC;oBACX,GAAG,CAAC,MAAM,EAAE,CAAC;oBAEb,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChB,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC;oBAC3B,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC;oBACzB,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;oBAC5B,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAErD,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBAEO,2BAAS,GAAjB,UAAkB,OAAe;oBAC7B,IAAI,KAAa,CAAC;oBAElB,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;wBACrB,KAAK,CAAC;4BACF,KAAK,GAAG,EAAE,CAAC;4BACX,KAAK,CAAC;wBACV,KAAK,CAAC;4BACF,KAAK,GAAG,EAAE,CAAC;4BACX,KAAK,CAAC;wBACV,KAAK,CAAC;4BACF,KAAK,GAAG,EAAE,CAAC;4BACX,KAAK,CAAC;wBACV;4BACI,KAAK,GAAG,EAAE,CAAC;oBACnB,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBACL,cAAC;YAAD,CAlHA,AAkHC,IAAA;YAED,OAAO,CAAC,MAAM,CAAC,+BAA+B,EAAE,EAAE,CAAC;iBAC9C,OAAO,CAAC,aAAa,EAAE,cAAM,OAAA,IAAI,OAAO,EAAE,EAAb,CAAa,CAAC,CAAC;QACrD,CAAC,EArJe,QAAQ,GAAR,aAAQ,KAAR,aAAQ,QAqJvB;IAAD,CAAC,EArJU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAqJd;AAAD,CAAC,EArJM,GAAG,KAAH,GAAG,QAqJT;AC1JD,2DAA2D;AAC3D,4CAA4C;AAC5C,0EAA0E;AAC1E,mDAAmD;AAEnD,IAAO,GAAG,CAKT;AALD,WAAO,GAAG;IAAC,IAAA,IAAI,CAKd;IALU,WAAA,IAAI,EAAC,CAAC;QAChB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,EAAE;YACjD,iCAAiC;YACjC,+BAA+B;SAC/B,CAAC,CAAC;IACJ,CAAC,EALU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAKd;AAAD,CAAC,EALM,GAAG,KAAH,GAAG,QAKT;ACVD,8DAA8D;AAE9D,IAAO,GAAG,CAeT;AAfD,WAAO,GAAG;IAAC,IAAA,KAAK,CAef;IAfU,WAAA,KAAK,EAAC,CAAC;QACd,aAAa;QACb;YACI;YACA,CAAC;YACL,iBAAC;QAAD,CAHA,AAGC,IAAA;QAED,YAAY;QACZ,OAAO,CAAC,MAAM,CAAC,sBAAsB,EAAE;YACnC,SAAS;YACT,wBAAwB,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE;YACnD,WAAW,EAAE,oCAAoC;YACjD,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;IACP,CAAC,EAfU,KAAK,GAAL,SAAK,KAAL,SAAK,QAef;AAAD,CAAC,EAfM,GAAG,KAAH,GAAG,QAeT;ACjBD,8DAA8D;AAE9D,IAAO,GAAG,CAcT;AAdD,WAAO,GAAG;IAAC,IAAA,KAAK,CAcf;IAdU,WAAA,KAAK,EAAC,CAAC;QACjB,aAAa;QACb;YACC;YACA,CAAC;YACF,iBAAC;QAAD,CAHA,AAGC,IAAA;QAED,YAAY;QACZ,OAAO,CAAC,MAAM,CAAC,oBAAoB,EAAE;YACpC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE;YAClC,WAAW,EAAE,gCAAgC;YAC7C,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,IAAI;SAClB,CAAC,CAAC;IACJ,CAAC,EAdU,KAAK,GAAL,SAAK,KAAL,SAAK,QAcf;AAAD,CAAC,EAdM,GAAG,KAAH,GAAG,QAcT;AChBD,8DAA8D;AAC9D,yDAAyD;AACzD,yDAAyD;AACzD,mFAAmF;AACnF,4DAA4D;AAE5D,IAAO,GAAG,CAiKT;AAjKD,WAAO,GAAG;IAAC,IAAA,KAAK,CAiKf;IAjKU,WAAA,KAAK,EAAC,CAAC;QACd,aAAa;QACb;YAaI,oBAAoB,MAAiB,EACjB,IAAoB,EACpB,KAAsB,EACtB,SAA8B,EAC9B,YAAgD,EAChD,WAA0C;gBAL1C,WAAM,GAAN,MAAM,CAAW;gBACjB,SAAI,GAAJ,IAAI,CAAgB;gBACpB,UAAK,GAAL,KAAK,CAAiB;gBACtB,cAAS,GAAT,SAAS,CAAqB;gBAC9B,iBAAY,GAAZ,YAAY,CAAoC;gBAChD,gBAAW,GAAX,WAAW,CAA+B;gBAC1D,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC;YAbD,sBAAW,2BAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;;;eAAA;YAaM,8BAAS,GAAhB;gBAAA,iBAEC;gBADG,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,CAAC,CAAC;YACvC,CAAC;YAEM,8BAAS,GAAhB;gBAAA,iBAKC;gBAJG,IAAI,IAAI,GAAkB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gBAClF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBAClB,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBACzB,CAAC,CAAC,CAAC;YACP,CAAC;YAEM,iCAAY,GAAnB,UAAoB,MAAc;gBAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC;YAC5C,CAAC;YAEM,mCAAc,GAArB,UAAsB,CAAS,EAAE,CAAS;gBACtC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACb,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,WAAW,GAAkB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACjC,CAAC;YAEO,8BAAS,GAAjB;gBACI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAElE,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBAC1C,IAAI,SAAS,GAAoB,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;oBACjD,WAAW,EAAE,IAAI;oBACjB,MAAM,EAAE,IAAI,CAAC,WAAW;iBAC3B,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAE9B,kDAAkD;gBAClD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC9B,CAAC;YAEO,kCAAa,GAArB;gBAAA,iBA6CC;gBA5CG,IAAI,CAAC,KAAK,CAAC,GAAG,CAA8B,uBAAuB,CAAC;qBAC/D,IAAI,CAAC,UAAC,MAA+D;oBAClE,IAAI,GAAG,GAAwC,IAAI,GAAG,EAAkC,CAAC;oBACzF,IAAI,OAA+B,CAAC;oBAEpC,gCAAgC;oBAChC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACnB,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBAC7B,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAA+B;wBAChD,wBAAwB;wBACxB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;wBAEzB,+BAA+B;wBAC/B,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBAEpC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;4BACX,sBAAsB;4BACtB,OAAO,GAAG;gCACN,IAAI,EAAE,IAAI,CAAC,WAAW;gCACtB,GAAG,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,wBAAwB;gCAC3D,WAAW,EAAE,IAAI,CAAC,WAAW;gCAC7B,KAAK,EAAE,EAAE;6BACZ,CAAC;4BAEF,mBAAmB;4BACnB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;wBACnC,CAAC;wBAED,qBAAqB;wBACrB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,EAA8B;4BACxD,EAAE,CAAC,CAAC,EAAE,CAAC,aAAa,KAAK,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;gCAC1D,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;4BAClC,CAAC;wBACL,CAAC,CAAC,CAAC;wBACH,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC;oBAEH,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;oBACnB,GAAG,CAAC,OAAO,CAAC,UAAC,CAAyB;wBAClC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACX,CAAC;YAEO,kCAAa,GAArB,UAAsB,IAA+B;gBACjD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACb,MAAM,CAAC;gBACX,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC7B,MAAM,CAAC;gBACX,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC3D,yCAAyC;oBACzC,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,WAAW,GAAkB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClD,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;gBAEnD,IAAI,WAAW,GAAe,IAAI,EAAE,CAAC,OAAO,CAAC;oBACzC,QAAQ,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;iBAC3C,CAAC,CAAC;gBACH,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEjE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAC7C,CAAC;YAEO,uCAAkB,GAA1B;gBAAA,iBAaC;gBAZG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC/B,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,CAAyB;oBAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACV,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAA4B;4BACzC,wBAAwB;4BACxB,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBAC1B,CAAC,CAAC,CAAC;oBACP,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;YAjJM,kBAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;YAkJvG,iBAAC;QAAD,CAnJA,AAmJC,IAAA;QAED,YAAY;QACZ,OAAO,CAAC,MAAM,CAAC,qBAAqB,EAAE;YAClC,SAAS;YACT,iCAAiC;YACjC,+BAA+B;YAC/B,mCAAmC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE;YAC7D,WAAW,EAAE,kCAAkC;YAC/C,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;IACP,CAAC,EAjKU,KAAK,GAAL,SAAK,KAAL,SAAK,QAiKf;AAAD,CAAC,EAjKM,GAAG,KAAH,GAAG,QAiKT;ACvKD,iEAAiE;AACjE,uEAAuE;AACvE,uDAAuD;AACvD,qDAAqD;AAErD,IAAO,GAAG,CAkDT;AAlDD,WAAO,GAAG;IAAC,IAAA,GAAG,CAkDb;IAlDU,WAAA,GAAG;QAAC,IAAA,UAAU,CAkDxB;QAlDc,WAAA,UAAU,EAAC,CAAC;YACvB,aAAa;YACb;gBA0BI,oBAAoB,MAAiB,EACjB,IAAoB,EACpB,YAAgD;oBAFhD,WAAM,GAAN,MAAM,CAAW;oBACjB,SAAI,GAAJ,IAAI,CAAgB;oBACpB,iBAAY,GAAZ,YAAY,CAAoC;gBACpE,CAAC;gBAxBD,sBAAW,oCAAY;yBAAvB;wBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;4BACnC,MAAM,CAAC,eAAe,CAAC;wBAC3B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,MAAM,CAAI,IAAI,CAAC,IAAI,CAAC,OAAO,mCACjB,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,EAAE,CAAE,CAAC;wBACpG,CAAC;oBACL,CAAC;;;mBAAA;gBAED,sBAAW,mCAAW;yBAAtB;wBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;4BACnF,MAAM,CAAC,eAAe,CAAC;wBAC3B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,MAAM,CAAC,QAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,EAAE,EAAC,qBAAqB,EAAE,CAAC,EAAC,CAAC,sCAC/D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,EAAE,EAAC,qBAAqB,EAAE,CAAC,EAAC,CAAG,CAAC;wBACnF,CAAC;oBACL,CAAC;;;mBAAA;gBAUM,iCAAY,GAAnB;oBACI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;gBAC7C,CAAC;gBAhCM,kBAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;gBAiClE,iBAAC;YAAD,CAlCA,AAkCC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,qCAAqC,EAAE,CAAC,SAAS,CAAC,CAAC;iBAC7D,SAAS,CAAC,kBAAkB,EAAE;gBAC3B,WAAW,EAAE,wEAAwE;gBACrF,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,IAAI,EAAE,GAAG;oBACT,YAAY,EAAE,GAAG;oBACjB,UAAU,EAAE,GAAG;iBAClB;aACJ,CAAC,CAAC;QACX,CAAC,EAlDc,UAAU,GAAV,cAAU,KAAV,cAAU,QAkDxB;IAAD,CAAC,EAlDU,GAAG,GAAH,OAAG,KAAH,OAAG,QAkDb;AAAD,CAAC,EAlDM,GAAG,KAAH,GAAG,QAkDT;ACvDD,iEAAiE;AACjE,uEAAuE;AACvE,mFAAmF;AACnF,uDAAuD;AACvD,qDAAqD;AACrD,2DAA2D;AAC3D,+DAA+D;AAE/D,IAAO,GAAG,CA8KT;AA9KD,WAAO,GAAG;IAAC,IAAA,GAAG,CA8Kb;IA9KU,WAAA,GAAG;QAAC,IAAA,UAAU,CA8KxB;QA9Kc,WAAA,UAAU,EAAC,CAAC;YACvB,aAAa;YACb;gBA4BI,oBAAoB,MAAiB,EACjB,IAAoB,EACpB,QAAyC,EACzC,YAAgD,EAChD,WAA0C;oBAJ1C,WAAM,GAAN,MAAM,CAAW;oBACjB,SAAI,GAAJ,IAAI,CAAgB;oBACpB,aAAQ,GAAR,QAAQ,CAAiC;oBACzC,iBAAY,GAAZ,YAAY,CAAoC;oBAChD,gBAAW,GAAX,WAAW,CAA+B;gBAC9D,CAAC;gBA5BD,sBAAW,4BAAI;yBAAf;wBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;oBACtB,CAAC;yBAED,UAAgB,KAAiC;wBAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBAEnB,IAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,IAAI,CAAC,aAAa,EAAE,CAAC;oBACzB,CAAC;;;mBAPA;gBAcD,sBAAW,2BAAG;yBAAd;wBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;oBACrB,CAAC;;;mBAAA;gBAYM,4BAAO,GAAd;oBACI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACxD,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACpE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9E,CAAC;gBAEM,8BAAS,GAAhB;oBAAA,iBASC;oBARG,UAAU,CAAC;wBACP,KAAI,CAAC,SAAS,EAAE,CAAC;wBAEjB,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;4BACb,KAAI,CAAC,aAAa,EAAE,CAAC;4BACrB,KAAI,CAAC,aAAa,EAAE,CAAC;wBACzB,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEM,iCAAY,GAAnB;oBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC5B,MAAM,CAAC;oBACX,CAAC;oBAED,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACvE,8BAA8B;wBAC9B,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3E,CAAC;gBAEO,8BAAS,GAAjB;oBACI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBAElE,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC1C,IAAI,SAAS,GAAoB,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;wBACjD,WAAW,EAAE,IAAI;wBACjB,MAAM,EAAE,IAAI,CAAC,WAAW;qBAC3B,CAAC,CAAC;oBAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBAE9B,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACzB,CAAC;gBAEO,kCAAa,GAArB;oBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC;oBACX,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBACnC,MAAM,CAAC;oBACX,CAAC;oBAED,IAAI,WAAW,GAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9D,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAEnD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACrB,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC;4BAC/B,QAAQ,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;yBAC3C,CAAC,CAAC;wBACH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBAE7E,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACnD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;oBAClE,CAAC;gBACL,CAAC;gBAEO,kCAAa,GAArB;oBACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC;oBACX,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;wBACrF,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7E,CAAC;gBACL,CAAC;gBAEO,8BAAS,GAAjB,UAAkB,QAAwB,EAAE,QAAwB;oBAChE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC;oBACX,CAAC;oBAED,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACvD,CAAC;gBACL,CAAC;gBAEO,oCAAe,GAAvB,UAAwB,QAAc,EAAE,QAAc;oBAAtD,iBA2BC;oBA1BG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC;oBACX,CAAC;oBAED,YAAY;oBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACf,SAAS,EAAE,CAAC;wBACZ,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,8FAA8F;wBACxG,MAAM,EAAE,MAAM;qBACjB,CAAC,CAAC;oBAEH,+CAA+C;oBAC/C,IAAI,OAAO,GAAe;wBACtB,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACzB,CAAC,CAAC;oBAEF,mBAAmB;oBACnB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,KAAoB;wBAC/C,IAAI,WAAW,GAAkB,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;wBAClE,KAAI,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;wBACxC,OAAO,EAAE,CAAC;oBACd,CAAC,EAAE,UAAC,MAAW;wBACX,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;wBACxB,OAAO,EAAE,CAAC;oBACd,CAAC,CAAC,CAAC;gBACP,CAAC;gBAEO,uCAAkB,GAA1B,UAA2B,QAAc,EAAE,QAAc;oBACrD,IAAI,CAAC,aAAa,EAAE,CAAC;gBACzB,CAAC;gBA1JM,kBAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,aAAa,CAAC,CAAC;gBA2J7F,iBAAC;YAAD,CA5JA,AA4JC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,+BAA+B,EAAE;gBACxC,SAAS;gBACT,YAAY,CAAC,CAAC;iBACjB,SAAS,CAAC,YAAY,EAAE;gBACrB,WAAW,EAAE,8DAA8D;gBAC3E,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,IAAI,EAAE,GAAG;oBACT,UAAU,EAAE,GAAG;oBACf,MAAM,EAAE,GAAG;iBACd;aACJ,CAAC,CAAC;QACX,CAAC,EA9Kc,UAAU,GAAV,cAAU,KAAV,cAAU,QA8KxB;IAAD,CAAC,EA9KU,GAAG,GAAH,OAAG,KAAH,OAAG,QA8Kb;AAAD,CAAC,EA9KM,GAAG,KAAH,GAAG,QA8KT;ACtLD,iEAAiE;AACjE,6CAA6C;AAE7C,IAAO,GAAG,CAqBT;AArBD,WAAO,GAAG;IAAC,IAAA,IAAI,CAqBd;IArBU,WAAA,IAAI;QAAC,IAAA,UAAU,CAqBzB;QArBe,WAAA,UAAU,EAAC,CAAC;YACxB;gBAKI,4BAAoB,MAAiB;oBAAjB,WAAM,GAAN,MAAM,CAAW;gBAErC,CAAC;gBANM,0BAAO,GAAa,CAAC,QAAQ,CAAC,CAAC;gBAO1C,yBAAC;YAAD,CARA,AAQC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAC9C,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE;gBACrB,WAAW,EAAE,uDAAuD;gBACpE,UAAU,EAAE,kBAAkB;gBAC9B,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,QAAQ,EAAE,GAAG;iBAChB;aACJ,CAAC,CAAC;QACP,CAAC,EArBe,UAAU,GAAV,eAAU,KAAV,eAAU,QAqBzB;IAAD,CAAC,EArBU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAqBd;AAAD,CAAC,EArBM,GAAG,KAAH,GAAG,QAqBT;ACxBD,iEAAiE;AACjE,uEAAuE;AACvE,uDAAuD;AACvD,qDAAqD;AACrD,gFAAgF;AAEhF,IAAO,GAAG,CA6CT;AA7CD,WAAO,GAAG;IAAC,IAAA,GAAG,CA6Cb;IA7CU,WAAA,GAAG;QAAC,IAAA,UAAU,CA6CxB;QA7Cc,WAAA,UAAU,EAAC,CAAC;YACvB,aAAa;YACb;gBASI,oBAAoB,MAAiB,EACjB,KAAsB,EACtB,IAAoB,EACpB,YAAgD;oBAHhD,WAAM,GAAN,MAAM,CAAW;oBACjB,UAAK,GAAL,KAAK,CAAiB;oBACtB,SAAI,GAAJ,IAAI,CAAgB;oBACpB,iBAAY,GAAZ,YAAY,CAAoC;gBACpE,CAAC;gBAEM,4BAAO,GAAd;oBAAA,iBAMC;oBALG,oBAAoB;oBACpB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAmC,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC;yBACrF,IAAI,CAAC,UAAC,MAAoE;wBACvE,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;oBAClC,CAAC,CAAC,CAAC;gBACX,CAAC;gBAEM,kCAAa,GAApB,UAAqB,EAAU;gBAE/B,CAAC;gBAxBM,kBAAO,GAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;gBAyB3E,iBAAC;YAAD,CA1BA,AA0BC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,mCAAmC,EAAE;gBAChD,SAAS;gBACT,8BAA8B;aAC7B,CAAC;iBACD,SAAS,CAAC,gBAAgB,EAAE;gBACzB,WAAW,EAAE,oEAAoE;gBACjF,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,MAAM,EAAE,GAAG;oBACX,YAAY,EAAE,GAAG;oBACjB,UAAU,EAAE,GAAG;iBAClB;aACJ,CAAC,CAAC;QACX,CAAC,EA7Cc,UAAU,GAAV,cAAU,KAAV,cAAU,QA6CxB;IAAD,CAAC,EA7CU,GAAG,GAAH,OAAG,KAAH,OAAG,QA6Cb;AAAD,CAAC,EA7CM,GAAG,KAAH,GAAG,QA6CT;ACnDD,iEAAiE;AACjE,uEAAuE;AACvE,mFAAmF;AACnF,qDAAqD;AACrD,2DAA2D;AAE3D,IAAO,GAAG,CAyDT;AAzDD,WAAO,GAAG;IAAC,IAAA,MAAM,CAyDhB;IAzDU,WAAA,MAAM;QAAC,IAAA,UAAU,CAyD3B;QAzDiB,WAAA,UAAU,EAAC,CAAC;YAC1B,aAAa;YACb;gBAeI,oBAAoB,MAAiB,EACjB,IAAoB,EACpB,KAAsB,EACtB,QAAyC,EACzC,YAAgD;oBAJhD,WAAM,GAAN,MAAM,CAAW;oBACjB,SAAI,GAAJ,IAAI,CAAgB;oBACpB,UAAK,GAAL,KAAK,CAAiB;oBACtB,aAAQ,GAAR,QAAQ,CAAiC;oBACzC,iBAAY,GAAZ,YAAY,CAAoC;gBACpE,CAAC;gBAbD,sBAAW,qCAAa;yBAAxB;wBACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;oBAC/B,CAAC;yBAED,UAAyB,KAA8C;wBACnE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAChC,CAAC;;;mBAJA;gBAaM,4BAAO,GAAd;oBACI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpC,CAAC;;gBAEO,kCAAa,GAArB,UAAsB,MAAc;oBAApC,iBAcC;oBAbG,IAAI,CAAC,KAAK,CAAC,GAAG,CAA0C,aAAa,GAAG,MAAM,GAAG,yBAAyB,CAAC;yBACtG,IAAI,CAAC,UAAC,MAA2E;wBAE9E,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAA0C;4BAC3D,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gCACb,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;gCACvB,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,YAAY,CAAC,0BAA0B;oCACrD,UAAU,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;4BAC/C,CAAC;wBACL,CAAC,CAAC,CAAC;wBAEH,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC;oBACrC,CAAC,CAAC,CAAC;gBACX,CAAC;gBAvCM,kBAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC;gBAwCvF,iBAAC;YAAD,CAzCA,AAyCC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,wCAAwC,EAAE;gBACjD,SAAS;gBACT,YAAY,CAAC,CAAC;iBACjB,SAAS,CAAC,kBAAkB,EAAE;gBAC3B,WAAW,EAAE,6EAA6E;gBAC1F,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,MAAM,EAAE,GAAG;iBACd;aACJ,CAAC,CAAC;QACX,CAAC,EAzDiB,UAAU,GAAV,iBAAU,KAAV,iBAAU,QAyD3B;IAAD,CAAC,EAzDU,MAAM,GAAN,UAAM,KAAN,UAAM,QAyDhB;AAAD,CAAC,EAzDM,GAAG,KAAH,GAAG,QAyDT;AC/DD,8DAA8D;AAC9D,oEAAoE;AACpE,oDAAoD;AACpD,yDAAyD;AACzD,8FAA8F;AAC9F,oFAAoF;AACpF,0FAA0F;AAC1F,mGAAmG;AAEnG,IAAO,GAAG,CAqDT;AArDD,WAAO,GAAG;IAAC,IAAA,KAAK,CAqDf;IArDU,WAAA,KAAK,EAAC,CAAC;QAKd,aAAa;QACb;YAYI,oBAAoB,MAAiB,EACjB,IAAoB,EACpB,KAAsB,EACtB,SAA8B,EAC9B,YAAgD,EAChD,YAA0B;gBAL1B,WAAM,GAAN,MAAM,CAAW;gBACjB,SAAI,GAAJ,IAAI,CAAgB;gBACpB,UAAK,GAAL,KAAK,CAAiB;gBACtB,cAAS,GAAT,SAAS,CAAqB;gBAC9B,iBAAY,GAAZ,YAAY,CAAoC;gBAChD,iBAAY,GAAZ,YAAY,CAAc;YAC9C,CAAC;YAVD,sBAAW,kCAAU;qBAArB;oBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC5B,CAAC;;;eAAA;YAUM,4BAAO,GAAd;gBAAA,iBASC;gBARG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;gBAEvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAA6B,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC;qBACrE,IAAI,CAAC,UAAC,MAA8D;oBACjE,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBAEP,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YACpD,CAAC;YAEM,yBAAI,GAAX;gBACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACvD,CAAC;YAhCM,kBAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;YAiCxG,iBAAC;QAAD,CAlCA,AAkCC,IAAA;QAED,YAAY;QACZ,OAAO,CAAC,MAAM,CAAC,2BAA2B,EAAE;YACpC,SAAS;YACT,qCAAqC;YACrC,+BAA+B;SAClC,CAAC;aACD,SAAS,CAAC,iBAAiB,EAAE;YAC1B,WAAW,EAAE,gDAAgD;YAC7D,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;IACX,CAAC,EArDU,KAAK,GAAL,SAAK,KAAL,SAAK,QAqDf;AAAD,CAAC,EArDM,GAAG,KAAH,GAAG,QAqDT;AC9DD,2DAA2D;AAC3D,6EAA6E;AAE7E,IAAO,GAAG,CA8DT;AA9DD,WAAO,GAAG;IAAC,IAAA,QAAQ,CA8DlB;IA9DU,WAAA,QAAQ,EAAC,CAAC;QAQjB;YAEI,iBAAoB,QAAyC;gBAAzC,aAAQ,GAAR,QAAQ,CAAiC;YAC7D,CAAC;YAEM,+BAAa,GAApB,UAAqB,SAAiB,EAAE,GAAW,EAAE,SAAkB;gBACnE,IAAI,OAAO,GAAoC;oBAC3C,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,gDAAgD,GAAG,GAAG,GAAG,0BAA0B;oBAC7F,MAAM,EAAE,SAAS;iBACpB,CAAC;gBAEF,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAChC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;gBAClC,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC;YAEM,uCAAqB,GAA5B,UAA6B,SAAiB,EAAE,GAAW,EAAE,SAAkB;gBAC3E,IAAI,OAAO,GAAoC;oBAC3C,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,gKAAgK,GAAG,GAAG,GAAG,0BAA0B;oBAC7M,MAAM,EAAE,SAAS;iBACpB,CAAC;gBAEF,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAChC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;gBAClC,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC;YAEM,kCAAgB,GAAvB,UAAwB,SAAiB,EAAE,GAAW,EAAE,SAAkB;gBACtE,IAAI,OAAO,GAAoC;oBAC3C,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,wKAAwK,GAAG,GAAG,GAAG,0BAA0B;oBACrN,MAAM,EAAE,SAAS;iBACpB,CAAC;gBAEF,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAChC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;gBAClC,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC;YAEM,sBAAI,GAAX;gBACI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC;YAhDM,eAAO,GAAa,CAAC,UAAU,CAAC,CAAC;YAiD5C,cAAC;QAAD,CAlDA,AAkDC,IAAA;QAED,OAAO,CAAC,MAAM,CAAC,2BAA2B,EAAE,EAAE,CAAC;aAC1C,OAAO,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,UAAC,QAAyC,IAAK,OAAA,IAAI,OAAO,CAAC,QAAQ,CAAC,EAArB,CAAqB,CAAC,CAAC,CAAC;IACrH,CAAC,EA9DU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QA8DlB;AAAD,CAAC,EA9DM,GAAG,KAAH,GAAG,QA8DT;ACjED,8DAA8D;AAC9D,oEAAoE;AACpE,gFAAgF;AAChF,oDAAoD;AACpD,wDAAwD;AACxD,yDAAyD;AACzD,8FAA8F;AAC9F,oFAAoF;AAEpF,IAAO,GAAG,CAsJT;AAtJD,WAAO,GAAG;IAAC,IAAA,KAAK,CAsJf;IAtJU,WAAA,KAAK,EAAC,CAAC;QAWd,aAAa;QACb;YAgBI,oBAAoB,MAAc,EACd,IAAoB,EACpB,KAAsB,EACtB,SAA8B,EAC9B,YAA0B,EAC1B,SAA2C,EAC3C,YAAgD,EAChD,YAAuC;gBAvB/D,iBA4HC;gBA5GuB,WAAM,GAAN,MAAM,CAAQ;gBACd,SAAI,GAAJ,IAAI,CAAgB;gBACpB,UAAK,GAAL,KAAK,CAAiB;gBACtB,cAAS,GAAT,SAAS,CAAqB;gBAC9B,iBAAY,GAAZ,YAAY,CAAc;gBAC1B,cAAS,GAAT,SAAS,CAAkC;gBAC3C,iBAAY,GAAZ,YAAY,CAAoC;gBAChD,iBAAY,GAAZ,YAAY,CAA2B;gBAXnD,iBAAY,GAAW,UAAU,CAAC;gBAYtC,IAAI,EAAE,GAAW,YAAY,CAAC,MAAM,CAAC;gBAErC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAC,KAAoB,EACpB,MAAc,EAAE,MAAc;oBACxF,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC;gBAEH,KAAK,CAAC,GAAG,CAA6B,gBAAgB,GAAG,EAAE,CAAC;qBACvD,IAAI,CAAC,UAAC,MAA8D;oBACjE,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBAEP,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YACpD,CAAC;YA7BD,sBAAW,kCAAU;qBAArB;oBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC5B,CAAC;;;eAAA;YA6BM,yBAAI,GAAX;gBAAA,iBAgBC;gBAfG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,wBAAwB,EAAE,CAAC,CAAC,CAAC;gBAEhF,IAAI,CAAC,KAAK,CAAC,IAAI,CAA6B,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;qBAClF,IAAI,CAAC,UAAC,MAAkE;oBACrE,EAAE,CAAC,CAAQ,MAAM,CAAC,IAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC/B,eAAe;wBACf,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAI,CAAC,YAAY,EAAS,MAAM,CAAC,IAAK,CAAC,QAAQ,CAAC,CAAC;oBACxF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAI,CAAC,YAAY,EAAE,sBAAsB,CAAC,CAAC;wBAEnF,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACnC,CAAC;gBACL,CAAC,EAAE,UAAC,MAAW;oBACX,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAI,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBAClE,CAAC,CAAC,CAAC;YACX,CAAC;YAEM,2BAAM,GAAb;gBACI,IAAI,EAAE,GAAW,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;YACxC,CAAC;YAEM,mCAAc,GAArB,UAAsB,WAA0B;gBAAhD,iBAkBC;gBAjBG,IAAI,CAAC,GAAW,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,GAAW,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAEjC,wCAAwC;gBACxC,IAAI,CAAC,KAAK,CAAC,GAAG,CAA0B,kCAAkC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;qBACtF,IAAI,CAAC,UAAC,MAA2D;oBAC9D,IAAI,OAAO,GAA4B,MAAM,CAAC,IAAI,CAAC;oBACnD,KAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChB,KAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChB,KAAI,CAAC,oBAAoB,EAAE,CAAC;oBAE5B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACV,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;wBACrC,KAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;wBAChC,KAAI,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;oBAChD,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC;YAEO,mCAAc,GAAtB,UAAuB,KAAoB,EAAE,MAAc,EAAE,MAAc;gBAA3E,iBAkBC;gBAjBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;oBAAC,MAAM,CAAC;gBACvB,IAAI,OAAO,GAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAEnE,4CAA4C;gBAC5C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;oBAAC,MAAM,CAAC;gBAErB,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;oBACrB,qCAAqC;oBACrC,KAAI,CAAC,kBAAkB,EAAE,CAAC;oBAE1B,0BAA0B;oBAC1B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC,EAAE;gBACH,CAAC,CAAC,CAAC;gBAEH,2FAA2F;gBAC3F,KAAK,CAAC,cAAc,EAAE,CAAC;YAC3B,CAAC;YAEO,iCAAY,GAApB,UAAqB,IAAoC;gBACrD,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;gBAC7C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEvC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAChC,CAAC;YAEO,yCAAoB,GAA5B;gBACI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC7D,CAAC;YAEO,iCAAY,GAApB;gBACI,IAAI,OAAO,GAAqC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;qBACnE,KAAK,CAAC,yCAAyC,CAAC;qBAChD,WAAW,CAAC,iEAAiE,CAAC;qBAC9E,EAAE,CAAC,SAAS,CAAC;qBACb,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAEtB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YACvC,CAAC;YA1HM,kBAAO,GAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW;gBAC3F,cAAc,EAAE,cAAc,CAAC,CAAC;YA0HxC,iBAAC;QAAD,CA5HA,AA4HC,IAAA;QAED,YAAY;QACZ,OAAO,CAAC,MAAM,CAAC,wBAAwB,EAAE;YACjC,SAAS;YACT,2BAA2B;YAC3B,qCAAqC;YACrC,+BAA+B;SAClC,CAAC;aACD,SAAS,CAAC,cAAc,EAAE;YACvB,WAAW,EAAE,0CAA0C;YACvD,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;IACX,CAAC,EAtJU,KAAK,GAAL,SAAK,KAAL,SAAK,QAsJf;AAAD,CAAC,EAtJM,GAAG,KAAH,GAAG,QAsJT;AC/JD,2DAA2D;AAC3D,4CAA4C;AAC5C,8CAA8C;AAC9C,0CAA0C;AAC1C,4CAA4C;AAC5C,0DAA0D;AAC1D,oDAAoD;AAEpD,IAAO,GAAG,CAQT;AARD,WAAO,GAAG;IAAC,IAAA,KAAK,CAQf;IARU,WAAA,KAAK,EAAC,CAAC;QACjB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,iBAAiB,EAAE;YAClD,sBAAsB;YACtB,oBAAoB;YACpB,qBAAqB;YACrB,2BAA2B;YAC3B,wBAAwB;SACxB,CAAC,CAAC;IACJ,CAAC,EARU,KAAK,GAAL,SAAK,KAAL,SAAK,QAQf;AAAD,CAAC,EARM,GAAG,KAAH,GAAG,QAQT;AChBD,2DAA2D;AAC3D,4CAA4C;AAC5C,2CAA2C;AAC3C,2CAA2C;AAE3C,IAAO,GAAG,CAMT;AAND,WAAO,GAAG;IAAC,IAAA,QAAQ,CAMlB;IANU,WAAA,QAAQ,EAAC,CAAC;QACpB,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,oBAAoB,EAAE;YACrD,4BAA4B;YAC5B,uBAAuB;YACvB,2BAA2B;SAC3B,CAAC,CAAC;IACJ,CAAC,EANU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAMlB;AAAD,CAAC,EANM,GAAG,KAAH,GAAG,QAMT;ACXD,iEAAiE;AACjE,qDAAqD;AAErD,IAAO,GAAG,CAgCT;AAhCD,WAAO,GAAG;IAAC,IAAA,GAAG,CAgCb;IAhCU,WAAA,GAAG;QAAC,IAAA,UAAU,CAgCxB;QAhCc,WAAA,UAAU,EAAC,CAAC;YACvB;gBAOI,oBAAoB,MAAiB;oBAAjB,WAAM,GAAN,MAAM,CAAW;gBACrC,CAAC;gBAEM,+BAAU,GAAjB,UAAkB,MAAc;oBAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC;gBAEM,iCAAY,GAAnB,UAAoB,CAAS,EAAE,CAAS;oBACpC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,CAAC;gBAfM,kBAAO,GAAa,CAAC,QAAQ,CAAC,CAAC;gBAgB1C,iBAAC;YAAD,CAjBA,AAiBC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,mCAAmC,EAAE,EAAE,CAAC;iBAClD,SAAS,CAAC,gBAAgB,EAAE;gBACzB,WAAW,EAAE,sEAAsE;gBACnF,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,QAAQ,EAAE,GAAG;oBACb,QAAQ,EAAE,GAAG;oBACb,QAAQ,EAAE,GAAG;iBAChB;aACJ,CAAC,CAAC;QACX,CAAC,EAhCc,UAAU,GAAV,cAAU,KAAV,cAAU,QAgCxB;IAAD,CAAC,EAhCU,GAAG,GAAH,OAAG,KAAH,OAAG,QAgCb;AAAD,CAAC,EAhCM,GAAG,KAAH,GAAG,QAgCT;ACnCD,2DAA2D;AAC3D,4CAA4C;AAE5C,oFAAoF;AACpF,sFAAsF;AACtF,4EAA4E;AAC5E,kFAAkF;AAElF,IAAO,GAAG,CAST;AATD,WAAO,GAAG;IAAC,IAAA,GAAG,CASb;IATU,WAAA,GAAG,EAAC,CAAC;QAGZ,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,eAAe,EAAE;YAC7C,4BAA4B;YAC5B,mCAAmC;YACnC,qCAAqC;YACrC,mCAAmC;SACtC,CAAC,CAAA;IACN,CAAC,EATU,GAAG,GAAH,OAAG,KAAH,OAAG,QASb;AAAD,CAAC,EATM,GAAG,KAAH,GAAG,QAST;ACjBD,8DAA8D;AAC9D,yCAAyC;AAEzC,IAAO,GAAG,CAiGT;AAjGD,WAAO,GAAG;IAAC,IAAA,QAAQ,CAiGlB;IAjGU,WAAA,QAAQ;QAAC,IAAA,GAAG,CAiGtB;QAjGmB,WAAA,GAAG,EAAC,CAAC;YACrB;gBAeI,mBAAY,SAAqC,EAAE,OAAuC;oBAThF,eAAU,GAAY,KAAK,CAAC;oBAM5B,SAAI,GAAuB,IAAI,GAAG,EAAiB,CAAC;oBAI1D,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACb,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;oBACjD,CAAC;oBAED,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;oBAE5B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;oBAE/B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;oBACxC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;oBAEpC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBArBD,sBAAW,gCAAS;yBAApB;wBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC3B,CAAC;;;mBAAA;gBAqBM,0BAAM,GAAb;oBACI,IAAI,MAAM,GAAc,EAAE,CAAC;oBAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAU,IAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEvD,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBAEM,4BAAQ,GAAf,UAAgB,GAAS;oBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9B,CAAC;gBAEM,2BAAO,GAAd;oBAAA,iBA2BC;oBA1BG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAChB,8CAA8C;wBAC9C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACzB,CAAC;oBAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBAEvB,IAAI,WAAyD,CAAC;oBAC9D,IAAI,UAAkC,CAAC;oBAEvC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAS,UAAC,OAAO,EAAE,MAAM;wBAChD,WAAW,GAAG,OAAO,CAAC;wBACtB,UAAU,GAAG,MAAM,CAAC;oBACxB,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,KAAK,CAAC,GAAG,CAAQ,IAAI,CAAC,UAAU,CAAC;yBACjC,IAAI,CAAC,UAAC,QAAQ;wBACX,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAChC,WAAW,EAAE,CAAC;oBAClB,CAAC,EAAE,UAAC,MAAY,IAAK,OAAA,UAAU,CAAC,MAAM,CAAC,EAAlB,CAAkB,CAAC;yBACvC,OAAO,CAAC;wBACL,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACzB,CAAC,CAAC,CAAC;oBAEP,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACzB,CAAC;gBAES,+BAAW,GAArB,UAAsB,KAAY;oBAAlC,iBAKC;oBAJG,KAAK,CAAC,GAAG,CAAC,UAAC,CAAU;wBACjB,IAAI,MAAM,GAAY,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;wBAC5D,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACP,CAAC;gBAES,oCAAgB,GAA1B,UAA2B,OAAuC;oBAC9D,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;oBAC/C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;wBACjB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBAC7C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;wBACvB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;oBACnD,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;wBACrB,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;oBACnD,CAAC;gBACL,CAAC;gBACL,gBAAC;YAAD,CA/FA,AA+FC,IAAA;YA/FY,aAAS,YA+FrB,CAAA;QACL,CAAC,EAjGmB,GAAG,GAAH,YAAG,KAAH,YAAG,QAiGtB;IAAD,CAAC,EAjGU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAiGlB;AAAD,CAAC,EAjGM,GAAG,KAAH,GAAG,QAiGT;ACpGD,8DAA8D;AAC9D,yCAAyC;AACzC,wCAAwC;AAExC,IAAO,GAAG,CAmDT;AAnDD,WAAO,GAAG;IAAC,IAAA,QAAQ,CAmDlB;IAnDU,WAAA,QAAQ;QAAC,IAAA,GAAG,CAmDtB;QAnDmB,WAAA,GAAG,EAAC,CAAC;YAGrB;gBAMI,mBAAoB,KAAsB;oBAAtB,UAAK,GAAL,KAAK,CAAiB;oBAFlC,kBAAa,GAAsC,IAAI,GAAG,EAAgC,CAAC;gBAGnG,CAAC;gBAEM,iCAAa,GAApB,UAA0D,IAAY;oBAClE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACR,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;oBAC5C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAClC,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;oBACtD,CAAC;oBAED,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC/B,sDAAsD;wBACtD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACxC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,2CAA2C;wBAC3C,IAAI,OAAO,GAAqB,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAC/D,IAAI,MAAM,GAA8B,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;wBAElE,sCAAsC;wBACtC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;wBAErC,MAAM,CAA6B,MAAM,CAAC;oBAC9C,CAAC;gBACL,CAAC;gBAEa,uBAAa,GAA3B,UAA4B,IAAY,EAAE,OAAyB;oBAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACR,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBAC7C,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;oBAC/C,CAAC;oBAED,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBAC5C,CAAC;gBA1CM,iBAAO,GAAa,CAAC,OAAO,CAAC,CAAC;gBAEtB,oBAAU,GAAkC,IAAI,GAAG,EAA4B,CAAC;gBAyCnG,gBAAC;YAAD,CA5CA,AA4CC,IAAA;YA5CY,aAAS,YA4CrB,CAAA;YAED,OAAO,CAAC,MAAM,CAAC,4BAA4B,EAAE,EAAE,CAAC;iBAC3C,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,UAAC,KAAsB,IAAK,OAAA,IAAI,SAAS,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC,CAAC;QAC3F,CAAC,EAnDmB,GAAG,GAAH,YAAG,KAAH,YAAG,QAmDtB;IAAD,CAAC,EAnDU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAmDlB;AAAD,CAAC,EAnDM,GAAG,KAAH,GAAG,QAmDT;ACvDD,8DAA8D;AAC9D,yCAAyC;AACzC,wCAAwC;AACxC,wCAAwC;AAExC,IAAO,GAAG,CAcT;AAdD,WAAO,GAAG;IAAC,IAAA,QAAQ,CAclB;IAdU,WAAA,QAAQ;QAAC,IAAA,GAAG,CActB;QAdmB,WAAA,GAAG,EAAC,CAAC;YACrB;gBAGI,oBAAY,SAAoB;oBAC5B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACb,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;oBACjD,CAAC;oBAED,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAChC,CAAC;gBAGL,iBAAC;YAAD,CAZA,AAYC,IAAA;YAZqB,cAAU,aAY/B,CAAA;QACL,CAAC,EAdmB,GAAG,GAAH,YAAG,KAAH,YAAG,QActB;IAAD,CAAC,EAdU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAclB;AAAD,CAAC,EAdM,GAAG,KAAH,GAAG,QAcT;ACnBD,kDAAkD;AAClD,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAwET;AAxED,WAAO,GAAG;IAAC,IAAA,MAAM,CAwEhB;IAxEU,WAAA,MAAM,EAAC,CAAC;QACf;YAAwC,sCAAmC;YAqDvE,WAAW;YAEX,4BAAY,SAAqC,EAAE,IAA6B;gBAC5E,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;oBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;gBACzB,CAAC;YACL,CAAC;YA5DD,sBAAW,kCAAE;qBAAb;oBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpB,CAAC;qBAED,UAAc,KAAa;oBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACrB,CAAC;;;eAJA;YAQD,sBAAW,oCAAI;qBAAf;oBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACtB,CAAC;qBAED,UAAgB,KAAa;oBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACvB,CAAC;;;eAJA;YAQD,sBAAW,mCAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;qBAED,UAAe,KAAa;oBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACtB,CAAC;;;eAJA;YAQD,sBAAW,qCAAK;qBAAhB;oBACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACvB,CAAC;qBAED,UAAiB,KAAa;oBAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACxB,CAAC;;;eAJA;YAQD,sBAAW,mCAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;qBAED,UAAe,KAAa;oBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACtB,CAAC;;;eAJA;YAoBM,mCAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;YACL,yBAAC;QAAD,CAtEA,AAsEC,CAtEuC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAsElE;QAtEY,yBAAkB,qBAsE9B,CAAA;IACL,CAAC,EAxEU,MAAM,GAAN,UAAM,KAAN,UAAM,QAwEhB;AAAD,CAAC,EAxEM,GAAG,KAAH,GAAG,QAwET;AC5ED,8DAA8D;AAC9D,yDAAyD;AACzD,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CAeT;AAfD,WAAO,GAAG;IAAC,IAAA,MAAM,CAehB;IAfU,WAAA,MAAM;QAAC,IAAA,GAAG,CAepB;QAfiB,WAAA,GAAG,EAAC,CAAC;YAEnB;gBAA2C,yCAAkE;gBAEzG,+BAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAAuC;4BACxF,MAAM,CAAC,IAAI,yBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBACnD,CAAC;wBACD,SAAS,EAAE,kBAAkB;qBAChC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBACL,4BAAC;YAAD,CAZA,AAYC,CAZ0C,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAYpE;YAZY,yBAAqB,wBAYjC,CAAA;QACL,CAAC,EAfiB,GAAG,GAAH,UAAG,KAAH,UAAG,QAepB;IAAD,CAAC,EAfU,MAAM,GAAN,UAAM,KAAN,UAAM,QAehB;AAAD,CAAC,EAfM,GAAG,KAAH,GAAG,QAeT;ACpBD,iEAAiE;AACjE,6CAA6C;AAC7C,4DAA4D;AAC5D,6DAA6D;AAE7D,IAAO,GAAG,CA2DT;AA3DD,WAAO,GAAG;IAAC,IAAA,MAAM,CA2DhB;IA3DU,WAAA,MAAM;QAAC,IAAA,UAAU,CA2D3B;QA3DiB,WAAA,UAAU,EAAC,CAAC;YAC1B;gBAiCI,wCAAoB,MAAiB,EACjB,SAAqC;oBADrC,WAAM,GAAN,MAAM,CAAW;oBACjB,cAAS,GAAT,SAAS,CAA4B;gBACzD,CAAC;gBA9BD,sBAAW,kDAAM;yBAAjB;wBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;oBACxB,CAAC;yBAED,UAAkB,KAA4B;wBAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACzB,CAAC;;;mBAJA;gBAQD,sBAAW,iDAAK;yBAAhB;wBACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBACvB,CAAC;yBAED,UAAiB,KAAa;wBAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACxB,CAAC;;;mBAJA;gBAQD,sBAAW,+CAAG;yBAAd;wBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;oBACrB,CAAC;yBAED,UAAe,KAAa;wBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBACtB,CAAC;;;mBAJA;gBAUM,gDAAO,GAAd;oBAAA,iBAOC;oBANG,IAAI,eAAe,GACqB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;oBAC3F,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;wBAC3B,KAAI,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC;wBACvC,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;oBAC9B,CAAC,CAAC,CAAC;gBACP,CAAC;gBA3CM,sCAAO,GAAa,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;gBA4CvD,qCAAC;YAAD,CA7CA,AA6CC,IAAA;YAED,YAAY;YACZ,OAAO,CAAC,MAAM,CAAC,6CAA6C,EAAE,EAC7D,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE;gBACzB,WAAW,EAAE,mFAAmF;gBAChG,UAAU,EAAE,8BAA8B;gBAC1C,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE;oBACN,KAAK,EAAE,GAAG;oBACV,GAAG,EAAE,GAAG;iBACX;aACJ,CAAC,CAAC;QACP,CAAC,EA3DiB,UAAU,GAAV,iBAAU,KAAV,iBAAU,QA2D3B;IAAD,CAAC,EA3DU,MAAM,GAAN,UAAM,KAAN,UAAM,QA2DhB;AAAD,CAAC,EA3DM,GAAG,KAAH,GAAG,QA2DT;AChED,2DAA2D;AAC3D,4CAA4C;AAC5C,sDAAsD;AACtD,yDAAyD;AACzD,8FAA8F;AAE9F,IAAO,GAAG,CAUT;AAVD,WAAO,GAAG;IAAC,IAAA,MAAM,CAUhB;IAVU,WAAA,MAAM,EAAC,CAAC;QACf,IAAO,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC;QAE9C,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,kBAAkB,EAAE;YAChD,4BAA4B;YAC5B,6CAA6C;SAChD,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,UAAC,SAAoB;gBACtC,SAAS,CAAC,aAAa,CAAC,oBAAoB,EAAE,UAAC,SAAoB,EAAE,KAAsB;oBACvF,OAAA,IAAI,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC;gBAA1D,CAA0D,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,EAVU,MAAM,GAAN,UAAM,KAAN,UAAM,QAUhB;AAAD,CAAC,EAVM,GAAG,KAAH,GAAG,QAUT;AChBD,0CAA0C;AAC1C,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAkGT;AAlGD,WAAO,GAAG;IAAC,IAAA,IAAI,CAkGd;IAlGU,WAAA,IAAI,EAAC,CAAC;QACb;YAA8B,4BAAmC;YA6E7D,WAAW;YAEX,kBAAY,SAAqC,EAAE,IAAmB;gBAClE,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;oBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;oBACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;gBACzC,CAAC;YACL,CAAC;YAtFD,sBAAW,wBAAE;qBAAb;oBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpB,CAAC;qBAED,UAAc,KAAa;oBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACrB,CAAC;;;eAJA;YAQD,sBAAW,4BAAM;qBAAjB;oBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;qBAED,UAAkB,KAAa;oBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,CAAC;;;eAJA;YAQD,sBAAW,mCAAa;qBAAxB;oBACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC/B,CAAC;qBAED,UAAyB,KAAa;oBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAChC,CAAC;;;eAJA;YAQD,sBAAW,yBAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;qBAED,UAAe,KAAa;oBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACtB,CAAC;;;eAJA;YAQD,sBAAW,6BAAO;qBAAlB;oBACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACzB,CAAC;qBAED,UAAmB,KAAa;oBAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC1B,CAAC;;;eAJA;YAQD,sBAAW,gCAAU;qBAArB;oBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC5B,CAAC;qBAED,UAAsB,KAAa;oBAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC7B,CAAC;;;eAJA;YAQD,sBAAW,iCAAW;qBAAtB;oBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC7B,CAAC;qBAED,UAAuB,KAAa;oBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC9B,CAAC;;;eAJA;YAMD,sBAAW,+BAAS;qBAApB;oBACI,MAAM,CAAc,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/F,CAAC;;;eAAA;YAkBM,yBAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;YACL,eAAC;QAAD,CAhGA,AAgGC,CAhG6B,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAgGxD;QAhGY,aAAQ,WAgGpB,CAAA;IACL,CAAC,EAlGU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAkGd;AAAD,CAAC,EAlGM,GAAG,KAAH,GAAG,QAkGT;ACtGD,8DAA8D;AAC9D,8CAA8C;AAC9C,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CAcT;AAdD,WAAO,GAAG;IAAC,IAAA,IAAI,CAcd;IAdU,WAAA,IAAI;QAAC,IAAA,GAAG,CAclB;QAde,WAAA,GAAG,EAAC,CAAC;YACjB;gBAAiC,+BAAsD;gBAEnF,qBAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAA2B;4BAC5E,MAAM,CAAC,IAAI,aAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBACzC,CAAC;wBACD,SAAS,EAAE,mBAAmB;qBACjC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBACL,kBAAC;YAAD,CAZA,AAYC,CAZgC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAY1D;YAZY,eAAW,cAYvB,CAAA;QACL,CAAC,EAde,GAAG,GAAH,QAAG,KAAH,QAAG,QAclB;IAAD,CAAC,EAdU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAcd;AAAD,CAAC,EAdM,GAAG,KAAH,GAAG,QAcT;ACnBD,0CAA0C;AAC1C,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAkDT;AAlDD,WAAO,GAAG;IAAC,IAAA,IAAI,CAkDd;IAlDU,WAAA,IAAI,EAAC,CAAC;QACb;YAA+B,6BAAmC;YAiC9D,WAAW;YAEX,mBAAY,SAAqC,EAAE,IAAoB;gBACnE,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;gBACzC,CAAC;YACL,CAAC;YAtCD,sBAAW,yBAAE;qBAAb;oBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpB,CAAC;qBAED,UAAc,KAAa;oBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACrB,CAAC;;;eAJA;YAQD,sBAAW,0BAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;qBAED,UAAe,KAAa;oBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACtB,CAAC;;;eAJA;YAQD,sBAAW,kCAAW;qBAAtB;oBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC7B,CAAC;qBAED,UAAuB,KAAa;oBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC9B,CAAC;;;eAJA;YAkBM,0BAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;YACL,gBAAC;QAAD,CAhDA,AAgDC,CAhD8B,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAgDzD;QAhDY,cAAS,YAgDrB,CAAA;IACL,CAAC,EAlDU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAkDd;AAAD,CAAC,EAlDM,GAAG,KAAH,GAAG,QAkDT;ACtDD,8DAA8D;AAC9D,+CAA+C;AAC/C,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CAaT;AAbD,WAAO,GAAG;IAAC,IAAA,IAAI,CAad;IAbU,WAAA,IAAI;QAAC,IAAA,GAAG,CAalB;QAbe,WAAA,GAAG,EAAC,CAAC;YACjB;gBAAkC,gCAAuD;gBACrF,sBAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAA4B;4BAC7E,MAAM,CAAC,IAAI,cAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBAC1C,CAAC;wBACD,SAAS,EAAE,oBAAoB;qBAClC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBACL,mBAAC;YAAD,CAXA,AAWC,CAXiC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAW3D;YAXY,gBAAY,eAWxB,CAAA;QACL,CAAC,EAbe,GAAG,GAAH,QAAG,KAAH,QAAG,QAalB;IAAD,CAAC,EAbU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAad;AAAD,CAAC,EAbM,GAAG,KAAH,GAAG,QAaT;AClBD,2DAA2D;AAC3D,4CAA4C;AAC5C,sDAAsD;AACtD,8CAA8C;AAC9C,+CAA+C;AAC/C,oEAAoE;AAEpE,IAAO,GAAG,CAYT;AAZD,WAAO,GAAG;IAAC,IAAA,IAAI,CAYd;IAZU,WAAA,IAAI,EAAC,CAAC;QACb,IAAO,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC;QAE9C,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,EAAE;YAC9C,4BAA4B;YAC5B,8BAA8B;SACjC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,UAAC,SAAoB;gBACtC,SAAS,CAAC,aAAa,CAAC,UAAU,EAAE,UAAC,SAAoB,EAAE,KAAsB;oBAC7E,OAAA,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC;gBAA9C,CAA8C,CAAC,CAAC;gBACpD,SAAS,CAAC,aAAa,CAAC,WAAW,EAAE,UAAC,SAAoB,EAAE,KAAsB;oBAC9E,OAAA,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC;gBAA/C,CAA+C,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,EAZU,IAAI,GAAJ,QAAI,KAAJ,QAAI,QAYd;AAAD,CAAC,EAZM,GAAG,KAAH,GAAG,QAYT;ACnBD,2DAA2D;AAC3D,4CAA4C;AAC5C,wFAAwF;AAExF,IAAO,GAAG,CAIT;AAJD,WAAO,GAAG;IAAC,IAAA,MAAM,CAIhB;IAJU,WAAA,MAAM,EAAC,CAAC;QACf,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,kBAAkB,EAAE;YAChD,wCAAwC;SAC3C,CAAC,CAAC;IACP,CAAC,EAJU,MAAM,GAAN,UAAM,KAAN,UAAM,QAIhB;AAAD,CAAC,EAJM,GAAG,KAAH,GAAG,QAIT;ACRD,wDAAwD;AACxD,8DAA8D;AAC9D,0EAA0E;AAC1E,iDAAiD;AACjD,qCAAqC;AACrC,uCAAuC;AACvC,6CAA6C;AAC7C,mCAAmC;AACnC,yCAAyC;AACzC,qCAAqC;AACrC,yCAAyC;AAEzC,kDAAkD;AAElD;IAAA;IAsEA,CAAC;IArEiB,oBAAU,GAAxB;QACI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,EAAE;YAC1C,GAAG,CAAC,YAAY,CAAC,sBAAsB;YACvC,GAAG,CAAC,YAAY,CAAC,gBAAgB;YACjC,GAAG,CAAC,YAAY,CAAC,iBAAiB;YAClC,GAAG,CAAC,YAAY,CAAC,oBAAoB;YACrC,GAAG,CAAC,YAAY,CAAC,kBAAkB;YACnC,GAAG,CAAC,YAAY,CAAC,eAAe;YAChC,GAAG,CAAC,YAAY,CAAC,gBAAgB;YACjC,GAAG,CAAC,YAAY,CAAC,kBAAkB;YACnC,SAAS;YACT,YAAY;YACZ,YAAY;SACf,CAAC;aACD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC;aAClC,MAAM,CAAC,UAAU,kBAAkB;YAChC,wDAAwD;YACxD,kBAAkB,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC;iBAC3C,cAAc,CAAC,QAAQ,CAAC;iBACxB,IAAI,EAAE,CAAC;QAEhB,CAAC,CAAC,CAAC;QAEP,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAC5B,IAAI,YAAY,GAAkC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3E,IAAI,KAAK,GAAoB,YAAY,CAAC,GAAG,CAAkB,OAAO,CAAC,CAAC;YACxE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;iBAClD,IAAI,CAAC;gBACF,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IAEc,0BAAgB,GAA/B,UAAgC,cAAuC;QACnE,cAAc;aAGT,IAAI,CAAC,GAAG,EAAE;YACP,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,yBAAyB;SACtC,CAAC;aAGD,IAAI,CAAC,QAAQ,EAAE;YACZ,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,gDAAgD;SAC7D,CAAC;aAGD,IAAI,CAAC,gBAAgB,EAAE;YACpB,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,8DAA8D;SAC3E,CAAC;aAGD,IAAI,CAAC,qBAAqB,EAAE;YACzB,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,wDAAwD;SACrE,CAAC;aASD,SAAS,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IACL,gBAAC;AAAD,CAtEA,AAsEC,IAAA;AAED,SAAS,CAAC,UAAU,EAAE,CAAC;ACtFvB,0CAA0C;AAC1C,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAuFT;AAvFD,WAAO,GAAG;IAAC,IAAA,GAAG,CAuFb;IAvFU,WAAA,GAAG,EAAC,CAAC;QACZ;YAA6B,2BAAmC;YAmE5D,WAAW;YAEX,iBAAY,SAAqC,EAAE,IAAkB;gBACjE,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;oBACrB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;oBACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;gBACvC,CAAC;YACL,CAAC;YA3ED,sBAAW,yBAAI;qBAAf;oBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACtB,CAAC;qBAED,UAAgB,KAAa;oBACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACvB,CAAC;;;eAJA;YAQD,sBAAW,wBAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;qBAED,UAAe,KAAa;oBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACtB,CAAC;;;eAJA;YAQD,sBAAW,sBAAC;qBAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,CAAC;qBAED,UAAa,KAAa;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBACpB,CAAC;;;eAJA;YAQD,sBAAW,sBAAC;qBAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,CAAC;qBAED,UAAa,KAAa;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBACpB,CAAC;;;eAJA;YAQD,sBAAW,kCAAa;qBAAxB;oBACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC/B,CAAC;qBAED,UAAyB,KAAa;oBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAChC,CAAC;;;eAJA;YAMD,sBAAW,gCAAW;qBAAtB;oBACI,MAAM,CAAgB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACrG,CAAC;;;eAAA;YAID,sBAAW,+BAAU;qBAArB;oBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC5B,CAAC;qBAED,UAAsB,KAAa;oBAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC7B,CAAC;;;eAJA;YAqBM,wBAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;YACL,cAAC;QAAD,CArFA,AAqFC,CArF4B,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAqFvD;QArFY,WAAO,UAqFnB,CAAA;IACL,CAAC,EAvFU,GAAG,GAAH,OAAG,KAAH,OAAG,QAuFb;AAAD,CAAC,EAvFM,GAAG,KAAH,GAAG,QAuFT;AC3FD,8DAA8D;AAC9D,6CAA6C;AAC7C,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CAcT;AAdD,WAAO,GAAG;IAAC,IAAA,GAAG,CAcb;IAdU,WAAA,GAAG;QAAC,IAAA,GAAG,CAcjB;QAdc,WAAA,GAAG,EAAC,CAAC;YAChB;gBAAgC,8BAAoD;gBAEhF,oBAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAAqB;4BACtE,MAAM,CAAC,IAAI,WAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBACxC,CAAC;wBACD,SAAS,EAAE,wBAAwB;qBACtC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBACL,iBAAC;YAAD,CAZA,AAYC,CAZ+B,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAYzD;YAZY,cAAU,aAYtB,CAAA;QACL,CAAC,EAdc,GAAG,GAAH,OAAG,KAAH,OAAG,QAcjB;IAAD,CAAC,EAdU,GAAG,GAAH,OAAG,KAAH,OAAG,QAcb;AAAD,CAAC,EAdM,GAAG,KAAH,GAAG,QAcT;ACnBD,0CAA0C;AAC1C,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAuCT;AAvCD,WAAO,GAAG;IAAC,IAAA,GAAG,CAuCb;IAvCU,WAAA,GAAG,EAAC,CAAC;QACZ;YAAiC,+BAAmC;YAuBhE,WAAW;YAEX,qBAAY,SAAqC,EAAE,IAAsB;gBACrE,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;gBACzB,CAAC;YACL,CAAC;YA3BD,sBAAW,+BAAM;qBAAjB;oBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;qBAED,UAAkB,KAAa;oBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,CAAC;;;eAJA;YAQD,sBAAW,4BAAG;qBAAd;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,CAAC;qBAED,UAAe,KAAa;oBACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBACtB,CAAC;;;eAJA;YAiBM,4BAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YACxB,CAAC;YACL,kBAAC;QAAD,CArCA,AAqCC,CArCgC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAqC3D;QArCY,eAAW,cAqCvB,CAAA;IACL,CAAC,EAvCU,GAAG,GAAH,OAAG,KAAH,OAAG,QAuCb;AAAD,CAAC,EAvCM,GAAG,KAAH,GAAG,QAuCT;AC3CD,8DAA8D;AAC9D,iDAAiD;AACjD,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CAcT;AAdD,WAAO,GAAG;IAAC,IAAA,GAAG,CAcb;IAdU,WAAA,GAAG;QAAC,IAAA,GAAG,CAcjB;QAdc,WAAA,GAAG,EAAC,CAAC;YAChB;gBAAoC,kCAAwD;gBAExF,wBAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAA6B;4BAC9E,MAAM,CAAC,IAAI,eAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBAC5C,CAAC;wBACD,SAAS,EAAE,4BAA4B;qBAC1C,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBACL,qBAAC;YAAD,CAZA,AAYC,CAZmC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAY7D;YAZY,kBAAc,iBAY1B,CAAA;QACL,CAAC,EAdc,GAAG,GAAH,OAAG,KAAH,OAAG,QAcjB;IAAD,CAAC,EAdU,GAAG,GAAH,OAAG,KAAH,OAAG,QAcb;AAAD,CAAC,EAdM,GAAG,KAAH,GAAG,QAcT;ACnBD,8DAA8D;AAC9D,6CAA6C;AAC7C,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CA6BT;AA7BD,WAAO,GAAG;IAAC,IAAA,GAAG,CA6Bb;IA7BU,WAAA,GAAG;QAAC,IAAA,GAAG,CA6BjB;QA7Bc,WAAA,GAAG,EAAC,CAAC;YAChB;gBAAwC,sCAA4D;gBAEhG,4BAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAA6B;4BAC9E,MAAM,CAAC,IAAI,mBAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBAChD,CAAC;wBACD,SAAS,EAAE,oBAAoB;qBAClC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBAEM,wCAAW,GAAlB,UAAmB,MAAc;oBAC7B,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC7B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAChD,CAAC;oBAED,IAAI,MAAM,GAAuB,EAAE,CAAC;oBACpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,EAAoB;wBACnC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;4BACvB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACpB,CAAC;oBACL,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,MAAM,CAAC;gBAClB,CAAC;gBACL,yBAAC;YAAD,CA3BA,AA2BC,CA3BuC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GA2BjE;YA3BY,sBAAkB,qBA2B9B,CAAA;QACL,CAAC,EA7Bc,GAAG,GAAH,OAAG,KAAH,OAAG,QA6BjB;IAAD,CAAC,EA7BU,GAAG,GAAH,OAAG,KAAH,OAAG,QA6Bb;AAAD,CAAC,EA7BM,GAAG,KAAH,GAAG,QA6BT;AClCD,8DAA8D;AAC9D,6CAA6C;AAC7C,0CAA0C;AAC1C,yDAAyD;AAEzD,IAAO,GAAG,CAcT;AAdD,WAAO,GAAG;IAAC,IAAA,GAAG,CAcb;IAdU,WAAA,GAAG;QAAC,IAAA,GAAG,CAcjB;QAdc,WAAA,GAAG,EAAC,CAAC;YAChB;gBAAmC,iCAAuD;gBAEtF,uBAAY,SAAqC,EAAE,KAAsB;oBACrE,kBAAM,SAAS,EAAE;wBACb,KAAK,EAAE,KAAK;wBACZ,WAAW,EAAE,UAAC,SAAqC,EAAE,IAAwB;4BACzE,MAAM,CAAC,IAAI,cAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;wBAC3C,CAAC;wBACD,SAAS,EAAE,uBAAuB;qBACrC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC;gBACL,oBAAC;YAAD,CAZA,AAYC,CAZkC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,GAY5D;YAZY,iBAAa,gBAYzB,CAAA;QACL,CAAC,EAdc,GAAG,GAAH,OAAG,KAAH,OAAG,QAcjB;IAAD,CAAC,EAdU,GAAG,GAAH,OAAG,KAAH,OAAG,QAcb;AAAD,CAAC,EAdM,GAAG,KAAH,GAAG,QAcT;ACnBD,0CAA0C;AAC1C,oDAAoD;AACpD,kDAAkD;AAClD,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAqMT;AArMD,WAAO,GAAG;IAAC,IAAA,GAAG,CAqMb;IArMU,WAAA,GAAG,EAAC,CAAC;QAKZ;YAAqC,mCAAmC;YAqKpE,WAAW;YAEX,yBAAY,SAAqC,EAAE,IAA0B;gBACzE,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;oBACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC;oBACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;oBACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;oBACnC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACjD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;oBAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;gBACjD,CAAC;YACL,CAAC;YArLD,sBAAW,+BAAE;qBAAb;oBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpB,CAAC;qBAED,UAAc,KAAa;oBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACrB,CAAC;;;eAJA;YAQD,sBAAW,mCAAM;qBAAjB;oBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;qBAED,UAAkB,KAAa;oBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,CAAC;;;eAJA;YAMD,sBAAW,iCAAI;qBAAf;oBACI,MAAM,CAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5F,CAAC;;;eAAA;YAID,sBAAW,wCAAW;qBAAtB;oBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC7B,CAAC;qBAED,UAAuB,KAAa;oBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC9B,CAAC;;;eAJA;YAMD,sBAAW,oCAAO;qBAAlB;oBACI,MAAM,CAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC3F,CAAC;;;eAAA;YAID,sBAAW,8BAAC;qBAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,CAAC;qBAED,UAAa,KAAa;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBACpB,CAAC;;;eAJA;YAQD,sBAAW,8BAAC;qBAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,CAAC;qBAED,UAAa,KAAa;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBACpB,CAAC;;;eAJA;YAQD,sBAAW,yCAAY;qBAAvB;oBACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;gBAC9B,CAAC;qBAED,UAAwB,KAAa;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC/B,CAAC;;;eAJA;YAQD,sBAAW,0CAAa;qBAAxB;oBACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;gBAC/B,CAAC;qBAED,UAAyB,KAAa;oBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAChC,CAAC;;;eAJA;YAMD,sBAAW,wCAAW;qBAAtB;oBACI,MAAM,CAAa,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC/F,CAAC;;;eAAA;YAID,sBAAW,wCAAW;qBAAtB;oBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC7B,CAAC;qBAED,UAAuB,KAAa;oBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC9B,CAAC;;;eAJA;YAMD,sBAAW,sCAAS;qBAApB;oBACI,MAAM,CAAc,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC/F,CAAC;;;eAAA;YAID,sBAAW,yCAAY;qBAAvB;oBACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;gBAC9B,CAAC;qBAED,UAAwB,KAAa;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC/B,CAAC;;;eAJA;YAQD,sBAAW,uCAAU;qBAArB;oBACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;gBAC5B,CAAC;qBAED,UAAsB,KAAa;oBAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC7B,CAAC;;;eAJA;YAQD,sBAAW,8CAAiB;qBAA5B;oBACI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBACnC,CAAC;qBAED,UAA6B,KAAa;oBACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBACpC,CAAC;;;eAJA;YAMD,sBAAW,4CAAe;qBAA1B;oBACI,MAAM,CAAkC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC;yBACtF,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,CAAC;;;eAAA;YAID,sBAAW,4CAAe;qBAA1B;oBACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACjC,CAAC;qBAED,UAA2B,KAAa;oBACpC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAClC,CAAC;;;eAJA;YAMD,sBAAW,0CAAa;qBAAxB;oBACI,MAAM,CAAkC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC;yBACtF,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACzC,CAAC;;;eAAA;YAID,sBAAW,mCAAM;qBAAjB;oBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;qBAED,UAAkB,KAAa;oBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,CAAC;;;eAJA;YAQD,sBAAW,4CAAe;qBAA1B;oBACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACjC,CAAC;;;eAAA;YAyBM,gCAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;YACL,sBAAC;QAAD,CA/LA,AA+LC,CA/LoC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GA+L/D;QA/LY,mBAAe,kBA+L3B,CAAA;IACL,CAAC,EArMU,GAAG,GAAH,OAAG,KAAH,OAAG,QAqMb;AAAD,CAAC,EArMM,GAAG,KAAH,GAAG,QAqMT;AC3MD,0CAA0C;AAC1C,oDAAoD;AACpD,0DAA0D;AAC1D,yDAAyD;AAEzD,IAAO,GAAG,CAqIT;AArID,WAAO,GAAG;IAAC,IAAA,GAAG,CAqIb;IArIU,WAAA,GAAG,EAAC,CAAC;QAGZ;YAAgC,8BAAmC;YA4G/D,WAAW;YAEX,oBAAY,SAAqC,EAAE,IAAqB;gBACpE,kBAAM,SAAS,CAAC,CAAC;gBAEjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;oBACrC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;oBACvC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBACjD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;oBAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;gBACjD,CAAC;YACL,CAAC;YAvHD,sBAAW,0BAAE;qBAAb;oBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;gBACpB,CAAC;qBAED,UAAc,KAAa;oBACvB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACrB,CAAC;;;eAJA;YAQD,sBAAW,mCAAW;qBAAtB;oBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC7B,CAAC;qBAED,UAAuB,KAAa;oBAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC9B,CAAC;;;eAJA;YAMD,sBAAW,+BAAO;qBAAlB;oBACI,MAAM,CAAY,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC3F,CAAC;;;eAAA;YAID,sBAAW,yBAAC;qBAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,CAAC;qBAED,UAAa,KAAa;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBACpB,CAAC;;;eAJA;YAQD,sBAAW,yBAAC;qBAAZ;oBACI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;gBACnB,CAAC;qBAED,UAAa,KAAa;oBACtB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;gBACpB,CAAC;;;eAJA;YAQD,sBAAW,oCAAY;qBAAvB;oBACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;gBAC9B,CAAC;qBAED,UAAwB,KAAa;oBACjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC/B,CAAC;;;eAJA;YAMD,sBAAW,kCAAU;qBAArB;oBACI,IAAI,IAAI,GAA8C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;oBACvG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACtC,CAAC;;;eAAA;YAID,sBAAW,yCAAiB;qBAA5B;oBACI,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBACnC,CAAC;qBAED,UAA6B,KAAa;oBACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBACpC,CAAC;;;eAJA;YAMD,sBAAW,uCAAe;qBAA1B;oBACI,MAAM,CAAkC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC;yBACtF,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,CAAC;;;eAAA;YAID,sBAAW,uCAAe;qBAA1B;oBACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACjC,CAAC;qBAED,UAA2B,KAAa;oBACpC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAClC,CAAC;;;eAJA;YAMD,sBAAW,qCAAa;qBAAxB;oBACI,MAAM,CAAkC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,oBAAoB,CAAC;yBACtF,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACzC,CAAC;;;eAAA;YAID,sBAAW,8BAAM;qBAAjB;oBACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBACxB,CAAC;qBAED,UAAkB,KAAa;oBAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,CAAC;;;eAJA;YAQD,sBAAW,uCAAe;qBAA1B;oBACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;gBACjC,CAAC;;;eAAA;YAoBM,2BAAM,GAAb;gBACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YACpB,CAAC;YACL,iBAAC;QAAD,CAjIA,AAiIC,CAjI+B,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,GAiI1D;QAjIY,cAAU,aAiItB,CAAA;IACL,CAAC,EArIU,GAAG,GAAH,OAAG,KAAH,OAAG,QAqIb;AAAD,CAAC,EArIM,GAAG,KAAH,GAAG,QAqIT","file":"sarconecmero.js","sourcesContent":["module snm {\r\n\texport class AppConstants {\r\n\r\n\t\tpublic static get CORE_MODULE_NAME(): string {\r\n\t\t\treturn \"snm\";\r\n\t\t}\r\n\r\n\t\tpublic static get APP_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".app\";\r\n\t\t}\r\n\r\n\t\tpublic static get COMPONENTS_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".components\";\r\n\t\t}\r\n\r\n\t\tpublic static get PAGES_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".pages\";\r\n\t\t}\r\n\r\n\t\tpublic static get SERVICES_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".services\";\r\n\t\t}\r\n\r\n\t\tpublic static get MAPS_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".maps\";\r\n\t\t}\r\n\r\n\t\tpublic static get OPS_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".ops\";\r\n\t\t}\r\n\r\n\t\tpublic static get PERS_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".pers\";\r\n\t\t}\r\n\r\n\t\tpublic static get CHRONO_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".chrono\";\r\n\t\t}\r\n\r\n\t\tpublic static get SARCOS_MODULE_NAME(): string {\r\n\t\t\treturn this.CORE_MODULE_NAME + \".sarcos\";\r\n\t\t}\r\n\t}\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../typings/angular/angular-route.d.ts\" />\r\n\r\nmodule snm.components {\r\n    class Controller {\r\n        public currentNavItem: string;\r\n\r\n        constructor(private $route: ng.route.IRouteService) {\r\n            this.currentNavItem = this._getNavItem($route.current.name);\r\n        }\r\n\r\n        private _getNavItem(routeName: string): string {\r\n            if (!routeName) {\r\n                //Default is 'home'\r\n                return \"home\";\r\n            }\r\n\r\n            switch (routeName) {\r\n                case \"home\":\r\n                    return \"home\";\r\n                case \"sites\":\r\n                case \"site-details\":\r\n                case \"site-edit\":\r\n                    return \"sites\";\r\n                default:\r\n                    return \"home\";\r\n            }\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.components.navMenu\", []).component(\"navMenu\", {\r\n        templateUrl: '/app/components/nav-menu/nav-menu.component.html',\r\n        controller: Controller,\r\n        controllerAs: \"vm\"\r\n    });\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"nav-menu/nav-menu.component.ts\" />\r\n\r\nmodule snm.components {\r\n\tangular.module(snm.AppConstants.COMPONENTS_MODULE_NAME, [\r\n\t\t\"snm.components.navMenu\"\r\n\t]);\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n\r\nmodule snm.services.settings {\r\n\r\n    interface DefaultSettings {\r\n        /**\r\n         * The Id of the Referential to use when displaying Sites or Operations.\r\n         */\r\n        opsReferentialId: number;\r\n\r\n        /**\r\n         * The starting zoom level of the map.\r\n         */\r\n        startZoom: number;\r\n\r\n        /**\r\n         * The starting center of the map, in EPSG:2154.\r\n         */\r\n        homeLocation: [number, number];\r\n\r\n        /**\r\n         * The root URL of the illustration storage container.\r\n         */\r\n        illustrationStorageRootUrl: string;\r\n    }\r\n\r\n    export class UserSettings {\r\n        public static defaultSettings: DefaultSettings;\r\n\r\n        public static fetchSettings($http: ng.IHttpService): ng.IHttpPromise<DefaultSettings> {\r\n            return $http.get<DefaultSettings>(\"api/settings/default\")\r\n                .then<DefaultSettings>((result: ng.IHttpPromiseCallbackArg<DefaultSettings>) => {\r\n                    UserSettings.defaultSettings = result.data;\r\n\r\n                    return result.data;\r\n                });\r\n        }\r\n\r\n        /**\r\n         * The current center of the map, in EPSG:3857\r\n         */\r\n        public currentLocation: [number, number];\r\n\r\n        /**\r\n         * The current zoom level of the map.\r\n         */\r\n        public currentZoom: number;\r\n\r\n        private _opsReferentialId: number;\r\n\r\n        /**\r\n         * The Id of the Referential to use when displaying Sites or Operations.\r\n         */\r\n        public get opsReferentialId(): number {\r\n            return this._opsReferentialId;\r\n        }\r\n\r\n        public set opsReferentialId(value: number) {\r\n            this._opsReferentialId = value;\r\n        }\r\n\r\n        private _startZoom: number;\r\n\r\n        /**\r\n         * The starting zoom level of the map.\r\n         */\r\n        public get startZoom(): number {\r\n            return this._startZoom;\r\n        }\r\n\r\n        public set startZoom(value: number) {\r\n            this._startZoom = value;\r\n        }\r\n\r\n        private _homeLocation: [number, number];\r\n\r\n        /**\r\n         * The starting center of the map, in EPSG:2154.\r\n         */\r\n        public get homeLocation(): [number, number] {\r\n            return this._homeLocation;\r\n        }\r\n\r\n        public set homeLocation(value: [number, number]) {\r\n            this._homeLocation = value;\r\n        }\r\n\r\n        private _illustrationStorageRootUrl: string;\r\n\r\n        /**\r\n         * The root URL of the illustration storage container.\r\n         */\r\n        public get illustrationStorageRootUrl(): string {\r\n            return this._illustrationStorageRootUrl;\r\n        }\r\n\r\n        public set illustrationStorageRootUrl(value: string) {\r\n            this._illustrationStorageRootUrl = value;\r\n        }\r\n\r\n        constructor() {\r\n            if (UserSettings.defaultSettings) {\r\n                this._opsReferentialId = UserSettings.defaultSettings.opsReferentialId;\r\n                this._startZoom = UserSettings.defaultSettings.startZoom;\r\n                this._homeLocation = UserSettings.defaultSettings.homeLocation;\r\n                this._illustrationStorageRootUrl = UserSettings.defaultSettings.illustrationStorageRootUrl;\r\n            }\r\n        }\r\n    }\r\n    \r\n    angular.module(\"snm.services.settings\", [])\r\n        .factory(\"userSettings\", () => new UserSettings());\r\n}","module adnw.common {\r\n    export type EventCallback<T> = (oldValue: T, newValue: T) => void;\r\n\r\n    export class EventBlock {\r\n        private _map: Map<string, Set<EventCallback<any>>>;\r\n\r\n        constructor() {\r\n            this._map = new Map<string, Set<EventCallback<any>>>();\r\n        }\r\n\r\n        public on(event: string, callback: EventCallback<any>): void {\r\n            if (!event) {\r\n                throw new Error(\"Event cannot be empty.\");\r\n            }\r\n\r\n            if (!callback) {\r\n                throw new Error(\"Callback cannot be null.\");\r\n            }\r\n\r\n            let set: Set<EventCallback<any>>;\r\n\r\n            if (!this._map.has(event)) {\r\n                set = new Set<EventCallback<any>>();\r\n                this._map.set(event, set);\r\n            } else {\r\n                set = this._map.get(event);\r\n            }\r\n\r\n            set.add(callback);\r\n        }\r\n\r\n        public un(event: string, callback: EventCallback<any>): void {\r\n            if (!event) {\r\n                throw new Error(\"Event cannot be empty.\");\r\n            }\r\n\r\n            if (!callback) {\r\n                throw new Error(\"Callback cannot be null.\");\r\n            }\r\n\r\n            if (this._map.has(event)) {\r\n                let set: Set<EventCallback<any>> = this._map.get(event);\r\n                set.delete(callback);\r\n            }\r\n        }\r\n\r\n        public dispatch<T>(event: string, oldValue?: T, newValue?: T): void {\r\n            if (!event) {\r\n                throw new Error(\"Event cannot be empty.\");\r\n            }\r\n\r\n            if (!this._map.has(event)) {\r\n                return;\r\n            }\r\n\r\n            let set: Set<EventCallback<any>> = this._map.get(event);\r\n            set.forEach((cb: EventCallback<T>) => {\r\n                cb(oldValue, newValue);\r\n            });\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../../typings/openlayers/openlayers.d.ts\" />\r\n/// <reference path=\"../../../../typings/proj4/proj4.d.ts\" />\r\n/// <reference path=\"../../../common/event-block.ts\" />\r\n/// <reference path=\"./map.ts\" />\r\n\r\nmodule snm.maps.components {\r\n    export class ViewManager {\r\n\r\n        private _map: snm.maps.components.Map;\r\n        private _olMap: ol.Map;\r\n        private _eventBlock: adnw.common.EventBlock;\r\n\r\n        private _center: [number, number];\r\n\r\n        public get center(): [number, number] {\r\n            return this._center;\r\n        }\r\n\r\n        public set center(value: [number, number]) {\r\n            this._center = value;\r\n            this._olMap.getView().setCenter(value);\r\n        }\r\n\r\n        private _scale: number;\r\n\r\n        public get scale(): number {\r\n            return this._scale;\r\n        }\r\n\r\n        private _zoom: number;\r\n\r\n        public get zoom(): number {\r\n            return this._zoom;\r\n        }\r\n\r\n        public set zoom(value: number) {\r\n            this._zoom = value;\r\n            this._olMap.getView().setZoom(value);\r\n        }\r\n\r\n        constructor(map: snm.maps.components.Map, olMap: ol.Map, eventBlock: adnw.common.EventBlock) {\r\n            if (!map) {\r\n                throw new Error(\"Map cannot be null.\");\r\n            }\r\n\r\n            if (!olMap) {\r\n                throw new Error(\"OlMap cannot be null.\");\r\n            }\r\n\r\n            if (!eventBlock) {\r\n                throw new Error(\"EventBlock cannot be null.\");\r\n            }\r\n\r\n            this._map = map;\r\n            this._olMap = olMap;\r\n            this._eventBlock = eventBlock;\r\n\r\n            olMap.on(\"change:view\", (ev: any) => {\r\n                //Unregister from previous view\r\n                let oldView: ol.View = ev.oldValue;\r\n                this._unregisterFromViewEvents(oldView);\r\n\r\n                //Register to new one\r\n                let view: ol.View = ev.target.get(ev.key);\r\n                this._registerToViewEvents(view);\r\n            });\r\n\r\n            this._setupView(olMap.getView());\r\n        }\r\n\r\n        public flyTo(coordinates: ol.Coordinate, done?: (complete: boolean) => void): void {\r\n            let view: ol.View = this._olMap.getView();\r\n            let duration: number = 2000;\r\n            let zoom: number = view.getZoom();\r\n            let parts: number = 2;\r\n            let called = false;\r\n\r\n            let callback: (complete: boolean) => void = (complete: boolean) => {\r\n                --parts;\r\n                if (called) {\r\n                    return;\r\n                }\r\n                if (parts === 0 || !complete) {\r\n                    called = true;\r\n\r\n                    if (done) {\r\n                        done(complete);\r\n                    }\r\n                }\r\n            };\r\n\r\n            view.animate({\r\n                center: coordinates,\r\n                duration: duration\r\n            }, callback);\r\n            view.animate({\r\n                zoom: zoom - 1,\r\n                duration: duration / 2\r\n            }, {\r\n                zoom: zoom,\r\n                duration: duration / 2\r\n            }, callback);\r\n        }\r\n\r\n        private _computeScale(resolution: number, proj: ol.proj.Projection): number {\r\n            let dpi: number = 25.4 / 0.28;\r\n            let scale: number = resolution * proj.getMetersPerUnit() * 39.37 * dpi;\r\n\r\n            return scale;\r\n        }\r\n\r\n        //region View events\r\n        private _resolutionChangeKey: ol.EventsKey;\r\n        private _centerChangeKey: ol.EventsKey;\r\n\r\n        private _registerToViewEvents(view: ol.View): void {\r\n            this._resolutionChangeKey = view.on(\"change:resolution\", (ev: any) => {\r\n                let view: ol.View = ev.target;\r\n                let proj: ol.proj.Projection = view.getProjection();\r\n                let newRes: number = ev.target.get(ev.key);\r\n\r\n                let oldScale: number = this._scale;\r\n                this._scale = this._computeScale(newRes, proj);\r\n                this._eventBlock.dispatch(\"change:scale\", oldScale, this._scale);\r\n\r\n                let oldZoom: number;\r\n                this._zoom = view.getZoom();\r\n                this._eventBlock.dispatch(\"change:zoom\", oldZoom, this._zoom);\r\n            });\r\n\r\n            this._centerChangeKey = view.on(\"change:center\", (ev: any) => {\r\n                let oldCenter: [number, number] = this._center;\r\n                let newCenter: [number, number] = ev.target.get(ev.key);\r\n\r\n                this._center = newCenter;\r\n                this._eventBlock.dispatch(\"change:center\", oldCenter, newCenter);\r\n            });\r\n        }\r\n\r\n        private _unregisterFromViewEvents(view: ol.View): void {\r\n            if (this._resolutionChangeKey) {\r\n                view.unByKey(this._resolutionChangeKey);\r\n            }\r\n\r\n            if (this._centerChangeKey) {\r\n                view.unByKey(this._centerChangeKey);\r\n            }\r\n        }\r\n\r\n        private _setupView(view: ol.View): void {\r\n            this._registerToViewEvents(view);\r\n            this._center = view.getCenter();\r\n            this._scale = this._computeScale(view.getResolution(), view.getProjection());\r\n            this._zoom = view.getZoom();\r\n        }\r\n        //endregion\r\n    }\r\n}\r\n","/// <reference path=\"../../../../../typings/openlayers/openlayers.d.ts\" />\r\n/// <reference path=\"../map.ts\" />\r\n\r\nmodule snm.maps.components {\r\n    export class CursorPosition extends ol.interaction.Pointer {\r\n        private _map: snm.maps.components.Map;\r\n\r\n        constructor(map: snm.maps.components.Map) {\r\n            if (!map) {\r\n                throw new Error(\"Map cannot be null.\");\r\n            }\r\n\r\n            super({\r\n                handleMoveEvent: (ev: ol.MapBrowserEvent) => {\r\n                    this._map.cursor = this._map.convertFromProj(ev.coordinate);\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            this._map = map;\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../../../../typings/openlayers/openlayers.d.ts\" />\r\n\r\nmodule snm.maps.components {\r\n    export class LocationPicker extends ol.interaction.Interaction {\r\n\r\n        private _promise: Promise<ol.Coordinate>;\r\n        private _resolve: (value: ol.Coordinate) => void;\r\n        private _reject: (reason: any) => void;\r\n\r\n        public get promise(): Promise<ol.Coordinate> {\r\n            return this._promise;\r\n        }\r\n\r\n        constructor() {\r\n            let resolve: (value: ol.Coordinate) => void;\r\n            let reject: (reason: any) => void;\r\n\r\n            super({\r\n                handleEvent: (ev: ol.MapBrowserEvent): boolean => {\r\n                    switch (ev.type) {\r\n                        case \"pointerup\":\r\n                            resolve(ev.coordinate);\r\n                            break;\r\n                        case \"keydown\":\r\n                            let keyEvent: KeyboardEvent = (<any> ev).originalEvent;\r\n                            let key: string = keyEvent.key;\r\n                            if (key === \"Escape\") {\r\n                                reject(\"Cancelled\");\r\n                            }\r\n                            break;\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            this._promise = new Promise<ol.Coordinate>(\r\n                (res: (value: ol.Coordinate) => void, rej: (reason: any) => void) => {\r\n                    resolve = res;\r\n                    reject = rej;\r\n                });\r\n\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        }\r\n\r\n        public handleEvent(ev: ol.MapBrowserEvent): boolean {\r\n            this._resolve(ev.coordinate);\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../../../typings/openlayers/openlayers.d.ts\" />\r\n/// <reference path=\"../../../../typings/proj4/proj4.d.ts\" />\r\n/// <reference path=\"../../../common/event-block.ts\" />\r\n/// <reference path=\"./view-manager.ts\" />\r\n/// <reference path=\"./interactions/cursor-position.ts\" />\r\n/// <reference path=\"./interactions/location-picker.ts\" />\r\n/// <reference path=\"../../../services/user-settings.ts\" />\r\n\r\nmodule snm.maps.components {\r\n    export interface BaseLayerDefinition {\r\n        label: string;\r\n        imgUrl: string;\r\n        layer: ol.layer.Layer\r\n    }\r\n\r\n    export class Map {\r\n        public static loadProjections(): void {\r\n            proj4.defs(\"EPSG:2154\", \"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\r\n        }\r\n\r\n        private _PROJ: string = \"EPSG:3857\";\r\n        private _DATA_PROJ: string = \"EPSG:2154\";\r\n        private _map: ol.Map;\r\n        private _viewManager: snm.maps.components.ViewManager;\r\n        private _eventBlock: adnw.common.EventBlock;\r\n\r\n        public get targetElement(): Element {\r\n            return this._map.getTargetElement();\r\n        }\r\n\r\n        private _baseLayers: BaseLayerDefinition[];\r\n\r\n        public get baseLayers(): BaseLayerDefinition[] {\r\n            return this._baseLayers;\r\n        }\r\n\r\n        private _baseLayer: BaseLayerDefinition;\r\n\r\n        public get baseLayer(): BaseLayerDefinition {\r\n            return this._baseLayer;\r\n        }\r\n\r\n        public set baseLayer(value: BaseLayerDefinition) {\r\n            this._baseLayer = value;\r\n            this._baseLayers.forEach((layerDef: snm.maps.components.BaseLayerDefinition) => {\r\n                layerDef.layer.setVisible(layerDef === this._baseLayer);\r\n            });\r\n        }\r\n\r\n        public get center(): [number, number] {\r\n            return this._viewManager.center;\r\n        }\r\n\r\n        public set center(value: [number, number]) {\r\n            this._viewManager.center = value;\r\n        }\r\n\r\n        public get scale(): number {\r\n            return this._viewManager.scale;\r\n        }\r\n\r\n        public get zoom(): number {\r\n            return this._viewManager.zoom;\r\n        }\r\n\r\n        public set zoom(value: number) {\r\n            this._viewManager.zoom = value;\r\n        }\r\n\r\n        private _cursor: [number, number];\r\n\r\n        /**\r\n         * Current cursor position, in EPSG:2154.\r\n         */\r\n        public get cursor(): [number, number] {\r\n            return this._cursor;\r\n        }\r\n\r\n        public set cursor(value: [number, number]) {\r\n            let oldValue: [number, number] = this._cursor;\r\n            this._cursor = value;\r\n            this._eventBlock.dispatch(\"change:cursorPosition\", oldValue, value);\r\n        }\r\n\r\n        constructor(elementId: string, private userSettings: snm.services.settings.UserSettings) {\r\n            Map.loadProjections();\r\n            this._baseLayers = this._createBaseLayers();\r\n            this._map = this._createMap(elementId);\r\n            this._eventBlock = new adnw.common.EventBlock();\r\n            this._viewManager = new snm.maps.components.ViewManager(this, this._map, this._eventBlock);\r\n        }\r\n\r\n        /**\r\n         * Convert from DATA_PROJ (EPSG:2154) to PROJ (EPSG:3857).\r\n         * @param coordinates The coordinates to convert.\r\n         */\r\n        public convertToProj(coordinates: ol.Coordinate): ol.Coordinate {\r\n            return proj4<ol.Coordinate>(this._DATA_PROJ, this._PROJ, coordinates);\r\n        }\r\n\r\n        /**\r\n         * Convert from PROJ (EPSG:3857) to DATA_PROJ (EPSG:2154).\r\n         * @param coordinates The coordinates to convert.\r\n         */\r\n        public convertFromProj(coordinates: ol.Coordinate): ol.Coordinate {\r\n            return proj4<ol.Coordinate>(this._PROJ, this._DATA_PROJ, coordinates);\r\n        }\r\n\r\n        public flyTo(coordinates: ol.Coordinate, done?: (complete: boolean) => void): void {\r\n            this._viewManager.flyTo(coordinates, done);\r\n        }\r\n\r\n        public pickLocation(): Promise<ol.Coordinate> {\r\n            let picker: LocationPicker = new LocationPicker();\r\n\r\n            this._map.addInteraction(picker);\r\n            picker.promise.then(() => {\r\n                this._map.removeInteraction(picker);\r\n            }, () => {\r\n                this._map.removeInteraction(picker);\r\n            });\r\n\r\n            return picker.promise;\r\n        }\r\n\r\n        public addLayer(layer: ol.layer.Layer): void {\r\n            if (!layer) {\r\n                return;\r\n            }\r\n\r\n            this._map.addLayer(layer);\r\n        }\r\n\r\n        public removeLayer(layer: ol.layer.Layer): void {\r\n            if (!layer) {\r\n                return;\r\n            }\r\n\r\n            this._map.removeLayer(layer);\r\n        }\r\n\r\n        public on(event: string, callback: adnw.common.EventCallback<any>): void {\r\n            if (!event) {\r\n                throw new Error(\"Event cannot be empty.\");\r\n            }\r\n\r\n            if (!callback) {\r\n                throw new Error(\"Callback cannot be null.\");\r\n            }\r\n\r\n            this._eventBlock.on(event, callback);\r\n        }\r\n\r\n        public un(event: string, callback: adnw.common.EventCallback<any>): void {\r\n            if (!event) {\r\n                throw new Error(\"Event cannot be empty.\");\r\n            }\r\n\r\n            if (!callback) {\r\n                throw new Error(\"Callback cannot be null.\");\r\n            }\r\n\r\n            this._eventBlock.un(event, callback);\r\n        }\r\n\r\n        private _createBaseLayers(): BaseLayerDefinition[] {\r\n            let result: BaseLayerDefinition[] = [];\r\n            let def: BaseLayerDefinition;\r\n\r\n            def = {\r\n                label: \"Open Street Map\",\r\n                imgUrl: \"assets/img/osm.png\",\r\n                layer: new ol.layer.Tile({\r\n                    source: new ol.source.OSM()\r\n                })\r\n            };\r\n            result.push(def);\r\n\r\n            def = {\r\n                label: \"Carte de Cassini\",\r\n                imgUrl: \"assets/img/cassini.png\",\r\n                layer: new ol.layer.Tile({\r\n                    source: this._getCassiniWmtsSource()\r\n                })\r\n            };\r\n            result.push(def);\r\n\r\n            return result;\r\n        }\r\n\r\n        private _createMap(elementId: string): ol.Map {\r\n            let center: [number, number];\r\n\r\n            //Check if a current location is defined\r\n            if (this.userSettings.currentLocation) {\r\n                //Already in target projection\r\n                center = this.userSettings.currentLocation;\r\n            }\r\n\r\n            //Check if home location can be used\r\n            if (!center && this.userSettings.homeLocation) {\r\n                center = this.convertToProj(this.userSettings.homeLocation);\r\n            }\r\n\r\n            let zoom: number;\r\n\r\n            //Check if a current zoom is defined\r\n            if (this.userSettings.currentZoom) {\r\n                zoom = this.userSettings.currentZoom;\r\n            }\r\n\r\n            //Check if start zoom can be used\r\n            if (typeof zoom !== \"number\" && typeof this.userSettings.startZoom === \"number\") {\r\n                zoom = this.userSettings.startZoom;\r\n            }\r\n\r\n            let view: ol.View = new ol.View({\r\n                projection: this._PROJ,\r\n                center: center ? center : [0, 0],\r\n                zoom: typeof zoom === \"number\" ? zoom : 1\r\n            });\r\n\r\n            let layers: ol.layer.Base[] = this._baseLayers.map((def: BaseLayerDefinition) => def.layer);\r\n\r\n            let map: ol.Map = new ol.Map({\r\n                target: elementId,\r\n                loadTilesWhileAnimating: true,\r\n                view: view,\r\n                layers: layers,\r\n                interactions: ol.interaction.defaults().extend([new snm.maps.components.CursorPosition(this)])\r\n            });\r\n\r\n            setTimeout(() => {\r\n                map.updateSize();\r\n            });\r\n\r\n            this.baseLayer = this._baseLayers[0];\r\n\r\n            return map;\r\n        }\r\n\r\n        private _getCassiniWmtsSource(): ol.source.XYZ {\r\n            let source: ol.source.XYZ = new ol.source.XYZ({\r\n                url: \"http://georeferencer-{0-1}.tileserver.com/a0b83ea87a4e6c2f35bb30d105ac787271a1f7a8/map/2Uu3fCXb8HK9fjs2vADCAZ/201601190350-6lA3T0/polynomial/{z}/{x}/{y}.png\",\r\n                minZoom: 0,\r\n                maxZoom: 13,\r\n                tilePixelRatio: 1\r\n            });\r\n\r\n            return source;\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../services/user-settings.ts\" />\r\n/// <reference path=\"../map/map.ts\" />\r\n\r\nmodule snm.maps.components {\r\n    export class LayerPickerController {\r\n        static $inject: string[] = [\"$scope\", \"userSettings\"];\r\n\r\n        public map: snm.maps.components.Map;\r\n        public mdPanelRef: angular.material.MDPanelRef;\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private userSettings: snm.services.settings.UserSettings) {\r\n        }\r\n\r\n        public useLayer(def: snm.maps.components.BaseLayerDefinition): void {\r\n            this.map.baseLayer = def;\r\n            this.mdPanelRef.hide();\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular-material/angular-material.d.ts\" />\r\n/// <reference path=\"../../../services/user-settings.ts\" />\r\n/// <reference path=\"../map/map.ts\" />\r\n/// <reference path=\"../layer-picker/layer-picker.component.ts\" />\r\n\r\nmodule snm.maps.components {\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$mdPanel\", \"userSettings\"];\r\n\r\n        private _showScale: boolean = true;\r\n\r\n        public get showScale(): boolean {\r\n            return this._showScale;\r\n        }\r\n\r\n        public set showScale(value: boolean) {\r\n            this._showScale = value;\r\n        }\r\n\r\n        public map: snm.maps.components.Map;\r\n\r\n        public get showHome(): boolean {\r\n            return !!this.goToHome;\r\n        }\r\n\r\n        public goToHome: () => void;\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $mdPanel: angular.material.MDPanelService,\r\n                    private userSettings: snm.services.settings.UserSettings) {\r\n        }\r\n\r\n        public $onInit(): void {\r\n            this._registerToMapEvents(this.map);\r\n        }\r\n\r\n        public toggleScale(): void {\r\n            this._showScale = !this._showScale;\r\n        }\r\n\r\n        public openLayerPicker(): void {\r\n            let panelPosition: angular.material.MDPanelPosition = this.$mdPanel.newPanelPosition()\r\n                .relativeTo(\"#layer-picker\")\r\n                .addPanelPosition(this.$mdPanel.xPosition.ALIGN_START, this.$mdPanel.yPosition.ABOVE);\r\n\r\n            let config: angular.material.MDPanelConfig = {\r\n                attachTo: angular.element(document.body),\r\n                templateUrl: \"/app/maps/components/layer-picker/layer-picker.component.html\",\r\n                controller: snm.maps.components.LayerPickerController,\r\n                controllerAs: \"vm\",\r\n                position: panelPosition,\r\n                clickOutsideToClose: true,\r\n                escapeToClose: true,\r\n                focusOnOpen: true,\r\n                locals: {\r\n                    map: this.map\r\n                }\r\n            };\r\n\r\n            let panelRef: angular.material.MDPanelRef;\r\n\r\n            this.$mdPanel.open(config)\r\n                .then(function(result: angular.material.MDPanelRef) {\r\n                    panelRef = result;\r\n                });\r\n        }\r\n\r\n        private _registerToMapEvents(map: snm.maps.components.Map): void {\r\n            if (!map) {\r\n                throw new Error(\"Map cannot be null.\");\r\n            }\r\n\r\n            map.on(\"change:scale\", () => {\r\n                this._onChange();\r\n            });\r\n            map.on(\"change:zoom\", (oldValue: number, newValue: number) => {\r\n                if (this.userSettings) {\r\n                    this.userSettings.currentZoom = newValue;\r\n                }\r\n\r\n                this._onChange();\r\n            });\r\n            map.on(\"change:cursorPosition\", () => {\r\n                this._onChange();\r\n            });\r\n\r\n            map.on(\"change:center\", (oldValue: [number, number], newValue: [number, number]) => {\r\n                if (this.userSettings) {\r\n                    this.userSettings.currentLocation = newValue;\r\n                }\r\n\r\n                this._onChange();\r\n            });\r\n        }\r\n\r\n        private _onChange(oldValue?: any, newValue?: any): void {\r\n            if (!this.$scope) {\r\n                return;\r\n            }\r\n\r\n            this.$scope.$applyAsync();\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.maps.components.map-toolbar\", [\r\n        \"snm.services.settings\"\r\n    ]).component(\"mapToolbar\", {\r\n        templateUrl: \"/app/maps/components/map-toolbar/map-toolbar.component.html\",\r\n        controller: Controller,\r\n        controllerAs: \"vm\",\r\n        bindings: {\r\n            map: \"<\",\r\n            goToHome: \"&?\"\r\n        }\r\n    });\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n\r\nmodule snm.services.dal {\r\n    export interface EntitySetOptions<TEntity, TData> {\r\n        $http: ng.IHttpService;\r\n        getAllUrl: string;\r\n        parseEntity(dbContext: DbContext, data: TData): TEntity;\r\n    }\r\n\r\n    export interface IEntity<TKey> {\r\n        getKey(): TKey;\r\n    }\r\n\r\n    export interface IEntitySet<TKey, TEntity extends IEntity<TKey>> {\r\n        getAll(): TEntity[];\r\n        getByKey(key: TKey): TEntity;\r\n        refresh(): Promise<Object>;\r\n    }\r\n}\r\n","/// <reference path=\"../services/dal/definitions.ts\" />\r\n\r\ndeclare module snm.chrono {\r\n    export interface PhaseChronologiqueData {\r\n        id: number;\r\n        code: string;\r\n        nom: string;\r\n        debut: number;\r\n        fin: number;\r\n    }\r\n\r\n    export interface IPhaseChronologique extends PhaseChronologiqueData, snm.services.dal.IEntity<number> {\r\n    }\r\n\r\n    export interface IPhaseChronologiqueSet extends snm.services.dal.EntitySet<number, IPhaseChronologique> {\r\n    }\r\n}","/// <reference path=\"../services/dal/definitions.ts\" />\r\n\r\ndeclare module snm.pers {\r\n    export interface PersonneData {\r\n        id: number;\r\n        prenom: string;\r\n        autresPrenoms: string;\r\n        nom: string;\r\n        suffixe: string;\r\n        nomComplet: string;\r\n        organismeId: number;\r\n    }\r\n\r\n    export interface OrganismeData {\r\n        id: number;\r\n        nom: string;\r\n        abreviation: string;\r\n    }\r\n\r\n    export interface IPersonne extends PersonneData, snm.services.dal.IEntity<number> {\r\n        organisme: IOrganisme\r\n    }\r\n\r\n    export interface IOrganisme extends OrganismeData, snm.services.dal.IEntity<number> {\r\n    }\r\n\r\n    export interface IPersonneSet extends snm.services.dal.EntitySet<number, IPersonne> {\r\n    }\r\n    export interface IOrganismeSet extends snm.services.dal.EntitySet<number, IOrganisme> {\r\n    }\r\n}","/// <reference path=\"../services/dal/definitions.ts\" />\r\n/// <reference path=\"../chrono/definitions.ts\" />\r\n/// <reference path=\"../pers/definitions.ts\" />\r\n\r\ndeclare module snm.ops {\r\n    export interface DepartementData {\r\n        numero: number;\r\n        nom: string;\r\n    }\r\n\r\n    export interface CommuneData {\r\n        code: number;\r\n        nom: string;\r\n        x: number;\r\n        y: number;\r\n        departementId: number;\r\n        codeRegion: number;\r\n    }\r\n\r\n    export interface IdentificationSite {\r\n        referentielId: number;\r\n        reference: string;\r\n        nom: string;\r\n    }\r\n\r\n    export interface IdentificationOperation {\r\n        referentielId: number;\r\n        reference: string;\r\n        nom: string;\r\n    }\r\n\r\n    export interface SiteArcheoData {\r\n        id: number;\r\n        codeCommune: number;\r\n        x: number;\r\n        y: number;\r\n        localisation: string;\r\n        debutOccupationId: number;\r\n        finOccupationId: number;\r\n        planId: number;\r\n        identifications: IdentificationSite[];\r\n    }\r\n\r\n    export interface OperationArcheoData {\r\n        id: number;\r\n        siteId: number;\r\n        codeCommune: number;\r\n        x: number;\r\n        y: number;\r\n        localisation: string;\r\n        responsableId: number;\r\n        organismeId: number;\r\n        debutTravaux: string;\r\n        finTravaux: string;\r\n        debutOccupationId: number;\r\n        finOccupationId: number;\r\n        planId: number;\r\n        identifications: IdentificationOperation[];\r\n    }\r\n\r\n    export interface IDepartement extends DepartementData, snm.services.dal.IEntity<number> {\r\n    }\r\n\r\n    export interface ICommune extends CommuneData, snm.services.dal.IEntity<number> {\r\n        departement: IDepartement;\r\n    }\r\n\r\n    export interface ISiteArcheo extends SiteArcheoData, snm.services.dal.IEntity<number> {\r\n        commune: ICommune;\r\n        operations: IOperationArcheo[];\r\n        debutOccupation: snm.chrono.IPhaseChronologique;\r\n        finOccupation: snm.chrono.IPhaseChronologique;\r\n    }\r\n\r\n    export interface IOperationArcheo extends OperationArcheoData, snm.services.dal.IEntity<number> {\r\n        site: ISiteArcheo;\r\n        commune: ICommune;\r\n        responsable: snm.pers.IPersonne;\r\n        organisme: snm.pers.IOrganisme;\r\n        debutOccupation: snm.chrono.IPhaseChronologique;\r\n        finOccupation: snm.chrono.IPhaseChronologique;\r\n    }\r\n\r\n    export interface IDepartementSet extends snm.services.dal.EntitySet<number, IDepartement> {\r\n    }\r\n\r\n    export interface ICommuneSet extends snm.services.dal.EntitySet<number, ICommune> {\r\n    }\r\n\r\n    export interface ISiteArcheoSet extends snm.services.dal.EntitySet<number, ISiteArcheo> {\r\n    }\r\n\r\n    export interface IOperationArcheoSet extends snm.services.dal.EntitySet<number, IOperationArcheo> {\r\n        getBySiteId(siteId: number): IOperationArcheo[];\r\n    }\r\n}","/// <reference path=\"./definitions.ts\" />\r\n/// <reference path=\"../pers/definitions-summary.ts\" />\r\n\r\nmodule snm.ops {\r\n    export interface OperationArcheoSummary {\r\n        id: number;\r\n        siteId: number;\r\n        codeCommune: number;\r\n        commune: string;\r\n        departement: number;\r\n        x: number;\r\n        y: number;\r\n        localisation: string;\r\n        responsable: snm.pers.PersonneSummary;\r\n        organisme: string;\r\n        debutTravaux: string;\r\n        finTravaux: string;\r\n        debutOccupationId: number;\r\n        finOccupationId: number;\r\n        planId: number;\r\n        identifications: snm.ops.IdentificationOperation[];\r\n    }\r\n\r\n    export interface SiteArcheoSummary {\r\n        id: number;\r\n        reference: string;\r\n        codeCommune: number;\r\n        commune: string;\r\n        departement: number;\r\n        x: number;\r\n        y: number;\r\n        localisation: string;\r\n        debutOccupationId: number;\r\n        finOccupationId: number;\r\n        operations: OperationArcheoSummary[];\r\n        identifications: snm.ops.IdentificationSite[];\r\n    }\r\n\r\n    export interface CommuneSummary {\r\n        code: number;\r\n        nom: string;\r\n        departement: number;\r\n        sites: SiteArcheoSummary[];\r\n    }\r\n}\r\n","/// <reference path=\"./definitions.ts\" />\r\n\r\nmodule snm.ops.details {\r\n    export interface OperationArcheo {\r\n        id: number;\r\n        codeCommune: number;\r\n        commune: string;\r\n        departement: number;\r\n        x: number;\r\n        y: number;\r\n        localisation: string;\r\n        responsableId: number;\r\n        organismeId: number;\r\n        debutTravaux: string;\r\n        finTravaux: string;\r\n        debutOccupationId: number;\r\n        finOccupationId: number;\r\n        planId: number;\r\n        identifications: snm.ops.IdentificationOperation[];\r\n    }\r\n\r\n    export interface SiteArcheoData {\r\n        id: number;\r\n        reference: string;\r\n        codeCommune: number;\r\n        commune: string;\r\n        departement: number;\r\n        x: number;\r\n        y: number;\r\n        localisation: string;\r\n        debutOccupationId: number;\r\n        finOccupationId: number;\r\n        operations: OperationArcheo[];\r\n        identifications: snm.ops.IdentificationSite[]\r\n    }\r\n\r\n    export class SiteArcheo implements SiteArcheoData {\r\n        public id: number;\r\n        public reference: string;\r\n        public codeCommune: number;\r\n        public commune: string;\r\n        public departement: number;\r\n        public x: number;\r\n        public y: number;\r\n        public localisation: string;\r\n        public debutOccupationId: number;\r\n        public finOccupationId: number;\r\n        public operations: OperationArcheo[];\r\n        public identifications: snm.ops.IdentificationSite[];\r\n\r\n        public clone(): SiteArcheo {\r\n            let site: SiteArcheo = new SiteArcheo();\r\n            site.updateFrom(this);\r\n\r\n            return site;\r\n        }\r\n\r\n        public updateFrom(other: SiteArcheoData): void {\r\n            if (!other) {\r\n                return;\r\n            }\r\n            \r\n            this.id = other.id;\r\n            this.reference = other.reference;\r\n            this.codeCommune = other.codeCommune;\r\n            this.commune = other.commune;\r\n            this.departement = other.departement;\r\n            this.x = other.x;\r\n            this.y = other.y;\r\n            this.localisation = other.localisation;\r\n            this.debutOccupationId = other.debutOccupationId;\r\n            this.finOccupationId = other.finOccupationId;\r\n            this.operations = _.cloneDeep(other.operations);\r\n            this.identifications = _.cloneDeep(other.identifications);            \r\n        }\r\n\r\n        public isEquivalent(other: SiteArcheo): boolean {\r\n            if (!other) {\r\n                return false;\r\n            }\r\n\r\n            let result: boolean = true;\r\n\r\n            result = result && this.id === other.id;\r\n            result = result && this.reference === other.reference;\r\n            result = result && this.codeCommune === other.codeCommune;\r\n            result = result && this.commune === other.commune;\r\n            result = result && this.departement === other.departement;\r\n            result = result && this.x === other.x;\r\n            result = result && this.y === other.y;\r\n            result = result && this.localisation === other.localisation;\r\n            result = result && this.debutOccupationId === other.debutOccupationId;\r\n            result = result && this.finOccupationId === other.finOccupationId;\r\n            result = result && _.isEqual(this.operations, other.operations);\r\n            result = result && _.isEqual(this.identifications, other.identifications);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    export interface Commune {\r\n        code: number;\r\n        nom: string;\r\n        departement: number;\r\n    }\r\n}\r\n","/// <reference path=\"../../../typings/openlayers/openlayers.d.ts\" />\r\n/// <reference path=\"../../services/user-settings.ts\" />\r\n/// <reference path=\"../../ops/definitions-summary.ts\" />\r\n/// <reference path=\"../../ops/definitions-details.ts\" />\r\n\r\nmodule snm.maps.services {\r\n    export interface IconService {\r\n        getSiteSummaryStyle(site: snm.ops.SiteArcheoSummary): ol.style.Style;\r\n        getSiteDetailsStyle(site: snm.ops.details.SiteArcheo): ol.style.Style;\r\n        getOperationDetailsStyle(operation: snm.ops.details.OperationArcheo): ol.style.Style;\r\n    }\r\n\r\n    interface AnchorInfo {\r\n        /**\r\n         * Anchor. Default value is [0.5, 0.5] (icon center).\r\n         */\r\n        anchor: number[];\r\n\r\n        /**\r\n         * Origin of the anchor: bottom-left, bottom-right, top-left or top-right. Default is top-left.\r\n         */\r\n        anchorOrigin?: ol.style.Icon.Origin;\r\n\r\n        /**\r\n         * Units in which the anchor x value is specified. A value of 'fraction' indicates the x value is a fraction of\r\n         * the icon. A value of 'pixels' indicates the x value in pixels. Default is 'fraction'.\r\n         */\r\n        anchorXUnits?: ol.style.Icon.AnchorUnits;\r\n\r\n        /**\r\n         * Units in which the anchor y value is specified. A value of 'fraction' indicates the y value is a fraction of\r\n         * the icon. A value of 'pixels' indicates the y value in pixels. Default is 'fraction'.\r\n         */\r\n        anchorYUnits?: ol.style.Icon.AnchorUnits;\r\n    }\r\n\r\n    class Service implements IconService {\r\n        public getSiteSummaryStyle(site: snm.ops.SiteArcheoSummary): ol.style.Style {\r\n            if (!site) {\r\n                throw new Error(\"Site cannot be null.\");\r\n            }\r\n\r\n            let canvas: HTMLCanvasElement = this._getSiteSummaryCanvas(site);\r\n\r\n            return this._getStyle(canvas);\r\n        }\r\n\r\n        getSiteDetailsStyle(site: snm.ops.details.SiteArcheo): ol.style.Style {\r\n            if (!site) {\r\n                throw new Error(\"Site cannot be null.\");\r\n            }\r\n\r\n            let canvas: HTMLCanvasElement = this._getSiteSummaryCanvas(site);\r\n\r\n            return this._getStyle(canvas);\r\n        }\r\n\r\n        getOperationDetailsStyle(operation: snm.ops.details.OperationArcheo): ol.style.Style {\r\n            if (!operation) {\r\n                throw new Error(\"Operation cannot be null.\");\r\n            }\r\n\r\n            let canvas: HTMLCanvasElement;\r\n\r\n            return this._getStyle(canvas);\r\n        }\r\n\r\n        private _getStyle(canvas: HTMLCanvasElement, anchorInfo?: AnchorInfo): ol.style.Style {\r\n            if (!canvas) {\r\n                throw new Error(\"Canvas cannot be null.\");\r\n            }\r\n\r\n            let options: olx.style.IconOptions = {\r\n                img: canvas,\r\n                imgSize: [canvas.width, canvas.height]\r\n            };\r\n\r\n            if (anchorInfo) {\r\n                options.anchor = anchorInfo.anchor;\r\n\r\n                if (anchorInfo.anchorOrigin) {\r\n                    options.anchorOrigin = anchorInfo.anchorOrigin;\r\n                }\r\n\r\n                if (anchorInfo.anchorXUnits) {\r\n                    options.anchorXUnits = anchorInfo.anchorXUnits;\r\n                }\r\n\r\n                if (anchorInfo.anchorYUnits) {\r\n                    options.anchorYUnits = anchorInfo.anchorYUnits;\r\n                }\r\n            }\r\n\r\n            let style: ol.style.Style = new ol.style.Style({\r\n                image: new ol.style.Icon(options)\r\n            });\r\n\r\n            return style;\r\n        }\r\n\r\n        private _getSiteSummaryCanvas(site: snm.ops.SiteArcheoSummary|snm.ops.details.SiteArcheo) {\r\n            let content: string = site.identifications[0].reference;\r\n\r\n            let width: number = this._getWidth(content);\r\n            let height: number = 20;\r\n            let background: string = \"#000\";\r\n            let foreground: string = \"#fff\";\r\n            let font: string = \"Verdana 12px\";\r\n\r\n            let canvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n\r\n            let ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\");\r\n            ctx.fillStyle = background;\r\n            ctx.strokeStyle = foreground;\r\n            ctx.lineWidth = 2;\r\n\r\n            ctx.rect(0.5, 0.5, width - 2, height - 2);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n\r\n            ctx.font = font;\r\n            ctx.fillStyle = foreground;\r\n            ctx.textAlign = \"center\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.fillText(content, ~~(width / 2), ~~(height / 2));\r\n\r\n            return canvas;\r\n        }\r\n\r\n        private _getWidth(content: string): number {\r\n            let width: number;\r\n\r\n            switch (content.length) {\r\n                case 1:\r\n                    width = 18;\r\n                    break;\r\n                case 2:\r\n                    width = 22;\r\n                    break;\r\n                case 3:\r\n                    width = 27;\r\n                    break;\r\n                default:\r\n                    width = 32;\r\n            }\r\n\r\n            return width;\r\n        }\r\n    }\r\n\r\n    angular.module(\"snm.maps.services.iconService\", [])\r\n        .factory(\"iconService\", () => new Service());\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"./components/map-toolbar/map-toolbar.component.ts\" />\r\n/// <reference path=\"./services/icon-service.ts\" />\r\n\r\nmodule snm.maps {\r\n\tangular.module(snm.AppConstants.MAPS_MODULE_NAME, [\r\n\t\t\"snm.maps.components.map-toolbar\",\r\n\t\t\"snm.maps.services.iconService\"\r\n\t]);\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n\r\nmodule snm.pages {\r\n    // controller\r\n    class Controller {\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.pages.layoutPage\", [\r\n        \"ngRoute\",\r\n        \"snm.components.navMenu\"]).component(\"layoutPage\", {\r\n        templateUrl: '/app/pages/layout/layout.page.html',\r\n        controller: Controller,\r\n        controllerAs: \"vm\"\r\n    });\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n\r\nmodule snm.pages {\r\n\t// controller\r\n\tclass Controller {\r\n\t\tconstructor() {\r\n\t\t}\r\n\t}\r\n\r\n\t// component\r\n\tangular.module(\"snm.pages.mainPage\", [\r\n\t\t\"ngRoute\"]).component(\"mainPage\", {\r\n\t\ttemplateUrl: '/app/pages/main/main.page.html',\r\n\t\tcontroller: Controller,\r\n\t\tcontrollerAs: \"vm\"\r\n\t});\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../ops/definitions-summary.ts\" />\r\n/// <reference path=\"../../maps/components/map/map.ts\" />\r\n/// <reference path=\"../../maps/components/map-toolbar/map-toolbar.component.ts\" />\r\n/// <reference path=\"../../maps/services/icon-service.ts\" />\r\n\r\nmodule snm.pages {\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$log\", \"$http\", \"$location\", \"userSettings\", \"iconService\"];\r\n\r\n        public communes: snm.ops.CommuneSummary[];\r\n\r\n        private _map: snm.maps.components.Map;\r\n\r\n        public get map(): snm.maps.components.Map {\r\n            return this._map;\r\n        }\r\n\r\n        private _siteSource: ol.source.Vector;\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $log: ng.ILogService,\r\n                    private $http: ng.IHttpService,\r\n                    private $location: ng.ILocationService,\r\n                    private userSettings: snm.services.settings.UserSettings,\r\n                    private iconService: snm.maps.services.IconService) {\r\n            this._getSitesData();\r\n        }\r\n\r\n        public $postLink(): void {\r\n            setTimeout(() => this._setupMap());\r\n        }\r\n\r\n        public flyToHome(): void {\r\n            let home: ol.Coordinate = this._map.convertToProj(this.userSettings.homeLocation);\r\n            this._map.flyTo(home, () => {\r\n                this.$scope.$apply();\r\n            });\r\n        }\r\n\r\n        public onSelectSite(siteId: number): void {\r\n            this.$location.path(\"/sites/\" + siteId);\r\n        }\r\n\r\n        public onCenterOnSite(x: number, y: number): void {\r\n            if (!this._map) {\r\n                return;\r\n            }\r\n\r\n            let coordinates: ol.Coordinate = this._map.convertToProj([x, y]);\r\n            this._map.flyTo(coordinates);\r\n        }\r\n\r\n        private _setupMap(): void {\r\n            this._map = new snm.maps.components.Map(\"map\", this.userSettings);\r\n\r\n            this._siteSource = new ol.source.Vector();\r\n            let siteLayer: ol.layer.Vector = new ol.layer.Vector({\r\n                renderOrder: null,\r\n                source: this._siteSource\r\n            });\r\n\r\n            this._map.addLayer(siteLayer);\r\n\r\n            //Try to display sites, if they're already present\r\n            this._displaySitesOnMap();\r\n        }\r\n\r\n        private _getSitesData(): void {\r\n            this.$http.get<snm.ops.SiteArcheoSummary[]>(\"api/ops/sites/summary\")\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.ops.SiteArcheoSummary[]>) => {\r\n                    let map: Map<number, snm.ops.CommuneSummary> = new Map<number, snm.ops.CommuneSummary>();\r\n                    let commune: snm.ops.CommuneSummary;\r\n\r\n                    //Clear site source if it exists\r\n                    if (this._siteSource) {\r\n                        this._siteSource.clear();\r\n                    }\r\n\r\n                    result.data.forEach((site: snm.ops.SiteArcheoSummary) => {\r\n                        //Try to add site to map\r\n                        this._addSiteToMap(site);\r\n\r\n                        //Check if CodeCommune is known\r\n                        commune = map.get(site.codeCommune);\r\n\r\n                        if (!commune) {\r\n                            //Create a new Commune\r\n                            commune = {\r\n                                code: site.codeCommune,\r\n                                nom: site.commune ? site.commune : \"Commune non renseignée\",\r\n                                departement: site.departement,\r\n                                sites: []\r\n                            };\r\n\r\n                            //Add it to the map\r\n                            map.set(commune.code, commune);\r\n                        }\r\n\r\n                        //Add Site to commune\r\n                        site.identifications.forEach((id: snm.ops.IdentificationSite) => {\r\n                            if (id.referentielId === this.userSettings.opsReferentialId) {\r\n                                site.reference = id.reference;\r\n                            }\r\n                        });\r\n                        commune.sites.push(site);\r\n                    });\r\n\r\n                    this.communes = [];\r\n                    map.forEach((c: snm.ops.CommuneSummary) => {\r\n                        this.communes.push(c);\r\n                    });\r\n                });\r\n        }\r\n\r\n        private _addSiteToMap(site: snm.ops.SiteArcheoSummary): void {\r\n            if (!this._map) {\r\n                return;\r\n            }\r\n\r\n            if (!this._siteSource || !site) {\r\n                return;\r\n            }\r\n\r\n            if (typeof site.x !== \"number\" || typeof site.y !== \"number\") {\r\n                //Cannot display site without coordinates\r\n                return;\r\n            }\r\n\r\n            let coordinates: ol.Coordinate = [site.x, site.y];\r\n            coordinates = this._map.convertToProj(coordinates);\r\n\r\n            let siteFeature: ol.Feature = new ol.Feature({\r\n                geometry: new ol.geom.Point(coordinates)\r\n            });\r\n            siteFeature.setStyle(this.iconService.getSiteSummaryStyle(site));\r\n\r\n            this._siteSource.addFeature(siteFeature);\r\n        }\r\n\r\n        private _displaySitesOnMap() {\r\n            if (!this._map || !this.communes) {\r\n                return;\r\n            }\r\n\r\n            this.communes.forEach((c: snm.ops.CommuneSummary) => {\r\n                if (c.sites) {\r\n                    c.sites.forEach((s: snm.ops.SiteArcheoSummary) => {\r\n                        //Try to add site to map\r\n                        this._addSiteToMap(s);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.pages.sitesPage\", [\r\n        \"ngRoute\",\r\n        \"snm.maps.components.map-toolbar\",\r\n        \"snm.maps.services.iconService\",\r\n        \"snm.ops.components.siteArcheoList\"]).component(\"sitesPage\", {\r\n        templateUrl: '/app/pages/sites/sites.page.html',\r\n        controller: Controller,\r\n        controllerAs: \"vm\"\r\n    });\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../../../common/event-block.ts\" />\r\n/// <reference path=\"../../definitions-details.ts\" />\r\n\r\nmodule snm.ops.components {\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$log\", \"userSettings\"];\r\n\r\n        public site: snm.ops.details.SiteArcheo;\r\n\r\n        public get localisation(): string {\r\n            if (!this.site || !this.site.commune) {\r\n                return \"Non renseigné\";\r\n            } else {\r\n                return `${this.site.commune}\r\n                        ${typeof this.site.departement === \"number\" ? \" (\" + this.site.departement + \")\" : \"\"}`;\r\n            }\r\n        }\r\n\r\n        public get coordinates(): string {\r\n            if (!this.site || typeof this.site.x !== \"number\" || typeof this.site.y !== \"number\") {\r\n                return \"Non renseigné\";\r\n            } else {\r\n                return `X: ${this.site.x.toLocaleString(\"fr-FR\", {minimumFractionDigits: 0})} \r\n                        Y: ${this.site.y.toLocaleString(\"fr-FR\", {minimumFractionDigits: 0})}`;\r\n            }\r\n        }\r\n\r\n        public allowEdition: boolean;\r\n        public eventBlock: adnw.common.EventBlock;\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $log: ng.ILogService,\r\n                    private userSettings: snm.services.settings.UserSettings) {\r\n        }\r\n\r\n        public pickLocation(): void {\r\n            this.eventBlock.dispatch(\"pickLocation\");\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.ops.components.siteLocalisation\", [\"ngRoute\"])\r\n        .component(\"siteLocalisation\", {\r\n            templateUrl: '/app/ops/components/site-localisation/site-localisation.component.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\",\r\n            bindings: {\r\n                site: \"<\",\r\n                allowEdition: \"=\",\r\n                eventBlock: \"<\"\r\n            }\r\n        });\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular-material/angular-material.d.ts\" />\r\n/// <reference path=\"../../../common/event-block.ts\" />\r\n/// <reference path=\"../../definitions-details.ts\" />\r\n/// <reference path=\"../../../services/user-settings.ts\" />\r\n/// <reference path=\"../../../maps/services/icon-service.ts\" />\r\n\r\nmodule snm.ops.components {\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$log\", \"$mdToast\", \"userSettings\", \"iconService\"];\r\n\r\n        private _site: snm.ops.details.SiteArcheo;\r\n\r\n        public get site(): snm.ops.details.SiteArcheo {\r\n            return this._site;\r\n        }\r\n\r\n        public set site(value: snm.ops.details.SiteArcheo) {\r\n            this._site = value;\r\n\r\n            this._addSiteToMap();\r\n            this._centerOnSite();\r\n        }\r\n\r\n        public eventBlock: adnw.common.EventBlock;\r\n        public onPick: (coordinates: any) => void;\r\n\r\n        private _map: snm.maps.components.Map;\r\n\r\n        public get map(): snm.maps.components.Map {\r\n            return this._map;\r\n        }\r\n\r\n        private _siteSource: ol.source.Vector;\r\n        private _siteFeature: ol.Feature;\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $log: ng.ILogService,\r\n                    private $mdToast: angular.material.MDToastService,\r\n                    private userSettings: snm.services.settings.UserSettings,\r\n                    private iconService: snm.maps.services.IconService) {\r\n        }\r\n\r\n        public $onInit(): void {\r\n            this.eventBlock.on(\"center\", this._onCenter.bind(this));\r\n            this.eventBlock.on(\"pickLocation\", this._onPickLocation.bind(this));\r\n            this.eventBlock.on(\"refreshLocation\", this._onRefreshLocation.bind(this));\r\n        }\r\n\r\n        public $postLink(): void {\r\n            setTimeout(() => {\r\n                this._setupMap();\r\n\r\n                if (this._site) {\r\n                    this._addSiteToMap();\r\n                    this._centerOnSite();\r\n                }\r\n            });\r\n        }\r\n\r\n        public centerOnSite(): void {\r\n            if (!this._map || !this._site) {\r\n                return;\r\n            }\r\n\r\n            if (typeof this._site.x !== \"number\" || typeof this._site.y !== \"number\") {\r\n                //Site has no location defined\r\n                return;\r\n            }\r\n\r\n            this._map.flyTo(this._map.convertToProj([this._site.x, this._site.y]));\r\n        }\r\n\r\n        private _setupMap(): void {\r\n            this._map = new snm.maps.components.Map(\"map\", this.userSettings);\r\n\r\n            this._siteSource = new ol.source.Vector();\r\n            let siteLayer: ol.layer.Vector = new ol.layer.Vector({\r\n                renderOrder: null,\r\n                source: this._siteSource\r\n            });\r\n\r\n            this._map.addLayer(siteLayer);\r\n\r\n            this._addSiteToMap();\r\n            this._centerOnSite();\r\n        }\r\n\r\n        private _addSiteToMap(): void {\r\n            if (!this._map) {\r\n                return;\r\n            }\r\n\r\n            if (!this._siteSource || !this._site) {\r\n                return;\r\n            }\r\n\r\n            let coordinates: ol.Coordinate = [this._site.x, this._site.y];\r\n            coordinates = this._map.convertToProj(coordinates);\r\n\r\n            if (!this._siteFeature) {\r\n                this._siteFeature = new ol.Feature({\r\n                    geometry: new ol.geom.Point(coordinates)\r\n                });\r\n                this._siteFeature.setStyle(this.iconService.getSiteDetailsStyle(this._site));\r\n\r\n                this._siteSource.addFeature(this._siteFeature);\r\n            } else {\r\n                this._siteFeature.setGeometry(new ol.geom.Point(coordinates));\r\n            }\r\n        }\r\n\r\n        private _centerOnSite(): void {\r\n            if (!this._map) {\r\n                return;\r\n            }\r\n\r\n            if (this._site && typeof this._site.x === \"number\" && typeof this._site.y === \"number\") {\r\n                this._map.center = this._map.convertToProj([this._site.x, this._site.y]);\r\n            }\r\n        }\r\n\r\n        private _onCenter(oldValue?: ol.Coordinate, newValue?: ol.Coordinate): void {\r\n            if (!this._map) {\r\n                return;\r\n            }\r\n\r\n            if (newValue) {\r\n                this._map.flyTo(this._map.convertToProj(newValue));\r\n            }\r\n        }\r\n\r\n        private _onPickLocation(oldValue?: any, newValue?: any): void {\r\n            if (!this._map) {\r\n                return;\r\n            }\r\n\r\n            //Show toast\r\n            this.$mdToast.show({\r\n                hideDelay: 0,\r\n                position: \"top right\",\r\n                template: \"<md-toast><div class='md-toast-content'>Cliquer pour désigner l'emplacement</div></md-toast>\",\r\n                parent: \"#map\"\r\n            });\r\n\r\n            //Create a dispose function to remove the toast\r\n            let dispose: () => void = () => {\r\n                this.$mdToast.hide();\r\n            };\r\n\r\n            //Start interaction\r\n            this._map.pickLocation().then((value: ol.Coordinate) => {\r\n                let coordinates: ol.Coordinate = this._map.convertFromProj(value);\r\n                this.onPick({coordinates: coordinates});\r\n                dispose();\r\n            }, (reason: any) => {\r\n                this.$log.debug(reason);\r\n                dispose();\r\n            });\r\n        }\r\n\r\n        private _onRefreshLocation(oldValue?: any, newValue?: any): void {\r\n            this._addSiteToMap();\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.ops.components.siteOpsMap\", [\r\n            \"ngRoute\",\r\n            \"ngMaterial\"])\r\n        .component(\"siteOpsMap\", {\r\n            templateUrl: '/app/ops/components/site-ops-map/site-ops-map.component.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\",\r\n            bindings: {\r\n                site: \"<\",\r\n                eventBlock: \"<\",\r\n                onPick: \"&\"\r\n            }\r\n        });\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../definitions.ts\" />\r\n\r\nmodule snm.pers.components {\r\n    class PersonneController {\r\n        static $inject: string[] = [\"$scope\"];\r\n\r\n        public personne: snm.pers.PersonneSummary;\r\n\r\n        constructor(private $scope: ng.IScope) {\r\n\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.pers.components.personne\", [\r\n    ]).component(\"personne\", {\r\n        templateUrl: '/app/pers/components/personne/personne.component.html',\r\n        controller: PersonneController,\r\n        controllerAs: \"vm\",\r\n        bindings: {\r\n            personne: \"<\"\r\n        }\r\n    });\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../../../common/event-block.ts\" />\r\n/// <reference path=\"../../definitions-summary.ts\" />\r\n/// <reference path=\"../../../pers/components/personne/personne.component.ts\" />\r\n\r\nmodule snm.ops.components {\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$http\", \"$log\", \"userSettings\"];\r\n\r\n        public siteId: number;\r\n        public operations: snm.ops.OperationArcheoSummary[];\r\n\r\n        public allowEdition: boolean;\r\n        public eventBlock: adnw.common.EventBlock;\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $http: ng.IHttpService,\r\n                    private $log: ng.ILogService,\r\n                    private userSettings: snm.services.settings.UserSettings) {\r\n        }\r\n\r\n        public $onInit(): void {\r\n            //Get operation list\r\n            this.$http.get<snm.ops.OperationArcheoSummary[]>(\"api/ops/operations/site/\" + this.siteId)\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.ops.OperationArcheoSummary[]>) => {\r\n                    this.operations = result.data;\r\n                });\r\n        }\r\n\r\n        public goToOperation(id: number): void {\r\n\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.ops.components.siteOperations\", [\r\n        \"ngRoute\",\r\n        \"snm.pers.components.personne\"\r\n        ])\r\n        .component(\"siteOperations\", {\r\n            templateUrl: '/app/ops/components/site-operations/site-operations.component.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\",\r\n            bindings: {\r\n                siteId: \"<\",\r\n                allowEdition: \"=\",\r\n                eventBlock: \"<\"\r\n            }\r\n        });\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../../../../typings/angular-material/angular-material.d.ts\" />\r\n/// <reference path=\"../../definitions-summary.ts\" />\r\n/// <reference path=\"../../../services/user-settings.ts\" />\r\n\r\nmodule snm.sarcos.components {\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$log\", \"$http\", \"$mdToast\", \"userSettings\"];\r\n\r\n        public siteId: number;\r\n\r\n        private _illustrations: snm.sarcos.IllustrationPanneauSummary[];\r\n\r\n        public get illustrations(): snm.sarcos.IllustrationPanneauSummary[] {\r\n            return this._illustrations;\r\n        }\r\n\r\n        public set illustrations(value: snm.sarcos.IllustrationPanneauSummary[]) {\r\n            this._illustrations = value;\r\n        }\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $log: ng.ILogService,\r\n                    private $http: ng.IHttpService,\r\n                    private $mdToast: angular.material.MDToastService,\r\n                    private userSettings: snm.services.settings.UserSettings) {\r\n        }\r\n\r\n        public $onInit(): void {\r\n            this._getSitesData(this.siteId);\r\n        };\r\n\r\n        private _getSitesData(siteId: number): void {\r\n            this.$http.get<snm.sarcos.IllustrationPanneauSummary[]>(\"api/sarcos/\" + siteId + \"/panneaux/illus/summary\")\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.sarcos.IllustrationPanneauSummary[]>) => {\r\n\r\n                    result.data.forEach((ips: snm.sarcos.IllustrationPanneauSummary) => {\r\n                        if (ips.chemin) {\r\n                            ips.label = ips.chemin;\r\n                            ips.chemin = this.userSettings.illustrationStorageRootUrl +\r\n                                \"/sarcos/\" + siteId + \"/\" + ips.chemin;\r\n                        }\r\n                    });\r\n\r\n                    this.illustrations = result.data;\r\n                });\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.sarcos.components.panneauxSiteList\", [\r\n            \"ngRoute\",\r\n            \"ngMaterial\"])\r\n        .component(\"panneauxSiteList\", {\r\n            templateUrl: '/app/sarcos/components/panneaux-site-list/panneaux-site-list.component.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\",\r\n            bindings: {\r\n                siteId: \"<\"\r\n            }\r\n        });\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../../common/event-block.ts\" />\r\n/// <reference path=\"../../ops/definitions-details.ts\" />\r\n/// <reference path=\"../../ops/components/site-localisation/site-localisation.component.ts\" />\r\n/// <reference path=\"../../ops/components/site-ops-map/site-ops-map.component.ts\" />\r\n/// <reference path=\"../../ops/components/site-operations/site-operations.component.ts\" />\r\n/// <reference path=\"../../sarcos/components/panneaux-site-list/panneaux-site-list.component.ts\" />\r\n\r\nmodule snm.pages {\r\n    interface IRouteParams extends ng.route.IRouteParamsService {\r\n        siteId: number;\r\n    }\r\n\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$log\", \"$http\", \"$location\", \"userSettings\", \"$routeParams\"];\r\n\r\n        public siteId: number;\r\n        public site: snm.ops.details.SiteArcheo;\r\n\r\n        private _eventBlock: adnw.common.EventBlock;\r\n\r\n        public get eventBlock(): adnw.common.EventBlock {\r\n            return this._eventBlock;\r\n        }\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private $log: ng.ILogService,\r\n                    private $http: ng.IHttpService,\r\n                    private $location: ng.ILocationService,\r\n                    private userSettings: snm.services.settings.UserSettings,\r\n                    private $routeParams: IRouteParams) {\r\n        }\r\n\r\n        public $onInit(): void {\r\n            this.siteId = this.$routeParams.siteId;\r\n\r\n            this.$http.get<snm.ops.details.SiteArcheo>(\"api/ops/sites/\" + this.siteId)\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.ops.details.SiteArcheo>) => {\r\n                    this.site = result.data;\r\n                });\r\n\r\n            this._eventBlock = new adnw.common.EventBlock();\r\n        }\r\n\r\n        public edit(): void {\r\n            this.$location.path(\"/sites/edit/\" + this.site.id);\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.pages.siteDetailsPage\", [\r\n            \"ngRoute\",\r\n            \"snm.ops.components.siteLocalisation\",\r\n            \"snm.ops.components.siteOpsMap\"\r\n        ])\r\n        .component(\"siteDetailsPage\", {\r\n            templateUrl: '/app/pages/site-details/site-details.page.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\"\r\n        });\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../typings/angular-material/angular-material.d.ts\" />\r\n\r\nmodule snm.services {\r\n    export interface ToastService {\r\n        showSimpleMsg(elementId: string, msg: string, hideDelay?: number): void;\r\n        showSuccessfulSaveMsg(elementId: string, msg: string, hideDelay?: number): void;\r\n        showErrorSaveMsg(elementId: string, msg: string, hideDelay?: number): void;\r\n        hide(): void;\r\n    }\r\n\r\n    class Service implements ToastService {\r\n        static $inject: string[] = [\"$mdToast\"];\r\n        constructor(private $mdToast: angular.material.MDToastService) {\r\n        }\r\n\r\n        public showSimpleMsg(elementId: string, msg: string, hideDelay?: number): void {\r\n            let options: angular.material.MDToastOptions = {\r\n                position: \"bottom right\",\r\n                template: \"<md-toast><div class='md-toast-content'><span>\" + msg + \"</span></div></md-toast>\",\r\n                parent: elementId\r\n            };\r\n\r\n            if (typeof hideDelay === \"number\") {\r\n                options.hideDelay = hideDelay;\r\n            }\r\n\r\n            this.$mdToast.show(options);\r\n        }\r\n\r\n        public showSuccessfulSaveMsg(elementId: string, msg: string, hideDelay?: number): void {\r\n            let options: angular.material.MDToastOptions = {\r\n                position: \"bottom right\",\r\n                template: \"<md-toast><div class='md-toast-content'><md-icon md-svg-src='assets/img/ic_done_24px.svg' class='s24 md-primary toast-icon' aria-label='Done'></md-icon><span>\" + msg + \"</span></div></md-toast>\",\r\n                parent: elementId\r\n            };\r\n\r\n            if (typeof hideDelay === \"number\") {\r\n                options.hideDelay = hideDelay;\r\n            }\r\n\r\n            this.$mdToast.show(options);\r\n        }\r\n\r\n        public showErrorSaveMsg(elementId: string, msg: string, hideDelay?: number): void {\r\n            let options: angular.material.MDToastOptions = {\r\n                position: \"bottom right\",\r\n                template: \"<md-toast><div class='md-toast-content'><md-icon md-svg-src='assets/img/ic_report_problem_24px.svg' class='s24 md-warn toast-icon' aria-label='Error'></md-icon><span>\" + msg + \"</span></div></md-toast>\",\r\n                parent: elementId\r\n            };\r\n\r\n            if (typeof hideDelay === \"number\") {\r\n                options.hideDelay = hideDelay;\r\n            }\r\n\r\n            this.$mdToast.show(options);\r\n        }\r\n\r\n        public hide(): void {\r\n            this.$mdToast.hide();\r\n        }\r\n    }\r\n\r\n    angular.module(\"snm.services.toastService\", [])\r\n        .factory(\"toastService\", [\"$mdToast\", ($mdToast: angular.material.MDToastService) => new Service($mdToast)]);\r\n}\r\n","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../../../typings/angular-material/angular-material.d.ts\" />\r\n/// <reference path=\"../../common/event-block.ts\" />\r\n/// <reference path=\"../../services/toast-service.ts\" />\r\n/// <reference path=\"../../ops/definitions-details.ts\" />\r\n/// <reference path=\"../../ops/components/site-localisation/site-localisation.component.ts\" />\r\n/// <reference path=\"../../ops/components/site-ops-map/site-ops-map.component.ts\" />\r\n\r\nmodule snm.pages {\r\n    import IRoute = angular.route.IRoute;\r\n    import IAngularEvent = angular.IAngularEvent;\r\n    interface IRouteParams extends ng.route.IRouteParamsService {\r\n        siteId: number;\r\n    }\r\n\r\n    interface IScope extends ng.IScope {\r\n        siteForm: HTMLFormElement\r\n    }\r\n\r\n    // controller\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\", \"$log\", \"$http\", \"$location\", \"$routeParams\", \"$mdDialog\",\r\n            \"userSettings\", \"toastService\"];\r\n\r\n        public site: snm.ops.details.SiteArcheo;\r\n\r\n        private _eventBlock: adnw.common.EventBlock;\r\n\r\n        public get eventBlock(): adnw.common.EventBlock {\r\n            return this._eventBlock;\r\n        }\r\n\r\n        private _toastTarget: string = \"#content\";\r\n        private _originalSite: snm.ops.details.SiteArcheo;\r\n        private _routeChangeHandle: () => void;\r\n\r\n        constructor(private $scope: IScope,\r\n                    private $log: ng.ILogService,\r\n                    private $http: ng.IHttpService,\r\n                    private $location: ng.ILocationService,\r\n                    private $routeParams: IRouteParams,\r\n                    private $mdDialog: angular.material.MDDialogService,\r\n                    private userSettings: snm.services.settings.UserSettings,\r\n                    private toastService: snm.services.ToastService) {\r\n            let id: number = $routeParams.siteId;\r\n\r\n            this._routeChangeHandle = $scope.$on(\"$locationChangeStart\", (event: IAngularEvent,\r\n                                                                          newUrl: string, oldUrl: string) => {\r\n                this._onRouteChange(event, newUrl, oldUrl);\r\n            });\r\n\r\n            $http.get<snm.ops.details.SiteArcheo>(\"api/ops/sites/\" + id)\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.ops.details.SiteArcheo>) => {\r\n                    this._processSite(result.data);\r\n                });\r\n\r\n            this._eventBlock = new adnw.common.EventBlock();\r\n        }\r\n\r\n        public save(): void {\r\n            this.toastService.showSimpleMsg(this._toastTarget, \"Sauvegarde en cours...\", 0);\r\n\r\n            this.$http.post<snm.ops.details.SiteArcheo>(\"api/ops/sites/\" + this.site.id, this.site)\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.ops.details.SiteArcheoData>) => {\r\n                    if ((<any> result.data).messages) {\r\n                        //Error message\r\n                        this.toastService.showErrorSaveMsg(this._toastTarget, (<any> result.data).messages);\r\n                    } else {\r\n                        this.toastService.showSuccessfulSaveMsg(this._toastTarget, \"Données enregistrées\");\r\n\r\n                        this._processSite(result.data);\r\n                    }\r\n                }, (reason: any) => {\r\n                    this.toastService.showErrorSaveMsg(this._toastTarget, reason);\r\n                });\r\n        }\r\n\r\n        public cancel(): void {\r\n            let id: number = this.site.id;\r\n            this.site = null;\r\n            this.$location.path(\"/sites/\" + id);\r\n        }\r\n\r\n        public onPickLocation(coordinates: ol.Coordinate): void {\r\n            let x: number = ~~coordinates[0];\r\n            let y: number = ~~coordinates[1];\r\n\r\n            //Get commune containing the coordinates\r\n            this.$http.get<snm.ops.details.Commune>(\"api/ops/common/commune/coords?x=\" + x + \"&y=\" + y)\r\n                .then((result: ng.IHttpPromiseCallbackArg<snm.ops.details.Commune>) => {\r\n                    let commune: snm.ops.details.Commune = result.data;\r\n                    this.site.x = x;\r\n                    this.site.y = y;\r\n                    this._refreshSiteLocation();\r\n\r\n                    if (commune) {\r\n                        this.site.codeCommune = commune.code;\r\n                        this.site.commune = commune.nom;\r\n                        this.site.departement = commune.departement;\r\n                    }\r\n                });\r\n        }\r\n\r\n        private _onRouteChange(event: IAngularEvent, newUrl: string, oldUrl: string): void {\r\n            if (!this.site) return;\r\n            let isDirty: boolean = !this.site.isEquivalent(this._originalSite);\r\n\r\n            //Navigate to newUrl if the form isn't dirty\r\n            if (!isDirty) return;\r\n\r\n            this._showConfirm().then(() => {\r\n                //Stop listening for location changes\r\n                this._routeChangeHandle();\r\n\r\n                //Go to the requested page\r\n                this.$location.path(newUrl);\r\n            }, () => {\r\n            });\r\n\r\n            //Prevent navigation by default since we'll handle it once the user selects a dialog option\r\n            event.preventDefault();\r\n        }\r\n\r\n        private _processSite(data: snm.ops.details.SiteArcheoData): void {\r\n            this.site = new snm.ops.details.SiteArcheo();\r\n            this.site.updateFrom(data);\r\n            this._originalSite = this.site.clone();\r\n\r\n            this._refreshSiteLocation();\r\n        }\r\n\r\n        private _refreshSiteLocation(): void {\r\n            this._eventBlock.dispatch(\"refreshLocation\", null, null);\r\n        }\r\n\r\n        private _showConfirm(): angular.IPromise<any> {\r\n            let confirm: angular.material.MDConfirmDialog = this.$mdDialog.confirm()\r\n                .title(\"Vous avez des données non sauvegardées.\")\r\n                .textContent(\"Si vous quittez la page, vous perdrez toutes vos modifications.\")\r\n                .ok(\"Quitter\")\r\n                .cancel(\"Rester\");\r\n\r\n            return this.$mdDialog.show(confirm)\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.pages.siteEditPage\", [\r\n            \"ngRoute\",\r\n            \"snm.services.toastService\",\r\n            \"snm.ops.components.siteLocalisation\",\r\n            \"snm.ops.components.siteOpsMap\"\r\n        ])\r\n        .component(\"siteEditPage\", {\r\n            templateUrl: '/app/pages/site-edit/site-edit.page.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\"\r\n        });\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"layout/layout.page.ts\" />\r\n/// <reference path=\"main/main.page.ts\" />\r\n/// <reference path=\"sites/sites.page.ts\" />\r\n/// <reference path=\"site-details/site-details.page.ts\" />\r\n/// <reference path=\"site-edit/site-edit.page.ts\" />\r\n\r\nmodule snm.pages {\r\n\tangular.module(snm.AppConstants.PAGES_MODULE_NAME, [\r\n\t\t\"snm.pages.layoutPage\",\r\n\t\t\"snm.pages.mainPage\",\r\n\t\t\"snm.pages.sitesPage\",\r\n\t\t\"snm.pages.siteDetailsPage\",\r\n\t\t\"snm.pages.siteEditPage\"\r\n\t]);\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"./user-settings.ts\" />\r\n/// <reference path=\"./toast-service.ts\" />\r\n\r\nmodule snm.services {\r\n\tangular.module(snm.AppConstants.SERVICES_MODULE_NAME, [\r\n\t\t\"snm.services.dal.dbContext\",\r\n\t\t\"snm.services.settings\",\r\n\t\t\"snm.services.toastService\"\r\n\t]);\r\n}","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../definitions-summary.ts\" />\r\n\r\nmodule snm.ops.components {\r\n    class Controller {\r\n        static $inject: string[] = [\"$scope\"];\r\n\r\n        public communes: snm.ops.CommuneSummary[];\r\n        public onSelect: (siteId: number) => void;\r\n        public onCenter: (x: number, y: number) => void;\r\n\r\n        constructor(private $scope: ng.IScope) {\r\n        }\r\n\r\n        public selectSite(siteId: number): void {\r\n            this.onSelect(siteId);\r\n        }\r\n\r\n        public centerOnSite(x: number, y: number): void {\r\n            this.onCenter(x, y);\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.ops.components.siteArcheoList\", [])\r\n        .component(\"siteArcheoList\", {\r\n            templateUrl: '/app/ops/components/site-archeo-list/site-archeo-list.component.html',\r\n            controller: Controller,\r\n            controllerAs: \"vm\",\r\n            bindings: {\r\n                communes: \"<\",\r\n                onSelect: \"&\",\r\n                onCenter: \"&\"\r\n            }\r\n        });\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n\r\n/// <reference path=\"./components/site-archeo-list/site-archeo-list.component.ts\" />\r\n/// <reference path=\"./components/site-localisation/site-localisation.component.ts\" />\r\n/// <reference path=\"./components/site-ops-map/site-ops-map.component.ts\" />\r\n/// <reference path=\"./components/site-operations/site-operations.component.ts\" />\r\n\r\nmodule snm.ops {\r\n    import DbContext = snm.services.dal.DbContext;\r\n\r\n    angular.module(snm.AppConstants.OPS_MODULE_NAME, [\r\n        \"snm.services.dal.dbContext\",\r\n        \"snm.ops.components.siteArcheoList\",\r\n        \"snm.ops.components.siteLocalisation\",\r\n        \"snm.ops.components.siteOperations\",\r\n    ])\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"./definitions.ts\" />\r\n\r\nmodule snm.services.dal {\r\n    export class EntitySet<TKey, TEntity extends IEntity<TKey>> implements IEntitySet<TKey, TEntity> {\r\n        protected _dbContext: snm.services.dal.DbContext;\r\n        protected $http: ng.IHttpService;\r\n        private _parsingFunc: (dbContext: DbContext, data: any) => TEntity;\r\n        protected _getAllUrl: string;\r\n\r\n        protected _isRunning: boolean = false;\r\n\r\n        public get isRunning(): boolean {\r\n            return this._isRunning;\r\n        }\r\n\r\n        protected _map: Map<TKey, TEntity> = new Map<TKey, TEntity>();\r\n        private _promise: Promise<Object>;\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, options: EntitySetOptions<TEntity, any>) {\r\n            if (!dbContext) {\r\n                throw new Error(\"DbContext cannot be null.\");\r\n            }\r\n\r\n            this._dbContext = dbContext;\r\n\r\n            this._validateOptions(options);\r\n\r\n            this.$http = options.$http;\r\n            this._parsingFunc = options.parseEntity;\r\n            this._getAllUrl = options.getAllUrl;\r\n\r\n            this.refresh();\r\n        }\r\n\r\n        public getAll(): TEntity[] {\r\n            let result: TEntity[] = [];\r\n            this._map.forEach((o: TEntity) => { result.push(o); });\r\n\r\n            return result;\r\n        }\r\n\r\n        public getByKey(key: TKey): TEntity {\r\n            return this._map.get(key);\r\n        }\r\n\r\n        public refresh(): Promise<Object> {\r\n            if (this._promise) {\r\n                //If a Promise is already in flight, return it\r\n                return this._promise;\r\n            }\r\n\r\n            this._isRunning = true;\r\n\r\n            let resolveFunc: (value?: Object|PromiseLike<Object>) => void;\r\n            let rejectFunc: (reason?: any) => void;\r\n\r\n            this._promise = new Promise<Object>((resolve, reject) => {\r\n                resolveFunc = resolve;\r\n                rejectFunc = reject;\r\n            });\r\n\r\n            this.$http.get<any[]>(this._getAllUrl)\r\n                .then((response) => {\r\n                    this._parseArray(response.data);\r\n                    resolveFunc();\r\n                }, (reason?: any) => rejectFunc(reason))\r\n                .finally(() => {\r\n                    this._isRunning = false;\r\n                    this._promise = null;\r\n                });\r\n\r\n            return this._promise;\r\n        }\r\n\r\n        protected _parseArray(array: any[]): void {\r\n            array.map((o: TEntity) => {\r\n                let entity: TEntity = this._parsingFunc(this._dbContext, o);\r\n                this._map.set(entity.getKey(), entity);\r\n            });\r\n        }\r\n\r\n        protected _validateOptions(options: EntitySetOptions<TEntity, any>): void {\r\n            if (!options) {\r\n                throw new Error(\"Options cannot be null.\");\r\n            }\r\n\r\n            if (!options.$http) {\r\n                throw new Error(\"$http cannot be null.\");\r\n            }\r\n\r\n            if (!options.parseEntity) {\r\n                throw new Error(\"ParseEntity cannot be null.\");\r\n            }\r\n\r\n            if (!options.getAllUrl) {\r\n                throw new Error(\"GetAll URL cannot be empty.\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"./definitions.ts\" />\r\n/// <reference path=\"./entity-set.ts\" />\r\n\r\nmodule snm.services.dal {\r\n    export type EntitySetFactory = (dbContext: DbContext, $http: ng.IHttpService) => IEntitySet<any, any>;\r\n\r\n    export class DbContext {\r\n        static $inject: string[] = [\"$http\"];\r\n\r\n        private static _factories: Map<string, EntitySetFactory> = new Map<string, EntitySetFactory>();\r\n        private _repositories: Map<string, IEntitySet<any, any>> = new Map<string, IEntitySet<any, any>>();\r\n\r\n        constructor(private $http: ng.IHttpService) {\r\n        }\r\n\r\n        public getRepository<TKey, TEntity extends IEntity<TKey>>(type: string): IEntitySet<TKey, TEntity> {\r\n            if (!type) {\r\n                throw new Error(\"Type cannot be null.\");\r\n            }\r\n\r\n            if (!DbContext._factories.has(type)) {\r\n                throw new Error(\"Unknown factory '\" + type + \"'\");\r\n            }\r\n\r\n            if (this._repositories.has(type)) {\r\n                //Repository has already been instantiated. Return it.\r\n                return this._repositories.get(type);\r\n            } else {\r\n                //No existing repository. Create a new one.\r\n                let factory: EntitySetFactory = DbContext._factories.get(type);\r\n                let result: IEntitySet<TKey, TEntity> = factory(this, this.$http);\r\n\r\n                //Add new instance to repositories map\r\n                this._repositories.set(type, result);\r\n\r\n                return <IEntitySet<TKey, TEntity>> result;\r\n            }\r\n        }\r\n\r\n        public static addRepository(type: string, factory: EntitySetFactory): void {\r\n            if (!type) {\r\n                throw new Error(\"Type cannot be empty.\");\r\n            }\r\n\r\n            if (!factory) {\r\n                throw new Error(\"Factory cannot be null.\");\r\n            }\r\n\r\n            DbContext._factories.set(type, factory);\r\n        }\r\n    }\r\n\r\n    angular.module(\"snm.services.dal.dbContext\", [])\r\n        .factory(\"dbContext\", [\"$http\", ($http: ng.IHttpService) => new DbContext($http)]);\r\n}\r\n","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"./definitions.ts\" />\r\n/// <reference path=\"./db-context.ts\" />\r\n/// <reference path=\"./entity-set.ts\" />\r\n\r\nmodule snm.services.dal {\r\n    export abstract class EntityBase<TKey> implements IEntity<TKey> {\r\n        protected _dbContext: DbContext;\r\n\r\n        constructor(dbContext: DbContext) {\r\n            if (!dbContext) {\r\n                throw new Error(\"DbContext cannot be null.\");\r\n            }\r\n\r\n            this._dbContext = dbContext;\r\n        }\r\n\r\n        public abstract getKey(): TKey;\r\n    }\r\n}","/// <reference path=\"../../pers/definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.chrono {\r\n    export class PhaseChronologique extends snm.services.dal.EntityBase<number> implements IPhaseChronologique {\r\n\r\n        //region properties\r\n        private _id: number;\r\n\r\n        public get id(): number {\r\n            return this._id;\r\n        }\r\n\r\n        public set id(value: number) {\r\n            this._id = value;\r\n        }\r\n\r\n        private _code: string;\r\n\r\n        public get code(): string {\r\n            return this._code;\r\n        }\r\n\r\n        public set code(value: string) {\r\n            this._code = value;\r\n        }\r\n\r\n        private _nom: string;\r\n\r\n        public get nom(): string {\r\n            return this._nom;\r\n        }\r\n\r\n        public set nom(value: string) {\r\n            this._nom = value;\r\n        }\r\n\r\n        private _debut: number;\r\n\r\n        public get debut(): number {\r\n            return this._debut;\r\n        }\r\n\r\n        public set debut(value: number) {\r\n            this._debut = value;\r\n        }\r\n\r\n        private _fin: number;\r\n\r\n        public get fin(): number {\r\n            return this._fin;\r\n        }\r\n\r\n        public set fin(value: number) {\r\n            this._fin = value;\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: PhaseChronologiqueData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._id = data.id;\r\n                this._code = data.code;\r\n                this._nom = data.nom;\r\n                this._debut = data.debut;\r\n                this._fin = data.fin;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._id;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/phase-chronologique.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.chrono.dal {\r\n    import IPhaseChronologiqueSet = snm.chrono.IPhaseChronologiqueSet;\r\n    export class PhaseChronologiqueSet extends snm.services.dal.EntitySet<number, snm.chrono.IPhaseChronologique>\r\n        implements IPhaseChronologiqueSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.chrono.PhaseChronologiqueData) => {\r\n                    return new PhaseChronologique(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/chrono/phase\"\r\n            });\r\n            this.refresh();\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../../definitions.ts\" />\r\n/// <reference path=\"../../../services/dal/db-context.ts\" />\r\n/// <reference path=\"../../dal/phase-chronologique-set.ts\" />\r\n\r\nmodule snm.chrono.components {\r\n    class PhasesChronologiquesController {\r\n        static $inject: string[] = [\"$scope\", \"dbContext\"];\r\n\r\n        private _phases: IPhaseChronologique[];\r\n\r\n        public get phases(): IPhaseChronologique[] {\r\n            return this._phases;\r\n        }\r\n\r\n        public set phases(value: IPhaseChronologique[]) {\r\n            this._phases = value;\r\n        }\r\n\r\n        private _debut: number;\r\n\r\n        public get debut(): number {\r\n            return this._debut;\r\n        }\r\n\r\n        public set debut(value: number) {\r\n            this._debut = value;\r\n        }\r\n\r\n        private _fin: number;\r\n\r\n        public get fin(): number {\r\n            return this._fin;\r\n        }\r\n\r\n        public set fin(value: number) {\r\n            this._fin = value;\r\n        }\r\n\r\n        constructor(private $scope: ng.IScope,\r\n                    private dbContext: snm.services.dal.DbContext) {\r\n        }\r\n\r\n        public $onInit(): void {\r\n            let repoPhaseChrono: snm.chrono.IPhaseChronologiqueSet =\r\n                <snm.chrono.IPhaseChronologiqueSet> this.dbContext.getRepository(\"PhaseChronologique\");\r\n            repoPhaseChrono.refresh().then(() => {\r\n                this.phases = repoPhaseChrono.getAll();\r\n                this.$scope.$applyAsync();\r\n            });\r\n        }\r\n    }\r\n\r\n    // component\r\n    angular.module(\"snm.chrono.components.phases-chronologiques\", [\r\n    ]).component(\"phasesChrono\", {\r\n        templateUrl: '/app/chrono/components/phases-chronologiques/phases-chronologiques.component.html',\r\n        controller: PhasesChronologiquesController,\r\n        controllerAs: \"vm\",\r\n        bindings: {\r\n            debut: \"<\",\r\n            fin: \"<\"\r\n        }\r\n    });\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"../services/dal/db-context.ts\" />\r\n/// <reference path=\"./dal/phase-chronologique-set.ts\" />\r\n/// <reference path=\"./components/phases-chronologiques/phases-chronologiques.component.ts\" />\r\n\r\nmodule snm.chrono {\r\n    import DbContext = snm.services.dal.DbContext;\r\n\r\n    angular.module(snm.AppConstants.CHRONO_MODULE_NAME, [\r\n        \"snm.services.dal.dbContext\",\r\n        \"snm.chrono.components.phases-chronologiques\"\r\n    ]).run([\"dbContext\", (dbContext: DbContext) => {\r\n        DbContext.addRepository(\"PhaseChronologique\", (dbContext: DbContext, $http: ng.IHttpService) =>\r\n            new snm.chrono.dal.PhaseChronologiqueSet(dbContext, $http));\r\n    }]);\r\n}","/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.pers {\r\n    export class Personne extends snm.services.dal.EntityBase<number> implements IPersonne {\r\n\r\n        //region properties\r\n        private _id: number;\r\n\r\n        public get id(): number {\r\n            return this._id;\r\n        }\r\n\r\n        public set id(value: number) {\r\n            this._id = value;\r\n        }\r\n\r\n        private _prenom: string;\r\n\r\n        public get prenom(): string {\r\n            return this._prenom;\r\n        }\r\n\r\n        public set prenom(value: string) {\r\n            this._prenom = value;\r\n        }\r\n\r\n        private _autresPrenoms: string;\r\n\r\n        public get autresPrenoms(): string {\r\n            return this._autresPrenoms;\r\n        }\r\n\r\n        public set autresPrenoms(value: string) {\r\n            this._autresPrenoms = value;\r\n        }\r\n\r\n        private _nom: string;\r\n\r\n        public get nom(): string {\r\n            return this._nom;\r\n        }\r\n\r\n        public set nom(value: string) {\r\n            this._nom = value;\r\n        }\r\n\r\n        private _suffixe: string;\r\n\r\n        public get suffixe(): string {\r\n            return this._suffixe;\r\n        }\r\n\r\n        public set suffixe(value: string) {\r\n            this._suffixe = value;\r\n        }\r\n\r\n        private _nomComplet: string;\r\n\r\n        public get nomComplet(): string {\r\n            return this._nomComplet;\r\n        }\r\n\r\n        public set nomComplet(value: string) {\r\n            this._nomComplet = value;\r\n        }\r\n\r\n        private _organismeId: number;\r\n\r\n        public get organismeId(): number {\r\n            return this._organismeId;\r\n        }\r\n\r\n        public set organismeId(value: number) {\r\n            this._organismeId = value;\r\n        }\r\n\r\n        public get organisme(): IOrganisme {\r\n            return <IOrganisme> this._dbContext.getRepository(\"Organisme\").getByKey(this._organismeId);\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: PersonneData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._id = data.id;\r\n                this._prenom = data.prenom;\r\n                this._autresPrenoms = data.autresPrenoms;\r\n                this._nom = data.nom;\r\n                this._suffixe = data.suffixe;\r\n                this._nomComplet = data.nomComplet;\r\n                this._organismeId = data.organismeId;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._id;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/personne.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.pers.dal {\r\n    export class PersonneSet extends snm.services.dal.EntitySet<number, snm.pers.IPersonne>\r\n        implements IPersonneSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.pers.PersonneData) => {\r\n                    return new Personne(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/pers/personne\"\r\n            });\r\n            this.refresh();\r\n        }\r\n    }\r\n}","/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.pers {\r\n    export class Organisme extends snm.services.dal.EntityBase<number> implements IOrganisme {\r\n\r\n        //region properties\r\n        private _id: number;\r\n\r\n        public get id(): number {\r\n            return this._id;\r\n        }\r\n\r\n        public set id(value: number) {\r\n            this._id = value;\r\n        }\r\n\r\n        private _nom: string;\r\n\r\n        public get nom(): string {\r\n            return this._nom;\r\n        }\r\n\r\n        public set nom(value: string) {\r\n            this._nom = value;\r\n        }\r\n\r\n        private _abreviation: string;\r\n\r\n        public get abreviation(): string {\r\n            return this._abreviation;\r\n        }\r\n\r\n        public set abreviation(value: string) {\r\n            this._abreviation = value;\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: OrganismeData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._id = data.id;\r\n                this._nom = data.nom;\r\n                this._abreviation = data.abreviation;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._id;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/organisme.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.pers.dal {\r\n    export class OrganismeSet extends snm.services.dal.EntitySet<number, snm.pers.IOrganisme> implements IOrganismeSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.pers.OrganismeData) => {\r\n                    return new Organisme(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/pers/organisme\"\r\n            });\r\n            this.refresh();\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"../services/dal/db-context.ts\" />\r\n/// <reference path=\"./dal/personne-set.ts\" />\r\n/// <reference path=\"./dal/organisme-set.ts\" />\r\n/// <reference path=\"./components/personne/personne.component.ts\" />\r\n\r\nmodule snm.pers {\r\n    import DbContext = snm.services.dal.DbContext;\r\n\r\n    angular.module(snm.AppConstants.PERS_MODULE_NAME, [\r\n        \"snm.services.dal.dbContext\",\r\n        \"snm.pers.components.personne\"\r\n    ]).run([\"dbContext\", (dbContext: DbContext) => {\r\n        DbContext.addRepository(\"Personne\", (dbContext: DbContext, $http: ng.IHttpService) =>\r\n            new snm.pers.dal.PersonneSet(dbContext, $http));\r\n        DbContext.addRepository(\"Organisme\", (dbContext: DbContext, $http: ng.IHttpService) =>\r\n            new snm.pers.dal.OrganismeSet(dbContext, $http));\r\n    }]);\r\n}","/// <reference path=\"../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../app-constants.ts\" />\r\n/// <reference path=\"./components/panneaux-site-list/panneaux-site-list.component.ts\" />\r\n\r\nmodule snm.sarcos {\r\n    angular.module(snm.AppConstants.SARCOS_MODULE_NAME, [\r\n        \"snm.sarcos.components.panneauxSiteList\"\r\n    ]);\r\n}","/// <reference path=\"../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../typings/angular/angular-route.d.ts\" />\r\n/// <reference path=\"../typings/angular-material/angular-material.d.ts\" />\r\n/// <reference path=\"components/components.ts\" />\r\n/// <reference path=\"maps/maps.ts\" />\r\n/// <reference path=\"pages/pages.ts\" />\r\n/// <reference path=\"services/services.ts\" />\r\n/// <reference path=\"ops/ops.ts\" />\r\n/// <reference path=\"chrono/chrono.ts\" />\r\n/// <reference path=\"pers/pers.ts\" />\r\n/// <reference path=\"sarcos/sarcos.ts\" />\r\n\r\n/// <reference path=\"services/user-settings.ts\" />\r\n\r\nclass Bootstrap {\r\n    public static initialize(): void {\r\n        angular.module(snm.AppConstants.CORE_MODULE_NAME, [\r\n                snm.AppConstants.COMPONENTS_MODULE_NAME,\r\n                snm.AppConstants.MAPS_MODULE_NAME,\r\n                snm.AppConstants.PAGES_MODULE_NAME,\r\n                snm.AppConstants.SERVICES_MODULE_NAME,\r\n                snm.AppConstants.CHRONO_MODULE_NAME,\r\n                snm.AppConstants.OPS_MODULE_NAME,\r\n                snm.AppConstants.PERS_MODULE_NAME,\r\n                snm.AppConstants.SARCOS_MODULE_NAME,\r\n                \"ngRoute\",\r\n                \"ngMaterial\",\r\n                \"ngMessages\"\r\n            ])\r\n            .config(Bootstrap._configureRoutes)\r\n            .config(function ($mdThemingProvider) {\r\n                // Configure a dark theme with primary foreground yellow\r\n                $mdThemingProvider.theme('docs-dark', 'default')\r\n                    .primaryPalette('yellow')\r\n                    .dark();\r\n\r\n            });\r\n\r\n        angular.element(document).ready(() => {\r\n            let initInjector: angular.auto.IInjectorService = angular.injector([\"ng\"]);\r\n            let $http: ng.IHttpService = initInjector.get<ng.IHttpService>(\"$http\");\r\n            snm.services.settings.UserSettings.fetchSettings($http)\r\n                .then(() => {\r\n                    angular.bootstrap(document, [snm.AppConstants.CORE_MODULE_NAME]);\r\n                });\r\n        });\r\n    }\r\n\r\n    private static _configureRoutes($routeProvider: ng.route.IRouteProvider): void {\r\n        $routeProvider\r\n\r\n        // route for the home page\r\n            .when(\"/\", {\r\n                name: \"home\",\r\n                template: \"<main-page></main-page>\"\r\n            })\r\n\r\n            // route for the sites list page\r\n            .when('/sites', {\r\n                name: \"sites\",\r\n                template: \"<sites-page flex layout='column'></sites-page>\"\r\n            })\r\n\r\n            // route for the site details page\r\n            .when('/sites/:siteId', {\r\n                name: \"site-details\",\r\n                template: \"<site-details-page flex layout='column'></site-details-page>\"\r\n            })\r\n\r\n            // route for the site edit page\r\n            .when('/sites/edit/:siteId', {\r\n                name: \"site-edit\",\r\n                template: \"<site-edit-page flex layout='column'></site-edit-page>\"\r\n            })\r\n\r\n            //// route for the inventory page\r\n            //.when('/inventory', {\r\n            //\ttemplateUrl: 'pages/inventory.html',\r\n            //\tcontroller: Adunware.Rpg.Pages.InventoryPageController.CONTROLLER_NAME,\r\n            //\tcontrollerAs: \"vm\"\r\n            //})\r\n\r\n            .otherwise(\"/\");\r\n    }\r\n}\r\n\r\nBootstrap.initialize();","/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.ops {\r\n    export class Commune extends snm.services.dal.EntityBase<number> implements ICommune {\r\n\r\n        //region properties\r\n        private _code: number;\r\n\r\n        public get code(): number {\r\n            return this._code;\r\n        }\r\n\r\n        public set code(value: number) {\r\n            this._code = value;\r\n        }\r\n\r\n        private _nom: string;\r\n\r\n        public get nom(): string {\r\n            return this._nom;\r\n        }\r\n\r\n        public set nom(value: string) {\r\n            this._nom = value;\r\n        }\r\n\r\n        private _x: number;\r\n\r\n        public get x(): number {\r\n            return this._x;\r\n        }\r\n\r\n        public set x(value: number) {\r\n            this._x = value;\r\n        }\r\n\r\n        private _y: number;\r\n\r\n        public get y(): number {\r\n            return this._y;\r\n        }\r\n\r\n        public set y(value: number) {\r\n            this._y = value;\r\n        }\r\n\r\n        private _departementId: number;\r\n\r\n        public get departementId(): number {\r\n            return this._departementId;\r\n        }\r\n\r\n        public set departementId(value: number) {\r\n            this._departementId = value;\r\n        }\r\n\r\n        public get departement(): IDepartement {\r\n            return <IDepartement> this._dbContext.getRepository(\"Departement\").getByKey(this._departementId);\r\n        }\r\n\r\n        private _codeRegion: number;\r\n\r\n        public get codeRegion(): number {\r\n            return this._codeRegion;\r\n        }\r\n\r\n        public set codeRegion(value: number) {\r\n            this._codeRegion = value;\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: CommuneData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._code = data.code;\r\n                this._nom = data.nom;\r\n                this._x = data.x;\r\n                this._y = data.y;\r\n                this._departementId = data.departementId;\r\n                this._codeRegion = data.codeRegion;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._code;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/commune.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.ops.dal {\r\n    export class CommuneSet extends snm.services.dal.EntitySet<number, snm.ops.ICommune>\r\n        implements ICommuneSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.ops.Commune) => {\r\n                    return new Commune(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/ops/common/commune\"\r\n            });\r\n            this.refresh();\r\n        }\r\n    }\r\n}","/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.ops {\r\n    export class Departement extends snm.services.dal.EntityBase<number> implements IDepartement {\r\n\r\n        //region properties\r\n        private _numero: number;\r\n\r\n        public get numero(): number {\r\n            return this._numero;\r\n        }\r\n\r\n        public set numero(value: number) {\r\n            this._numero = value;\r\n        }\r\n\r\n        private _nom: string;\r\n\r\n        public get nom(): string {\r\n            return this._nom;\r\n        }\r\n\r\n        public set nom(value: string) {\r\n            this._nom = value;\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: DepartementData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._numero = data.numero;\r\n                this._nom = data.nom;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._numero;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/departement.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.ops.dal {\r\n    export class DepartementSet extends snm.services.dal.EntitySet<number, snm.ops.IDepartement>\r\n        implements IDepartementSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.ops.DepartementData) => {\r\n                    return new Departement(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/ops/common/departement\"\r\n            });\r\n            this.refresh();\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/commune.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.ops.dal {\r\n    export class OperationArcheoSet extends snm.services.dal.EntitySet<number, snm.ops.IOperationArcheo>\r\n        implements IOperationArcheoSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.ops.OperationArcheo) => {\r\n                    return new OperationArcheo(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/ops/operations\"\r\n            });\r\n            this.refresh();\r\n        }\r\n\r\n        public getBySiteId(siteId: number): IOperationArcheo[] {\r\n            if (typeof siteId !== \"number\") {\r\n                throw new Error(\"SiteId must be a number.\");\r\n            }\r\n\r\n            let result: IOperationArcheo[] = [];\r\n            this._map.forEach((op: IOperationArcheo) => {\r\n                if (op.siteId === siteId) {\r\n                    result.push(op);\r\n                }\r\n            });\r\n\r\n            return result;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../../typings/angular/angular.d.ts\" />\r\n/// <reference path=\"../models/commune.ts\" />\r\n/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-set.ts\" />\r\n\r\nmodule snm.ops.dal {\r\n    export class SiteArcheoSet extends snm.services.dal.EntitySet<number, snm.ops.ISiteArcheo>\r\n        implements ISiteArcheoSet {\r\n        constructor(dbContext: snm.services.dal.DbContext, $http: ng.IHttpService) {\r\n            super(dbContext, {\r\n                $http: $http,\r\n                parseEntity: (dbContext: snm.services.dal.DbContext, data: snm.ops.SiteArcheo) => {\r\n                    return new SiteArcheo(dbContext, data);\r\n                },\r\n                getAllUrl: \"api/ops/sites/summary\"\r\n            });\r\n            this.refresh();\r\n        }\r\n    }\r\n}","/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../chrono/definitions.ts\" />\r\n/// <reference path=\"../../pers/definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.ops {\r\n    import IPhaseChronologique = snm.chrono.IPhaseChronologique;\r\n    import IPersonne = snm.pers.IPersonne;\r\n    import IOrganisme = snm.pers.IOrganisme;\r\n\r\n    export class OperationArcheo extends snm.services.dal.EntityBase<number> implements IOperationArcheo {\r\n\r\n        //region properties\r\n        private _id: number;\r\n\r\n        public get id(): number {\r\n            return this._id;\r\n        }\r\n\r\n        public set id(value: number) {\r\n            this._id = value;\r\n        }\r\n\r\n        private _siteId: number;\r\n\r\n        public get siteId(): number {\r\n            return this._siteId;\r\n        }\r\n\r\n        public set siteId(value: number) {\r\n            this._siteId = value;\r\n        }\r\n\r\n        public get site(): ISiteArcheo {\r\n            return <ISiteArcheo> this._dbContext.getRepository(\"SiteArcheo\").getByKey(this._siteId);\r\n        }\r\n\r\n        private _codeCommune: number;\r\n\r\n        public get codeCommune(): number {\r\n            return this._codeCommune;\r\n        }\r\n\r\n        public set codeCommune(value: number) {\r\n            this._codeCommune = value;\r\n        }\r\n\r\n        public get commune(): ICommune {\r\n            return <ICommune> this._dbContext.getRepository(\"Commune\").getByKey(this._codeCommune);\r\n        }\r\n\r\n        private _x: number;\r\n\r\n        public get x(): number {\r\n            return this._x;\r\n        }\r\n\r\n        public set x(value: number) {\r\n            this._x = value;\r\n        }\r\n\r\n        private _y: number;\r\n\r\n        public get y(): number {\r\n            return this._y;\r\n        }\r\n\r\n        public set y(value: number) {\r\n            this._y = value;\r\n        }\r\n\r\n        private _localisation: string;\r\n\r\n        public get localisation(): string {\r\n            return this._localisation;\r\n        }\r\n\r\n        public set localisation(value: string) {\r\n            this._localisation = value;\r\n        }\r\n\r\n        private _responsableId: number;\r\n\r\n        public get responsableId(): number {\r\n            return this._responsableId;\r\n        }\r\n\r\n        public set responsableId(value: number) {\r\n            this._responsableId = value;\r\n        }\r\n\r\n        public get responsable(): IPersonne {\r\n            return <IPersonne> this._dbContext.getRepository(\"Personne\").getByKey(this._responsableId);\r\n        }\r\n\r\n        private _organismeId: number;\r\n\r\n        public get organismeId(): number {\r\n            return this._organismeId;\r\n        }\r\n\r\n        public set organismeId(value: number) {\r\n            this._organismeId = value;\r\n        }\r\n\r\n        public get organisme(): IOrganisme {\r\n            return <IOrganisme> this._dbContext.getRepository(\"Organisme\").getByKey(this._organismeId);\r\n        }\r\n\r\n        private _debutTravaux: string;\r\n\r\n        public get debutTravaux(): string {\r\n            return this._debutTravaux;\r\n        }\r\n\r\n        public set debutTravaux(value: string) {\r\n            this._debutTravaux = value;\r\n        }\r\n\r\n        private _finTravaux: string;\r\n\r\n        public get finTravaux(): string {\r\n            return this._finTravaux;\r\n        }\r\n\r\n        public set finTravaux(value: string) {\r\n            this._finTravaux = value;\r\n        }\r\n\r\n        private _debutOccupationId: number;\r\n\r\n        public get debutOccupationId(): number {\r\n            return this._debutOccupationId;\r\n        }\r\n\r\n        public set debutOccupationId(value: number) {\r\n            this._debutOccupationId = value;\r\n        }\r\n\r\n        public get debutOccupation(): snm.chrono.IPhaseChronologique {\r\n            return <snm.chrono.IPhaseChronologique> this._dbContext.getRepository(\"PhaseChronologique\")\r\n                .getByKey(this._debutOccupationId);\r\n        }\r\n\r\n        private _finOccupationId: number;\r\n\r\n        public get finOccupationId(): number {\r\n            return this._finOccupationId;\r\n        }\r\n\r\n        public set finOccupationId(value: number) {\r\n            this._finOccupationId = value;\r\n        }\r\n\r\n        public get finOccupation(): snm.chrono.IPhaseChronologique {\r\n            return <snm.chrono.IPhaseChronologique> this._dbContext.getRepository(\"PhaseChronologique\")\r\n                .getByKey(this._finOccupationId);\r\n        }\r\n\r\n        private _planId: number;\r\n\r\n        public get planId(): number {\r\n            return this._planId;\r\n        }\r\n\r\n        public set planId(value: number) {\r\n            this._planId = value;\r\n        }\r\n\r\n        private _identifications: IdentificationOperation[];\r\n\r\n        public get identifications(): IdentificationOperation[] {\r\n            return this._identifications;\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: OperationArcheoData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._id = data.id;\r\n                this._siteId = data.siteId;\r\n                this._codeCommune = data.codeCommune;\r\n                this._x = data.x;\r\n                this._y = data.y;\r\n                this._localisation = data.localisation;\r\n                this._responsableId = data.responsableId;\r\n                this._organismeId = data.organismeId;\r\n                this._debutTravaux = data.debutTravaux;\r\n                this._finTravaux = data.finTravaux;\r\n                this._debutOccupationId = data.debutOccupationId;\r\n                this._finOccupationId = data.finOccupationId;\r\n                this._planId = data.planId;\r\n                this._identifications = data.identifications;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._id;\r\n        }\r\n    }\r\n}","/// <reference path=\"../definitions.ts\" />\r\n/// <reference path=\"../../chrono/definitions.ts\" />\r\n/// <reference path=\"../../services/dal/entity-base.ts\" />\r\n/// <reference path=\"../../services/dal/db-context.ts\" />\r\n\r\nmodule snm.ops {\r\n    import IPhaseChronologique = snm.chrono.IPhaseChronologique;\r\n\r\n    export class SiteArcheo extends snm.services.dal.EntityBase<number> implements ISiteArcheo {\r\n\r\n        //region properties\r\n        private _id: number;\r\n\r\n        public get id(): number {\r\n            return this._id;\r\n        }\r\n\r\n        public set id(value: number) {\r\n            this._id = value;\r\n        }\r\n\r\n        private _codeCommune: number;\r\n\r\n        public get codeCommune(): number {\r\n            return this._codeCommune;\r\n        }\r\n\r\n        public set codeCommune(value: number) {\r\n            this._codeCommune = value;\r\n        }\r\n\r\n        public get commune(): ICommune {\r\n            return <ICommune> this._dbContext.getRepository(\"Commune\").getByKey(this._codeCommune);\r\n        }\r\n\r\n        private _x: number;\r\n\r\n        public get x(): number {\r\n            return this._x;\r\n        }\r\n\r\n        public set x(value: number) {\r\n            this._x = value;\r\n        }\r\n\r\n        private _y: number;\r\n\r\n        public get y(): number {\r\n            return this._y;\r\n        }\r\n\r\n        public set y(value: number) {\r\n            this._y = value;\r\n        }\r\n\r\n        private _localisation: string;\r\n\r\n        public get localisation(): string {\r\n            return this._localisation;\r\n        }\r\n\r\n        public set localisation(value: string) {\r\n            this._localisation = value;\r\n        }\r\n\r\n        public get operations(): IOperationArcheo[] {\r\n            let repo: IOperationArcheoSet = <IOperationArcheoSet> this._dbContext.getRepository(\"OperationArcheo\");\r\n            return repo.getBySiteId(this._id);\r\n        }\r\n\r\n        private _debutOccupationId: number;\r\n\r\n        public get debutOccupationId(): number {\r\n            return this._debutOccupationId;\r\n        }\r\n\r\n        public set debutOccupationId(value: number) {\r\n            this._debutOccupationId = value;\r\n        }\r\n\r\n        public get debutOccupation(): snm.chrono.IPhaseChronologique {\r\n            return <snm.chrono.IPhaseChronologique> this._dbContext.getRepository(\"PhaseChronologique\")\r\n                .getByKey(this._debutOccupationId);\r\n        }\r\n\r\n        private _finOccupationId: number;\r\n\r\n        public get finOccupationId(): number {\r\n            return this._finOccupationId;\r\n        }\r\n\r\n        public set finOccupationId(value: number) {\r\n            this._finOccupationId = value;\r\n        }\r\n\r\n        public get finOccupation(): snm.chrono.IPhaseChronologique {\r\n            return <snm.chrono.IPhaseChronologique> this._dbContext.getRepository(\"PhaseChronologique\")\r\n                .getByKey(this._finOccupationId);\r\n        }\r\n\r\n        private _planId: number;\r\n\r\n        public get planId(): number {\r\n            return this._planId;\r\n        }\r\n\r\n        public set planId(value: number) {\r\n            this._planId = value;\r\n        }\r\n\r\n        private _identifications: IdentificationSite[];\r\n\r\n        public get identifications(): IdentificationSite[] {\r\n            return this._identifications;\r\n        }\r\n\r\n        //endregion\r\n\r\n        constructor(dbContext: snm.services.dal.DbContext, data?: SiteArcheoData) {\r\n            super(dbContext);\r\n\r\n            if (data) {\r\n                this._id = data.id;\r\n                this._codeCommune = data.codeCommune;\r\n                this._x = data.x;\r\n                this._y = data.y;\r\n                this._localisation = data.localisation;\r\n                this._debutOccupationId = data.debutOccupationId;\r\n                this._finOccupationId = data.finOccupationId;\r\n                this._planId = data.planId;\r\n                this._identifications = data.identifications;\r\n            }\r\n        }\r\n\r\n        public getKey(): number {\r\n            return this._id;\r\n        }\r\n    }\r\n}"]}